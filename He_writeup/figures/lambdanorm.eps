%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: lambdanorm.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: steven schowalter
%%CreationDate: 4/14/09
%%BoundingBox: 0 0 321 287
%%HiResBoundingBox: 0 0 320.9727 286.6661
%%CropBox: 0 0 320.9727 286.6661
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.0 x406 R agm 4.4378 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 116 8%%BeginData: 10212 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFF%FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDC4FF7D7DFF7D52FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD0AFF52FF2752FFA8A8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8A8A8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%A8A8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7DFD08FFA87D7DA87D%FFA8FFA8FFFFFFA8FD07FFA8A8FD0EFFA8FD17FFA8FD17FFA8FFFFFFA8FD%17FFA8FD15FFA8FD0EFFA8FD61FFA8FD0EFFA8FD0DFFA8A8FD61FFA8FD1D%FFA8FD2BFFFD05A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFFD04A8FD04FFA8FD0EFFA8%FD0DFFA8A8FFFF527D7DFD26FF7D7DA87DA87DA8A8A87DA8A8A87DA8A8A8%7DA87DA87DA87DA8A8A87DA87DA8A8A87DA87DA87DA87DA87DA8A8A87DA8%7DA87D7DFFFFFFA8FD1DFFA8FFA87D52FD27FF7DFD06FFA87DFD05FF7DFD%05FFA8FFFFFFA8A8A8FD04FFA8A8FFFFFFA8FD06FFA8A8FFA8FFFFFF7DFF%FFFFA8FD0EFFA8FD0DFFA8A8FFFFA87DA8A8FD25FF7DA8FFAE5E83FF5227%2727F8A87D7DF852F8525227277D7D527D277D7D2752F852272752FD0427%A852A827272752A8FFA87DFFFFFFA8FD0EFFA8FD0EFFA8FFFFA827FF7DFD%25FF7DFFFFFF39AEFFA87D7D527DA8A8A85252FD067DFF7DA87DA8A8FD06%7DA8FD047DA8FFFFA87D7D52FFFFFF7DFFFFFFA8FD08FFA87DFF527DFFA8%FD0DFFA8A8FFFFA8FFA827A8FD24FFA8A8FD05FF7DA8A8FFA8FFA87DFFA8%FFFFA8A8A8FFA8A87DA8FFFFA8FF7DA8FFFFFFA8FD06FFA8FFA8A8FFFFA8%7DFD0CFFA827FF7D7DFFA8FD0EFFA8FD04FFA87DA8FD24FF7DFFFFFF79CB%FF52275227F87D7D7D2752275252F8527D7D52A8277D7D52522727522752%272727527DFD05527DFFFFFF7DFFFFFFA8FD08FFA87D7D527DFFA8FD0DFF%A8A8FD2BFF7DA8FFFF2B7FFF7D7D527D52A87DA85252527D7D7D52A8A8FD%047DA8527D527D527D7D7D527D52A87D7D527D52A8FFFFA87DFFFFFFA8FD%1DFFA8FD2BFF7DFD06FFA87DA8FD04FFA8A8A8FFA8FFA8FD17FFA8FD05FF%7DFFFFFFA8FD0EFFA8FD0DFFA8A8FD2BFF7DA8FFBCBCBCCA2E52F8A82752%7D7D52527D27F852F8A8FD1AFFA8A8FFFFFFA8FD1DFFA8FD2BFF7DFFFFBC%B5B5C3A8A87DA8A87DFF7DA87DA8527D7D52A8FD1BFF7DFFFFFFA8FD0EFF%A8FD0DFFA8A8FD2BFF7DA8FD2FFFA87DFFFFFFA8FFA87D7DFD19FFA8FD2B%FF7D7D7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87D7D7DFFFFFFFD05A87DFD%09FFA8FD0DFFA8A8FD2CFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FD04FFA8A8FFFF7DA8FD09FFA8FD0EFFA8FD61FFA87DA87D7DA8FFFFFFA8%A8FFA8A8FFA8FD0DFFA8A8FD62FFA8522752FD04FFA852FF277DFFA8FD0E%FFA8FD61FFA87D527DA8A8FFFFFFA8527D5252FFA8FD0DFF5E58FD61FFA8%FFA8A87DFD05FFA8FFA8FD10FFAE7DFD61FFA87D7D527DA8FD09FFA8FD0D%FFA8A8FD61FFA8FFA8FF7DFD19FFA8FD61FFFD05A87DFD09FFA8FD0DFFA8%A8FD61FFA8FFA87D7DFD19FFA8FD07FF7DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA8FD24FFA8FD0EFFA8FD0DFFA8A8FD06FFA87DA8FF%A8A8A8FFA8FFA8FFFD05A8FFA8FFA8FFA8FFFD05A8FFA8FFA8A87DFFA8A8%A8FF52A8A8FFA8FFA8FFA8FFA8FFA8A87DFD24FFA8FFA87D7DFD18FF8358%FD07FF7DFFA8527DA8FD04FFA87D52527D7DFFFFA8FFFFFF7D7D7D5252FD%05FF527D527D277DA87D7DFD0CFFA8FD24FFA8FFA852A87DFFFFFFA87DFF%A87DFFA8FD0DFF337DFD06FFA87DFF52A8FD06FF7DA8FF52FF52A87D5252%A8FF5252FF7DFFFF7D277DFF7D5252FF7DA8FF7DA8FD0CFF7DFD26FF7DA8%7DFD04FF7D27A82752FFA8FD0DFF3958FD07FF7DFF527DA8A87DA8FFFF52%FFA852FFA87DFF7D7DFF7D52527D52A8FFA87DA8FF527D27FF52A8FD0FFF%A8FD24FFA8A87D2752A8FFFFFF7D527D5252FFA8FD0CFFAE0A5EFD06FFA8%7DFFFF527D52A87D7DA87D7DA852FF52FD05FF7DFF7D7D52A8FD04FFA87D%527DA87DA8FD0FFF7DFD24FFA8FFA8A87DFD05FFA8FFA8FD0FFFAEAEA8FD%07FF7DFD04FF7D7DA8527DFFA8FFFFA8A8FD25FFA8FD24FFA8FFA87D52A8%FD09FFA8FD0DFF33A8FD06FFA8A8FD04FFA87D7DA87DFD24FFA8A8FD05FF%7DFD24FFA8FFFF7D7DFD18FF5E83FD07FF7DFD13FFA8FFFFFFA8FD11FFA8%FFFFFF52FD05FFA8A8FD24FFA8FFA85252A8FD09FFA8FD0CFF3983A8FD06%FFA87DFD08FF27FFA8A8A8FF527DFF527D7DA85252527DFF7DA8FF7D52FF%527D527D527DA87DA85227A87D7DA8FD05FF7DFD24FFA8FFA87D52FD16FF%891010A8FD07FF7DFD07FF7D27A8A8277DA87D7DFF7DA87DFFA87D527DA8%5252FF7DA8A8A8527D7DFF7D5227FFA8A8FFFFA8FD06FFA8FD24FFA8FFA8%527DFD0AFFA8FD0BFF333983A8FD06FFA87DFD06FFA87D527DA87D7DFF52%7DA8FD047DA87D52A8FF7D7DFF7D52A8527D527D527DA87DFF7D52FD09FF%7DFD24FFA8FF7D7D527DFD09FFA8FD0BFF5E10FFA8FD07FF7DFD09FFA8FD%27FF52FFFFA8FD24FFA8FFA827527DFFFFFFA8A8FFA8A8FFA8FD0BFF3310%58FD07FFA87DFD06FFA87D7DFD05FF7DA8FF7D7DFD04A87DA87D7DFFA8FF%FFA87DFF7DA87DA87DA87DA87DA8FF7D52A87D527DFF7DFD26FFA85252FD%04FF7D27A8527DFFA8FD0AFF835EAEFFA8FD07FF7DFD07FF5227A8FF7DA8%A87D7DFF527D52A87DFF7D7D52A8FF7D7DFF7D7DA87D527D527D7D7D527D%7DFF7D7DA8FF7DFFFFA8FD24FFA8A8A87D7DA8FFFFFF7D527D5252FFA8FD%0AFF3939FFA8A8FD06FFA8A8FD06FFA87D277DA85252FF527DA87D527D7D%7DA8A87DA87DFF2752A87D52A8527D5252527D7D52527DFFA87DFD05FF7D%FD24FFA8A8A8FFA8FD05FFA8FFA8FD0CFFAE1089FFFFA8FD07FF7DFD07FF%7D7DA8FFA8FFFFA87DFF7DA87DFF7DA87DA8A8FFFFFFA8FF7DFD07A87DFD%04A8FF7DA8FD05FFA8FD24FFA8A87D7D52A8FD09FFA8FD09FF331083FFA8%A8FD06FFA87DA8FFA8FFA8FFA8FFFFFFA8FFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFA8FFA8FFA8FD0DFFA8FFFFFFA8FFA8A87DFD24FFA8FFA87DA8FD14FF%393989FFFFA8FD07FF7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D%A87DA8FD24FFA8FD04FFA8FD09FFA8FD08FF8310FFFFFFA8A8FD2CFFA8FD%34FFA8FF7D5252FD13FF1039FD04FFA8FD2BFFA87DFD34FFA8FFA82752A8%FD09FFA8FD07FF5E10A8FFFFFFA8A8FD2CFF7D7DFD33FFA8FFA87D52FD0A%FFA8FD07FF3910FD05FFA8FD2DFF7DFD33FFA8FFFF7DA8A8FFFFFFA8A8FF%FFA8FFA8FD06FF5E1083AEFFFFFFA8A8FD2EFF52FD34FFA85252FD04FF7D%27FF5252FFA8FD06FF1089FD06FFA8FD2EFFA87DFD31FFA8A8A85252A8FF%FFFF7DFD0452FFA8FD05FFA81083FD05FFA8A8FD2FFF7D7DFD1CFF3983FF%FFFFA88383FF8383FFFFFF8383FD04FFA8A8527D7DFD05FFA8FD0AFF3933%FD07FFA8FD30FF7DA8FD1BFFAEFFFFFF83395EAEFF5E5EFFFFFF5E89FFFF%83FFA8A8A87DFFA8FD09FFA8FD04FF8310AEFD06FFA8A8FD22FFAEAEFD0C%FFA87DFD0AFFAE89AEFD07FFA8393383FD06FFA839835E83FF3983FD07FF%3983A8A8527D52FD0EFFAE1089FD08FFA8FD22FFAE33FD0DFF7D7DFD0AFF%33FD07FF835E83AEA8FD07FF83FF83AEFD05FFAE83FD05FFA8A8FFFFFFA8%FD09FFA8FFFFFF1010A8FD07FFA8A8FD22FFA8FD0FFF7DA8FD11FFAE83FF%FFFFAEFD0FFF5E5EFD05FFA8FD11FF8339AEFD09FFA8FD33FF7DFD09FF83%AEFFFFFF89AEFD1DFFA8FD0EFFA8FF83105EFD09FFCB585EAEFD1EFFA8FD%13FF52FD06FFAEAE835EFFFFFF33AEFD1DFFA8FD0DFFA8FFAE1033FD0BFF%581039FD1BFF39FF3983AEAEFD0CFFAEFD04FFA87DFD05FF3983FD24FFA8%FD08FFA87DFF7DA8FFA8FF83FD0BFFA8A8833983FD13FFA883FFFFFF8383%831010FFAE105EA8FF83AEFF5E5EFFFFFF5E5EFD05FF7DA8FD05FFA8FD2D%FF7D27FF7D7DFFA8FD0EFFA8FF5E3983FD12FFAE5EAE39FF5E395E5EA8FF%AE8333AEFF5E83FFA8AEFD04FFAEFD06FF7DFD2AFFA8FD08FF7D527D527D%FFA8FD0DFFA8A8FFFF33101039335E33FFAEAEFF89835E5E5E335E5E165E%8310395E5E103983FF3339A8FD13FFA87DFD29FFA8FD09FFA8FFA8FD11FF%A8FFFFFFAEAE5E5E3939105E103910391039331610395E5E835E838383FD%04FF5E5EFD15FF7D7D7DFD1FFFCACAC3C3BCC3BCBC93FD0EFFA8FD0DFFA8%A8FD09FF5E105E5EFF835E83FF83AEA8FD05FFA8FD05FF8383FD14FFA87D%27A8FD10FFCAFFCACAC3C3BCC3FD04BCB5BCB5BCB5BCBCC3BCCACAA1FD1D%FFA8FD19FFAE39AEFD21FFCAFFCACAFD04C3BCC3BCBCB5FD04BCC3BCFD04%C3CACAFD0BFFA8FD0EFFA8FD0DFFA8A8FD1AFFA8FD0BFFCBFFA9FFA9CBA3%797EA3544E2A2B2B4F9ABCBCBCB5BCB5BCB5FD04BCFD04C3CACAFFCAFD16%FFA8FD1DFFA8FD17FFCFFFFFFFCACBA8A2787F787954794E2B4E4E2A2BF9%4F244F2A789B9C557FA2C3C3CACAFFCAFD25FFA8FD0EFFA8FD05FFCBFFA9%A97FA97F7F54547FA3A37FA2A37EA278A278789B9C777971784D71704E47%4824486A24244E244F4E782B792A7F7EA3A8A9A9CBA8FFCFFFCFFD30FFA8%FD0DFFCA9B78A2BC79772B4E72252B2472484E23724E72F9784E4F782B72%792BA24E794F7955797F7F55A97FA9A9FFA9FD45FFA8FD08FFA87DFFA8A8%FF714F4EC354A27EA2CAFFFFFFCAFFCAA8FD6AFF7D27A8277DFFA8A8FFAF%FFAECFA8FFA8FFA8FFA8FF7DAFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8%FFA8FFA8FFA8A8A8FFA8A8A8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8%FFA8FFA8A8A8FFA8FFA8FFA8FFA8A8A8FFA8A8A8FFA8FFA8FFA8FFA8A8A8%FFA8A8A8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FF7DFD08FF7D527D5252FFA8%FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8%FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FD0AFFA8FFA8FD86%FFA852A8A852FD13FF7D52FF5252FD13FF527DA8527DFD13FF27A8A827A8%FD13FF52FF527DFD1DFF52A85252A8FD12FFA852FF527DFD13FF7D52A827%7DFD13FF527DFF27A8FD12FF7D277D5252FD1CFFA8527D7D7DFD13FF7D52%7D7DA8FD13FF7DA87D7DA8FD12FFA87DA87D7DA8FD13FFFD047DFDC2FFA8%7D527DFD17FF7D52A852A8FD61FF7D52FD057DA87D7D7DA87D7D7DA87D52%7DA87D7D7DA8FFA87D5252A87D7DFD61FF7D7DF852527D52275252275252%7D2752527D5252522727FF52FF5252A8FF52FD60FFA8527DFD055227527D%52527D7D52527D7D5227A8527DFFFD047D277D7DFD61FFA8FFA8FFA8FFA8%5252FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA852A8FFA87DA8FD68FFA8FDBD%FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2009-04-14T03:23:47-04:00</xap:CreateDate>
         <xap:ModifyDate>2009-04-14T17:43:33-04:00</xap:ModifyDate>
         <xap:MetadataDate>2009-04-14T17:43:33-04:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>232</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA6AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;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</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:C3E225FF352ADE1197178377D73854E0</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:1C8364EEAC2ADE1190A9BEFE60315351</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource"/>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>800.000000</stDim:w>
            <stDim:h>600.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Times-Roman</stFnt:fontName>
                  <stFnt:fontFamily>Times</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.0d6e5</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>TimesNewRomanPSMT</stFnt:fontName>
                  <stFnt:fontFamily>Times New Roman</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.01.3x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times New Roman.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -286.666 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 286.666 li
320.973 286.666 li
320.973 0 li
cp
clp
[1 0 0 1 0 0 ]ct
42.4102 227.299 mo
42.4102 226.924 42.2227 226.549 41.9727 226.236 cv
41.6602 225.986 41.2852 225.799 40.9102 225.799 cv
40.5352 225.799 40.1602 225.986 39.8477 226.236 cv
39.5977 226.549 39.4102 226.924 39.4102 227.299 cv
39.4102 227.674 39.5977 228.049 39.8477 228.361 cv
40.1602 228.611 40.5352 228.799 40.9102 228.799 cv
41.2852 228.799 41.6602 228.611 41.9727 228.361 cv
42.2227 228.049 42.4102 227.674 42.4102 227.299 cv
42.4102 227.299 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0.811765 0.027451 1 0 cmyk
f
43.1602 226.736 mo
43.1602 226.361 42.9727 225.986 42.7227 225.674 cv
42.4102 225.424 42.0352 225.236 41.6602 225.236 cv
41.2852 225.236 40.9102 225.424 40.5977 225.674 cv
40.3477 225.986 40.1602 226.361 40.1602 226.736 cv
40.1602 227.111 40.3477 227.486 40.5977 227.799 cv
40.9102 228.049 41.2852 228.236 41.6602 228.236 cv
42.0352 228.236 42.4102 228.049 42.7227 227.799 cv
42.9727 227.486 43.1602 227.111 43.1602 226.736 cv
43.1602 226.736 li
cp
f
43.7227 226.611 mo
43.7227 226.236 43.5352 225.861 43.2852 225.549 cv
42.9727 225.299 42.5977 225.111 42.2227 225.111 cv
41.8477 225.111 41.4727 225.299 41.1602 225.549 cv
40.9102 225.861 40.7227 226.236 40.7227 226.611 cv
40.7227 226.986 40.9102 227.361 41.1602 227.674 cv
41.4727 227.924 41.8477 228.111 42.2227 228.111 cv
42.5977 228.111 42.9727 227.924 43.2852 227.674 cv
43.5352 227.361 43.7227 226.986 43.7227 226.611 cv
43.7227 226.611 li
cp
f
44.3477 225.674 mo
44.3477 225.299 44.1602 224.924 43.9102 224.611 cv
43.5977 224.361 43.2227 224.174 42.8477 224.174 cv
42.4727 224.174 42.0977 224.361 41.7852 224.611 cv
41.5352 224.924 41.3477 225.299 41.3477 225.674 cv
41.3477 226.049 41.5352 226.424 41.7852 226.736 cv
42.0977 226.986 42.4727 227.174 42.8477 227.174 cv
43.2227 227.174 43.5977 226.986 43.9102 226.736 cv
44.1602 226.424 44.3477 226.049 44.3477 225.674 cv
44.3477 225.674 li
cp
f
44.9102 225.799 mo
44.9102 225.424 44.7227 225.049 44.4727 224.736 cv
44.1602 224.486 43.7852 224.299 43.4102 224.299 cv
43.0352 224.299 42.6602 224.486 42.3477 224.736 cv
42.0977 225.049 41.9102 225.424 41.9102 225.799 cv
41.9102 226.174 42.0977 226.549 42.3477 226.861 cv
42.6602 227.111 43.0352 227.299 43.4102 227.299 cv
43.7852 227.299 44.1602 227.111 44.4727 226.861 cv
44.7227 226.549 44.9102 226.174 44.9102 225.799 cv
44.9102 225.799 li
cp
f
46.3477 224.174 mo
46.3477 223.799 46.1602 223.424 45.9102 223.111 cv
45.5977 222.861 45.2227 222.674 44.8477 222.674 cv
44.4727 222.674 44.0977 222.861 43.7852 223.111 cv
43.5352 223.424 43.3477 223.799 43.3477 224.174 cv
43.3477 224.549 43.5352 224.924 43.7852 225.236 cv
44.0977 225.486 44.4727 225.674 44.8477 225.674 cv
45.2227 225.674 45.5977 225.486 45.9102 225.236 cv
46.1602 224.924 46.3477 224.549 46.3477 224.174 cv
46.3477 224.174 li
cp
f
46.9102 223.049 mo
46.9102 222.674 46.7227 222.299 46.4727 221.986 cv
46.1602 221.736 45.7852 221.549 45.4102 221.549 cv
45.0352 221.549 44.6602 221.736 44.3477 221.986 cv
44.0977 222.299 43.9102 222.674 43.9102 223.049 cv
43.9102 223.424 44.0977 223.799 44.3477 224.111 cv
44.6602 224.361 45.0352 224.549 45.4102 224.549 cv
45.7852 224.549 46.1602 224.361 46.4727 224.111 cv
46.7227 223.799 46.9102 223.424 46.9102 223.049 cv
46.9102 223.049 li
cp
f
48.2227 220.424 mo
48.2227 220.049 48.0352 219.674 47.7852 219.361 cv
47.4727 219.111 47.0977 218.924 46.7227 218.924 cv
46.3477 218.924 45.9727 219.111 45.6602 219.361 cv
45.4102 219.674 45.2227 220.049 45.2227 220.424 cv
45.2227 220.799 45.4102 221.174 45.6602 221.486 cv
45.9727 221.736 46.3477 221.924 46.7227 221.924 cv
47.0977 221.924 47.4727 221.736 47.7852 221.486 cv
48.0352 221.174 48.2227 220.799 48.2227 220.424 cv
48.2227 220.424 li
cp
f
48.6602 219.674 mo
48.6602 219.299 48.4727 218.924 48.2227 218.611 cv
47.9102 218.361 47.5352 218.174 47.1602 218.174 cv
46.7852 218.174 46.4102 218.361 46.0977 218.611 cv
45.8477 218.924 45.6602 219.299 45.6602 219.674 cv
45.6602 220.049 45.8477 220.424 46.0977 220.736 cv
46.4102 220.986 46.7852 221.174 47.1602 221.174 cv
47.5352 221.174 47.9102 220.986 48.2227 220.736 cv
48.4727 220.424 48.6602 220.049 48.6602 219.674 cv
48.6602 219.674 li
cp
f
49.2227 219.799 mo
49.2227 219.424 49.0352 219.049 48.7852 218.736 cv
48.4727 218.486 48.0977 218.299 47.7227 218.299 cv
47.3477 218.299 46.9727 218.486 46.6602 218.736 cv
46.4102 219.049 46.2227 219.424 46.2227 219.799 cv
46.2227 220.174 46.4102 220.549 46.6602 220.861 cv
46.9727 221.111 47.3477 221.299 47.7227 221.299 cv
48.0977 221.299 48.4727 221.111 48.7852 220.861 cv
49.0352 220.549 49.2227 220.174 49.2227 219.799 cv
49.2227 219.799 li
cp
f
49.8477 217.736 mo
49.8477 217.361 49.6602 216.986 49.4102 216.674 cv
49.0977 216.424 48.7227 216.236 48.3477 216.236 cv
47.9727 216.236 47.5977 216.424 47.2852 216.674 cv
47.0352 216.986 46.8477 217.361 46.8477 217.736 cv
46.8477 218.111 47.0352 218.486 47.2852 218.799 cv
47.5977 219.049 47.9727 219.236 48.3477 219.236 cv
48.7227 219.236 49.0977 219.049 49.4102 218.799 cv
49.6602 218.486 49.8477 218.111 49.8477 217.736 cv
49.8477 217.736 li
cp
f
50.8477 218.111 mo
50.8477 217.736 50.6602 217.361 50.4102 217.049 cv
50.0977 216.799 49.7227 216.611 49.3477 216.611 cv
48.9727 216.611 48.5977 216.799 48.2852 217.049 cv
48.0352 217.361 47.8477 217.736 47.8477 218.111 cv
47.8477 218.486 48.0352 218.861 48.2852 219.174 cv
48.5977 219.424 48.9727 219.611 49.3477 219.611 cv
49.7227 219.611 50.0977 219.424 50.4102 219.174 cv
50.6602 218.861 50.8477 218.486 50.8477 218.111 cv
50.8477 218.111 li
cp
f
51.3477 215.861 mo
51.3477 215.486 51.1602 215.111 50.9102 214.799 cv
50.5977 214.549 50.2227 214.361 49.8477 214.361 cv
49.4727 214.361 49.0977 214.549 48.7852 214.799 cv
48.5352 215.111 48.3477 215.486 48.3477 215.861 cv
48.3477 216.236 48.5352 216.611 48.7852 216.924 cv
49.0977 217.174 49.4727 217.361 49.8477 217.361 cv
50.2227 217.361 50.5977 217.174 50.9102 216.924 cv
51.1602 216.611 51.3477 216.236 51.3477 215.861 cv
51.3477 215.861 li
cp
f
52.6602 214.236 mo
52.6602 213.861 52.4727 213.486 52.2227 213.174 cv
51.9102 212.924 51.5352 212.736 51.1602 212.736 cv
50.7852 212.736 50.4102 212.924 50.0977 213.174 cv
49.8477 213.486 49.6602 213.861 49.6602 214.236 cv
49.6602 214.611 49.8477 214.986 50.0977 215.299 cv
50.4102 215.549 50.7852 215.736 51.1602 215.736 cv
51.5352 215.736 51.9102 215.549 52.2227 215.299 cv
52.4727 214.986 52.6602 214.611 52.6602 214.236 cv
52.6602 214.236 li
cp
f
53.4102 213.174 mo
53.4102 212.799 53.2227 212.424 52.9727 212.111 cv
52.6602 211.861 52.2852 211.674 51.9102 211.674 cv
51.5352 211.674 51.1602 211.861 50.8477 212.111 cv
50.5977 212.424 50.4102 212.799 50.4102 213.174 cv
50.4102 213.549 50.5977 213.924 50.8477 214.236 cv
51.1602 214.486 51.5352 214.674 51.9102 214.674 cv
52.2852 214.674 52.6602 214.486 52.9727 214.236 cv
53.2227 213.924 53.4102 213.549 53.4102 213.174 cv
53.4102 213.174 li
cp
f
54.2227 212.424 mo
54.2227 212.049 54.0352 211.674 53.7852 211.361 cv
53.4727 211.111 53.0977 210.924 52.7227 210.924 cv
52.3477 210.924 51.9727 211.111 51.6602 211.361 cv
51.4102 211.674 51.2227 212.049 51.2227 212.424 cv
51.2227 212.799 51.4102 213.174 51.6602 213.486 cv
51.9727 213.736 52.3477 213.924 52.7227 213.924 cv
53.0977 213.924 53.4727 213.736 53.7852 213.486 cv
54.0352 213.174 54.2227 212.799 54.2227 212.424 cv
54.2227 212.424 li
cp
f
54.5352 211.361 mo
54.5352 210.986 54.3477 210.611 54.0977 210.299 cv
53.7852 210.049 53.4102 209.861 53.0352 209.861 cv
52.6602 209.861 52.2852 210.049 51.9727 210.299 cv
51.7227 210.611 51.5352 210.986 51.5352 211.361 cv
51.5352 211.736 51.7227 212.111 51.9727 212.424 cv
52.2852 212.674 52.6602 212.861 53.0352 212.861 cv
53.4102 212.861 53.7852 212.674 54.0977 212.424 cv
54.3477 212.111 54.5352 211.736 54.5352 211.361 cv
54.5352 211.361 li
cp
f
55.5352 207.674 mo
55.5352 207.299 55.3477 206.924 55.0977 206.611 cv
54.7852 206.361 54.4102 206.174 54.0352 206.174 cv
53.6602 206.174 53.2852 206.361 52.9727 206.611 cv
52.7227 206.924 52.5352 207.299 52.5352 207.674 cv
52.5352 208.049 52.7227 208.424 52.9727 208.736 cv
53.2852 208.986 53.6602 209.174 54.0352 209.174 cv
54.4102 209.174 54.7852 208.986 55.0977 208.736 cv
55.3477 208.424 55.5352 208.049 55.5352 207.674 cv
55.5352 207.674 li
cp
f
56.0352 204.986 mo
56.0352 204.611 55.8477 204.236 55.5977 203.924 cv
55.2852 203.674 54.9102 203.486 54.5352 203.486 cv
54.1602 203.486 53.7852 203.674 53.4727 203.924 cv
53.2227 204.236 53.0352 204.611 53.0352 204.986 cv
53.0352 205.361 53.2227 205.736 53.4727 206.049 cv
53.7852 206.299 54.1602 206.486 54.5352 206.486 cv
54.9102 206.486 55.2852 206.299 55.5977 206.049 cv
55.8477 205.736 56.0352 205.361 56.0352 204.986 cv
56.0352 204.986 li
cp
f
56.2227 209.111 mo
56.2227 208.736 56.0352 208.361 55.7852 208.049 cv
55.4727 207.799 55.0977 207.611 54.7227 207.611 cv
54.3477 207.611 53.9727 207.799 53.6602 208.049 cv
53.4102 208.361 53.2227 208.736 53.2227 209.111 cv
53.2227 209.486 53.4102 209.861 53.6602 210.174 cv
53.9727 210.424 54.3477 210.611 54.7227 210.611 cv
55.0977 210.611 55.4727 210.424 55.7852 210.174 cv
56.0352 209.861 56.2227 209.486 56.2227 209.111 cv
56.2227 209.111 li
cp
f
57.2852 204.799 mo
57.2852 204.424 57.0977 204.049 56.8477 203.736 cv
56.5352 203.486 56.1602 203.299 55.7852 203.299 cv
55.4102 203.299 55.0352 203.486 54.7227 203.736 cv
54.4727 204.049 54.2852 204.424 54.2852 204.799 cv
54.2852 205.174 54.4727 205.549 54.7227 205.861 cv
55.0352 206.111 55.4102 206.299 55.7852 206.299 cv
56.1602 206.299 56.5352 206.111 56.8477 205.861 cv
57.0977 205.549 57.2852 205.174 57.2852 204.799 cv
57.2852 204.799 li
cp
f
58.1602 203.174 mo
58.1602 202.799 57.9727 202.424 57.7227 202.111 cv
57.4102 201.861 57.0352 201.674 56.6602 201.674 cv
56.2852 201.674 55.9102 201.861 55.5977 202.111 cv
55.3477 202.424 55.1602 202.799 55.1602 203.174 cv
55.1602 203.549 55.3477 203.924 55.5977 204.236 cv
55.9102 204.486 56.2852 204.674 56.6602 204.674 cv
57.0352 204.674 57.4102 204.486 57.7227 204.236 cv
57.9727 203.924 58.1602 203.549 58.1602 203.174 cv
58.1602 203.174 li
cp
f
58.7227 201.361 mo
58.7227 200.986 58.5352 200.611 58.2852 200.299 cv
57.9727 200.049 57.5977 199.861 57.2227 199.861 cv
56.8477 199.861 56.4727 200.049 56.1602 200.299 cv
55.9102 200.611 55.7227 200.986 55.7227 201.361 cv
55.7227 201.736 55.9102 202.111 56.1602 202.424 cv
56.4727 202.674 56.8477 202.861 57.2227 202.861 cv
57.5977 202.861 57.9727 202.674 58.2852 202.424 cv
58.5352 202.111 58.7227 201.736 58.7227 201.361 cv
58.7227 201.361 li
cp
f
59.7227 199.611 mo
59.7227 199.236 59.5352 198.861 59.2852 198.549 cv
58.9727 198.299 58.5977 198.111 58.2227 198.111 cv
57.8477 198.111 57.4727 198.299 57.1602 198.549 cv
56.9102 198.861 56.7227 199.236 56.7227 199.611 cv
56.7227 199.986 56.9102 200.361 57.1602 200.674 cv
57.4727 200.924 57.8477 201.111 58.2227 201.111 cv
58.5977 201.111 58.9727 200.924 59.2852 200.674 cv
59.5352 200.361 59.7227 199.986 59.7227 199.611 cv
59.7227 199.611 li
cp
f
59.9102 199.674 mo
59.9102 199.299 59.7227 198.924 59.4727 198.611 cv
59.1602 198.361 58.7852 198.174 58.4102 198.174 cv
58.0352 198.174 57.6602 198.361 57.3477 198.611 cv
57.0977 198.924 56.9102 199.299 56.9102 199.674 cv
56.9102 200.049 57.0977 200.424 57.3477 200.736 cv
57.6602 200.986 58.0352 201.174 58.4102 201.174 cv
58.7852 201.174 59.1602 200.986 59.4727 200.736 cv
59.7227 200.424 59.9102 200.049 59.9102 199.674 cv
59.9102 199.674 li
cp
f
60.5352 202.549 mo
60.5352 202.174 60.3477 201.799 60.0977 201.486 cv
59.7852 201.236 59.4102 201.049 59.0352 201.049 cv
58.6602 201.049 58.2852 201.236 57.9727 201.486 cv
57.7227 201.799 57.5352 202.174 57.5352 202.549 cv
57.5352 202.924 57.7227 203.299 57.9727 203.611 cv
58.2852 203.861 58.6602 204.049 59.0352 204.049 cv
59.4102 204.049 59.7852 203.861 60.0977 203.611 cv
60.3477 203.299 60.5352 202.924 60.5352 202.549 cv
60.5352 202.549 li
cp
f
61.0352 196.611 mo
61.0352 196.236 60.8477 195.861 60.5977 195.549 cv
60.2852 195.299 59.9102 195.111 59.5352 195.111 cv
59.1602 195.111 58.7852 195.299 58.4727 195.549 cv
58.2227 195.861 58.0352 196.236 58.0352 196.611 cv
58.0352 196.986 58.2227 197.361 58.4727 197.674 cv
58.7852 197.924 59.1602 198.111 59.5352 198.111 cv
59.9102 198.111 60.2852 197.924 60.5977 197.674 cv
60.8477 197.361 61.0352 196.986 61.0352 196.611 cv
61.0352 196.611 li
cp
f
61.6602 196.111 mo
61.6602 195.736 61.4727 195.361 61.2227 195.049 cv
60.9102 194.799 60.5352 194.611 60.1602 194.611 cv
59.7852 194.611 59.4102 194.799 59.0977 195.049 cv
58.8477 195.361 58.6602 195.736 58.6602 196.111 cv
58.6602 196.486 58.8477 196.861 59.0977 197.174 cv
59.4102 197.424 59.7852 197.611 60.1602 197.611 cv
60.5352 197.611 60.9102 197.424 61.2227 197.174 cv
61.4727 196.861 61.6602 196.486 61.6602 196.111 cv
61.6602 196.111 li
cp
f
62.0352 195.049 mo
62.0352 194.674 61.8477 194.299 61.5977 193.986 cv
61.2852 193.736 60.9102 193.549 60.5352 193.549 cv
60.1602 193.549 59.7852 193.736 59.4727 193.986 cv
59.2227 194.299 59.0352 194.674 59.0352 195.049 cv
59.0352 195.424 59.2227 195.799 59.4727 196.111 cv
59.7852 196.361 60.1602 196.549 60.5352 196.549 cv
60.9102 196.549 61.2852 196.361 61.5977 196.111 cv
61.8477 195.799 62.0352 195.424 62.0352 195.049 cv
62.0352 195.049 li
cp
f
62.5977 196.174 mo
62.5977 195.799 62.4102 195.424 62.1602 195.111 cv
61.8477 194.861 61.4727 194.674 61.0977 194.674 cv
60.7227 194.674 60.3477 194.861 60.0352 195.111 cv
59.7852 195.424 59.5977 195.799 59.5977 196.174 cv
59.5977 196.549 59.7852 196.924 60.0352 197.236 cv
60.3477 197.486 60.7227 197.674 61.0977 197.674 cv
61.4727 197.674 61.8477 197.486 62.1602 197.236 cv
62.4102 196.924 62.5977 196.549 62.5977 196.174 cv
62.5977 196.174 li
cp
f
62.9102 193.486 mo
62.9102 193.111 62.7227 192.736 62.4727 192.424 cv
62.1602 192.174 61.7852 191.986 61.4102 191.986 cv
61.0352 191.986 60.6602 192.174 60.3477 192.424 cv
60.0977 192.736 59.9102 193.111 59.9102 193.486 cv
59.9102 193.861 60.0977 194.236 60.3477 194.549 cv
60.6602 194.799 61.0352 194.986 61.4102 194.986 cv
61.7852 194.986 62.1602 194.799 62.4727 194.549 cv
62.7227 194.236 62.9102 193.861 62.9102 193.486 cv
62.9102 193.486 li
cp
f
63.4727 190.424 mo
63.4727 190.049 63.2852 189.674 63.0352 189.361 cv
62.7227 189.111 62.3477 188.924 61.9727 188.924 cv
61.5977 188.924 61.2227 189.111 60.9102 189.361 cv
60.6602 189.674 60.4727 190.049 60.4727 190.424 cv
60.4727 190.799 60.6602 191.174 60.9102 191.486 cv
61.2227 191.736 61.5977 191.924 61.9727 191.924 cv
62.3477 191.924 62.7227 191.736 63.0352 191.486 cv
63.2852 191.174 63.4727 190.799 63.4727 190.424 cv
63.4727 190.424 li
cp
f
64.0977 190.611 mo
64.0977 190.236 63.9102 189.861 63.6602 189.549 cv
63.3477 189.299 62.9727 189.111 62.5977 189.111 cv
62.2227 189.111 61.8477 189.299 61.5352 189.549 cv
61.2852 189.861 61.0977 190.236 61.0977 190.611 cv
61.0977 190.986 61.2852 191.361 61.5352 191.674 cv
61.8477 191.924 62.2227 192.111 62.5977 192.111 cv
62.9727 192.111 63.3477 191.924 63.6602 191.674 cv
63.9102 191.361 64.0977 190.986 64.0977 190.611 cv
64.0977 190.611 li
cp
f
64.7227 187.674 mo
64.7227 187.299 64.5352 186.924 64.2852 186.611 cv
63.9727 186.361 63.5977 186.174 63.2227 186.174 cv
62.8477 186.174 62.4727 186.361 62.1602 186.611 cv
61.9102 186.924 61.7227 187.299 61.7227 187.674 cv
61.7227 188.049 61.9102 188.424 62.1602 188.736 cv
62.4727 188.986 62.8477 189.174 63.2227 189.174 cv
63.5977 189.174 63.9727 188.986 64.2852 188.736 cv
64.5352 188.424 64.7227 188.049 64.7227 187.674 cv
64.7227 187.674 li
cp
f
65.2852 187.861 mo
65.2852 187.486 65.0977 187.111 64.8477 186.799 cv
64.5352 186.549 64.1602 186.361 63.7852 186.361 cv
63.4102 186.361 63.0352 186.549 62.7227 186.799 cv
62.4727 187.111 62.2852 187.486 62.2852 187.861 cv
62.2852 188.236 62.4727 188.611 62.7227 188.924 cv
63.0352 189.174 63.4102 189.361 63.7852 189.361 cv
64.1602 189.361 64.5352 189.174 64.8477 188.924 cv
65.0977 188.611 65.2852 188.236 65.2852 187.861 cv
65.2852 187.861 li
cp
f
65.8477 184.049 mo
65.8477 183.674 65.6602 183.299 65.4102 182.986 cv
65.0977 182.736 64.7227 182.549 64.3477 182.549 cv
63.9727 182.549 63.5977 182.736 63.2852 182.986 cv
63.0352 183.299 62.8477 183.674 62.8477 184.049 cv
62.8477 184.424 63.0352 184.799 63.2852 185.111 cv
63.5977 185.361 63.9727 185.549 64.3477 185.549 cv
64.7227 185.549 65.0977 185.361 65.4102 185.111 cv
65.6602 184.799 65.8477 184.424 65.8477 184.049 cv
65.8477 184.049 li
cp
f
66.7227 190.736 mo
66.7227 190.361 66.5352 189.986 66.2852 189.674 cv
65.9727 189.424 65.5977 189.236 65.2227 189.236 cv
64.8477 189.236 64.4727 189.424 64.1602 189.674 cv
63.9102 189.986 63.7227 190.361 63.7227 190.736 cv
63.7227 191.111 63.9102 191.486 64.1602 191.799 cv
64.4727 192.049 64.8477 192.236 65.2227 192.236 cv
65.5977 192.236 65.9727 192.049 66.2852 191.799 cv
66.5352 191.486 66.7227 191.111 66.7227 190.736 cv
66.7227 190.736 li
cp
f
67.2227 185.361 mo
67.2227 184.986 67.0352 184.611 66.7852 184.299 cv
66.4727 184.049 66.0977 183.861 65.7227 183.861 cv
65.3477 183.861 64.9727 184.049 64.6602 184.299 cv
64.4102 184.611 64.2227 184.986 64.2227 185.361 cv
64.2227 185.736 64.4102 186.111 64.6602 186.424 cv
64.9727 186.674 65.3477 186.861 65.7227 186.861 cv
66.0977 186.861 66.4727 186.674 66.7852 186.424 cv
67.0352 186.111 67.2227 185.736 67.2227 185.361 cv
67.2227 185.361 li
cp
f
67.8477 181.049 mo
67.8477 180.674 67.6602 180.299 67.4102 179.986 cv
67.0977 179.736 66.7227 179.549 66.3477 179.549 cv
65.9727 179.549 65.5977 179.736 65.2852 179.986 cv
65.0352 180.299 64.8477 180.674 64.8477 181.049 cv
64.8477 181.424 65.0352 181.799 65.2852 182.111 cv
65.5977 182.361 65.9727 182.549 66.3477 182.549 cv
66.7227 182.549 67.0977 182.361 67.4102 182.111 cv
67.6602 181.799 67.8477 181.424 67.8477 181.049 cv
67.8477 181.049 li
cp
f
68.3477 173.424 mo
68.3477 173.049 68.1602 172.674 67.9102 172.361 cv
67.5977 172.111 67.2227 171.924 66.8477 171.924 cv
66.4727 171.924 66.0977 172.111 65.7852 172.361 cv
65.5352 172.674 65.3477 173.049 65.3477 173.424 cv
65.3477 173.799 65.5352 174.174 65.7852 174.486 cv
66.0977 174.736 66.4727 174.924 66.8477 174.924 cv
67.2227 174.924 67.5977 174.736 67.9102 174.486 cv
68.1602 174.174 68.3477 173.799 68.3477 173.424 cv
68.3477 173.424 li
cp
f
68.9727 177.236 mo
68.9727 176.861 68.7852 176.486 68.5352 176.174 cv
68.2227 175.924 67.8477 175.736 67.4727 175.736 cv
67.0977 175.736 66.7227 175.924 66.4102 176.174 cv
66.1602 176.486 65.9727 176.861 65.9727 177.236 cv
65.9727 177.611 66.1602 177.986 66.4102 178.299 cv
66.7227 178.549 67.0977 178.736 67.4727 178.736 cv
67.8477 178.736 68.2227 178.549 68.5352 178.299 cv
68.7852 177.986 68.9727 177.611 68.9727 177.236 cv
68.9727 177.236 li
cp
f
69.5352 173.674 mo
69.5352 173.299 69.3477 172.924 69.0977 172.611 cv
68.7852 172.361 68.4102 172.174 68.0352 172.174 cv
67.6602 172.174 67.2852 172.361 66.9727 172.611 cv
66.7227 172.924 66.5352 173.299 66.5352 173.674 cv
66.5352 174.049 66.7227 174.424 66.9727 174.736 cv
67.2852 174.986 67.6602 175.174 68.0352 175.174 cv
68.4102 175.174 68.7852 174.986 69.0977 174.736 cv
69.3477 174.424 69.5352 174.049 69.5352 173.674 cv
69.5352 173.674 li
cp
f
69.6602 177.674 mo
69.6602 177.299 69.4727 176.924 69.2227 176.611 cv
68.9102 176.361 68.5352 176.174 68.1602 176.174 cv
67.7852 176.174 67.4102 176.361 67.0977 176.611 cv
66.8477 176.924 66.6602 177.299 66.6602 177.674 cv
66.6602 178.049 66.8477 178.424 67.0977 178.736 cv
67.4102 178.986 67.7852 179.174 68.1602 179.174 cv
68.5352 179.174 68.9102 178.986 69.2227 178.736 cv
69.4727 178.424 69.6602 178.049 69.6602 177.674 cv
69.6602 177.674 li
cp
f
70.2227 177.611 mo
70.2227 177.236 70.0352 176.861 69.7852 176.549 cv
69.4727 176.299 69.0977 176.111 68.7227 176.111 cv
68.3477 176.111 67.9727 176.299 67.6602 176.549 cv
67.4102 176.861 67.2227 177.236 67.2227 177.611 cv
67.2227 177.986 67.4102 178.361 67.6602 178.674 cv
67.9727 178.924 68.3477 179.111 68.7227 179.111 cv
69.0977 179.111 69.4727 178.924 69.7852 178.674 cv
70.0352 178.361 70.2227 177.986 70.2227 177.611 cv
70.2227 177.611 li
cp
f
70.7852 169.736 mo
70.7852 169.361 70.5977 168.986 70.3477 168.674 cv
70.0352 168.424 69.6602 168.236 69.2852 168.236 cv
68.9102 168.236 68.5352 168.424 68.2227 168.674 cv
67.9727 168.986 67.7852 169.361 67.7852 169.736 cv
67.7852 170.111 67.9727 170.486 68.2227 170.799 cv
68.5352 171.049 68.9102 171.236 69.2852 171.236 cv
69.6602 171.236 70.0352 171.049 70.3477 170.799 cv
70.5977 170.486 70.7852 170.111 70.7852 169.736 cv
70.7852 169.736 li
cp
f
71.2852 173.486 mo
71.2852 173.111 71.0977 172.736 70.8477 172.424 cv
70.5352 172.174 70.1602 171.986 69.7852 171.986 cv
69.4102 171.986 69.0352 172.174 68.7227 172.424 cv
68.4727 172.736 68.2852 173.111 68.2852 173.486 cv
68.2852 173.861 68.4727 174.236 68.7227 174.549 cv
69.0352 174.799 69.4102 174.986 69.7852 174.986 cv
70.1602 174.986 70.5352 174.799 70.8477 174.549 cv
71.0977 174.236 71.2852 173.861 71.2852 173.486 cv
71.2852 173.486 li
cp
f
71.4102 179.111 mo
71.4102 178.736 71.2227 178.361 70.9727 178.049 cv
70.6602 177.799 70.2852 177.611 69.9102 177.611 cv
69.5352 177.611 69.1602 177.799 68.8477 178.049 cv
68.5977 178.361 68.4102 178.736 68.4102 179.111 cv
68.4102 179.486 68.5977 179.861 68.8477 180.174 cv
69.1602 180.424 69.5352 180.611 69.9102 180.611 cv
70.2852 180.611 70.6602 180.424 70.9727 180.174 cv
71.2227 179.861 71.4102 179.486 71.4102 179.111 cv
71.4102 179.111 li
cp
f
72.0977 172.424 mo
72.0977 172.049 71.9102 171.674 71.6602 171.361 cv
71.3477 171.111 70.9727 170.924 70.5977 170.924 cv
70.2227 170.924 69.8477 171.111 69.5352 171.361 cv
69.2852 171.674 69.0977 172.049 69.0977 172.424 cv
69.0977 172.799 69.2852 173.174 69.5352 173.486 cv
69.8477 173.736 70.2227 173.924 70.5977 173.924 cv
70.9727 173.924 71.3477 173.736 71.6602 173.486 cv
71.9102 173.174 72.0977 172.799 72.0977 172.424 cv
72.0977 172.424 li
cp
f
72.2852 159.861 mo
72.2852 159.486 72.0977 159.111 71.8477 158.799 cv
71.5352 158.549 71.1602 158.361 70.7852 158.361 cv
70.4102 158.361 70.0352 158.549 69.7227 158.799 cv
69.4727 159.111 69.2852 159.486 69.2852 159.861 cv
69.2852 160.236 69.4727 160.611 69.7227 160.924 cv
70.0352 161.174 70.4102 161.361 70.7852 161.361 cv
71.1602 161.361 71.5352 161.174 71.8477 160.924 cv
72.0977 160.611 72.2852 160.236 72.2852 159.861 cv
72.2852 159.861 li
cp
f
72.7227 171.611 mo
72.7227 171.236 72.5352 170.861 72.2852 170.549 cv
71.9727 170.299 71.5977 170.111 71.2227 170.111 cv
70.8477 170.111 70.4727 170.299 70.1602 170.549 cv
69.9102 170.861 69.7227 171.236 69.7227 171.611 cv
69.7227 171.986 69.9102 172.361 70.1602 172.674 cv
70.4727 172.924 70.8477 173.111 71.2227 173.111 cv
71.5977 173.111 71.9727 172.924 72.2852 172.674 cv
72.5352 172.361 72.7227 171.986 72.7227 171.611 cv
72.7227 171.611 li
cp
f
73.1602 165.299 mo
73.1602 164.924 72.9727 164.549 72.7227 164.236 cv
72.4102 163.986 72.0352 163.799 71.6602 163.799 cv
71.2852 163.799 70.9102 163.986 70.5977 164.236 cv
70.3477 164.549 70.1602 164.924 70.1602 165.299 cv
70.1602 165.674 70.3477 166.049 70.5977 166.361 cv
70.9102 166.611 71.2852 166.799 71.6602 166.799 cv
72.0352 166.799 72.4102 166.611 72.7227 166.361 cv
72.9727 166.049 73.1602 165.674 73.1602 165.299 cv
73.1602 165.299 li
cp
f
73.4102 159.049 mo
73.4102 158.674 73.2227 158.299 72.9727 157.986 cv
72.6602 157.736 72.2852 157.549 71.9102 157.549 cv
71.5352 157.549 71.1602 157.736 70.8477 157.986 cv
70.5977 158.299 70.4102 158.674 70.4102 159.049 cv
70.4102 159.424 70.5977 159.799 70.8477 160.111 cv
71.1602 160.361 71.5352 160.549 71.9102 160.549 cv
72.2852 160.549 72.6602 160.361 72.9727 160.111 cv
73.2227 159.799 73.4102 159.424 73.4102 159.049 cv
73.4102 159.049 li
cp
f
73.7227 155.549 mo
73.7227 155.174 73.5352 154.799 73.2852 154.486 cv
72.9727 154.236 72.5977 154.049 72.2227 154.049 cv
71.8477 154.049 71.4727 154.236 71.1602 154.486 cv
70.9102 154.799 70.7227 155.174 70.7227 155.549 cv
70.7227 155.924 70.9102 156.299 71.1602 156.611 cv
71.4727 156.861 71.8477 157.049 72.2227 157.049 cv
72.5977 157.049 72.9727 156.861 73.2852 156.611 cv
73.5352 156.299 73.7227 155.924 73.7227 155.549 cv
73.7227 155.549 li
cp
f
74.0977 158.674 mo
74.0977 158.299 73.9102 157.924 73.6602 157.611 cv
73.3477 157.361 72.9727 157.174 72.5977 157.174 cv
72.2227 157.174 71.8477 157.361 71.5352 157.611 cv
71.2852 157.924 71.0977 158.299 71.0977 158.674 cv
71.0977 159.049 71.2852 159.424 71.5352 159.736 cv
71.8477 159.986 72.2227 160.174 72.5977 160.174 cv
72.9727 160.174 73.3477 159.986 73.6602 159.736 cv
73.9102 159.424 74.0977 159.049 74.0977 158.674 cv
74.0977 158.674 li
cp
f
74.2227 152.111 mo
74.2227 151.736 74.0352 151.361 73.7852 151.049 cv
73.4727 150.799 73.0977 150.611 72.7227 150.611 cv
72.3477 150.611 71.9727 150.799 71.6602 151.049 cv
71.4102 151.361 71.2227 151.736 71.2227 152.111 cv
71.2227 152.486 71.4102 152.861 71.6602 153.174 cv
71.9727 153.424 72.3477 153.611 72.7227 153.611 cv
73.0977 153.611 73.4727 153.424 73.7852 153.174 cv
74.0352 152.861 74.2227 152.486 74.2227 152.111 cv
74.2227 152.111 li
cp
f
74.5977 134.611 mo
74.5977 134.236 74.4102 133.861 74.1602 133.549 cv
73.8477 133.299 73.4727 133.111 73.0977 133.111 cv
72.7227 133.111 72.3477 133.299 72.0352 133.549 cv
71.7852 133.861 71.5977 134.236 71.5977 134.611 cv
71.5977 134.986 71.7852 135.361 72.0352 135.674 cv
72.3477 135.924 72.7227 136.111 73.0977 136.111 cv
73.4727 136.111 73.8477 135.924 74.1602 135.674 cv
74.4102 135.361 74.5977 134.986 74.5977 134.611 cv
74.5977 134.611 li
cp
f
76.4727 225.361 mo
76.4727 224.986 76.2852 224.611 76.0352 224.299 cv
75.7227 224.049 75.3477 223.861 74.9727 223.861 cv
74.5977 223.861 74.2227 224.049 73.9102 224.299 cv
73.6602 224.611 73.4727 224.986 73.4727 225.361 cv
73.4727 225.736 73.6602 226.111 73.9102 226.424 cv
74.2227 226.674 74.5977 226.861 74.9727 226.861 cv
75.3477 226.861 75.7227 226.674 76.0352 226.424 cv
76.2852 226.111 76.4727 225.736 76.4727 225.361 cv
76.4727 225.361 li
cp
f
77.7852 227.361 mo
77.7852 226.986 77.5977 226.611 77.3477 226.299 cv
77.0352 226.049 76.6602 225.861 76.2852 225.861 cv
75.9102 225.861 75.5352 226.049 75.2227 226.299 cv
74.9727 226.611 74.7852 226.986 74.7852 227.361 cv
74.7852 227.736 74.9727 228.111 75.2227 228.424 cv
75.5352 228.674 75.9102 228.861 76.2852 228.861 cv
76.6602 228.861 77.0352 228.674 77.3477 228.424 cv
77.5977 228.111 77.7852 227.736 77.7852 227.361 cv
77.7852 227.361 li
cp
f
78.8477 226.236 mo
78.8477 225.861 78.6602 225.486 78.4102 225.174 cv
78.0977 224.924 77.7227 224.736 77.3477 224.736 cv
76.9727 224.736 76.5977 224.924 76.2852 225.174 cv
76.0352 225.486 75.8477 225.861 75.8477 226.236 cv
75.8477 226.611 76.0352 226.986 76.2852 227.299 cv
76.5977 227.549 76.9727 227.736 77.3477 227.736 cv
77.7227 227.736 78.0977 227.549 78.4102 227.299 cv
78.6602 226.986 78.8477 226.611 78.8477 226.236 cv
78.8477 226.236 li
cp
f
79.7852 227.361 mo
79.7852 226.986 79.5977 226.611 79.3477 226.299 cv
79.0352 226.049 78.6602 225.861 78.2852 225.861 cv
77.9102 225.861 77.5352 226.049 77.2227 226.299 cv
76.9727 226.611 76.7852 226.986 76.7852 227.361 cv
76.7852 227.736 76.9727 228.111 77.2227 228.424 cv
77.5352 228.674 77.9102 228.861 78.2852 228.861 cv
78.6602 228.861 79.0352 228.674 79.3477 228.424 cv
79.5977 228.111 79.7852 227.736 79.7852 227.361 cv
79.7852 227.361 li
cp
f
81.0352 230.111 mo
81.0352 229.736 80.8477 229.361 80.5977 229.049 cv
80.2852 228.799 79.9102 228.611 79.5352 228.611 cv
79.1602 228.611 78.7852 228.799 78.4727 229.049 cv
78.2227 229.361 78.0352 229.736 78.0352 230.111 cv
78.0352 230.486 78.2227 230.861 78.4727 231.174 cv
78.7852 231.424 79.1602 231.611 79.5352 231.611 cv
79.9102 231.611 80.2852 231.424 80.5977 231.174 cv
80.8477 230.861 81.0352 230.486 81.0352 230.111 cv
81.0352 230.111 li
cp
f
82.5977 232.424 mo
82.5977 232.049 82.4102 231.674 82.1602 231.361 cv
81.8477 231.111 81.4727 230.924 81.0977 230.924 cv
80.7227 230.924 80.3477 231.111 80.0352 231.361 cv
79.7852 231.674 79.5977 232.049 79.5977 232.424 cv
79.5977 232.799 79.7852 233.174 80.0352 233.486 cv
80.3477 233.736 80.7227 233.924 81.0977 233.924 cv
81.4727 233.924 81.8477 233.736 82.1602 233.486 cv
82.4102 233.174 82.5977 232.799 82.5977 232.424 cv
82.5977 232.424 li
cp
f
84.0977 234.299 mo
84.0977 233.924 83.9102 233.549 83.6602 233.236 cv
83.3477 232.986 82.9727 232.799 82.5977 232.799 cv
82.2227 232.799 81.8477 232.986 81.5352 233.236 cv
81.2852 233.549 81.0977 233.924 81.0977 234.299 cv
81.0977 234.674 81.2852 235.049 81.5352 235.361 cv
81.8477 235.611 82.2227 235.799 82.5977 235.799 cv
82.9727 235.799 83.3477 235.611 83.6602 235.361 cv
83.9102 235.049 84.0977 234.674 84.0977 234.299 cv
84.0977 234.299 li
cp
f
85.4727 233.924 mo
85.4727 233.549 85.2852 233.174 85.0352 232.861 cv
84.7227 232.611 84.3477 232.424 83.9727 232.424 cv
83.5977 232.424 83.2227 232.611 82.9102 232.861 cv
82.6602 233.174 82.4727 233.549 82.4727 233.924 cv
82.4727 234.299 82.6602 234.674 82.9102 234.986 cv
83.2227 235.236 83.5977 235.424 83.9727 235.424 cv
84.3477 235.424 84.7227 235.236 85.0352 234.986 cv
85.2852 234.674 85.4727 234.299 85.4727 233.924 cv
85.4727 233.924 li
cp
f
86.5977 234.299 mo
86.5977 233.924 86.4102 233.549 86.1602 233.236 cv
85.8477 232.986 85.4727 232.799 85.0977 232.799 cv
84.7227 232.799 84.3477 232.986 84.0352 233.236 cv
83.7852 233.549 83.5977 233.924 83.5977 234.299 cv
83.5977 234.674 83.7852 235.049 84.0352 235.361 cv
84.3477 235.611 84.7227 235.799 85.0977 235.799 cv
85.4727 235.799 85.8477 235.611 86.1602 235.361 cv
86.4102 235.049 86.5977 234.674 86.5977 234.299 cv
86.5977 234.299 li
cp
f
88.7227 234.861 mo
88.7227 234.486 88.5352 234.111 88.2852 233.799 cv
87.9727 233.549 87.5977 233.361 87.2227 233.361 cv
86.8477 233.361 86.4727 233.549 86.1602 233.799 cv
85.9102 234.111 85.7227 234.486 85.7227 234.861 cv
85.7227 235.236 85.9102 235.611 86.1602 235.924 cv
86.4727 236.174 86.8477 236.361 87.2227 236.361 cv
87.5977 236.361 87.9727 236.174 88.2852 235.924 cv
88.5352 235.611 88.7227 235.236 88.7227 234.861 cv
88.7227 234.861 li
cp
f
90.5977 235.486 mo
90.5977 235.111 90.4102 234.736 90.1602 234.424 cv
89.8477 234.174 89.4727 233.986 89.0977 233.986 cv
88.7227 233.986 88.3477 234.174 88.0352 234.424 cv
87.7852 234.736 87.5977 235.111 87.5977 235.486 cv
87.5977 235.861 87.7852 236.236 88.0352 236.549 cv
88.3477 236.799 88.7227 236.986 89.0977 236.986 cv
89.4727 236.986 89.8477 236.799 90.1602 236.549 cv
90.4102 236.236 90.5977 235.861 90.5977 235.486 cv
90.5977 235.486 li
cp
f
91.7852 235.486 mo
91.7852 235.111 91.5977 234.736 91.3477 234.424 cv
91.0352 234.174 90.6602 233.986 90.2852 233.986 cv
89.9102 233.986 89.5352 234.174 89.2227 234.424 cv
88.9727 234.736 88.7852 235.111 88.7852 235.486 cv
88.7852 235.861 88.9727 236.236 89.2227 236.549 cv
89.5352 236.799 89.9102 236.986 90.2852 236.986 cv
90.6602 236.986 91.0352 236.799 91.3477 236.549 cv
91.5977 236.236 91.7852 235.861 91.7852 235.486 cv
91.7852 235.486 li
cp
f
93.2852 235.361 mo
93.2852 234.986 93.0977 234.611 92.8477 234.299 cv
92.5352 234.049 92.1602 233.861 91.7852 233.861 cv
91.4102 233.861 91.0352 234.049 90.7227 234.299 cv
90.4727 234.611 90.2852 234.986 90.2852 235.361 cv
90.2852 235.736 90.4727 236.111 90.7227 236.424 cv
91.0352 236.674 91.4102 236.861 91.7852 236.861 cv
92.1602 236.861 92.5352 236.674 92.8477 236.424 cv
93.0977 236.111 93.2852 235.736 93.2852 235.361 cv
93.2852 235.361 li
cp
f
95.2227 236.361 mo
95.2227 235.986 95.0352 235.611 94.7852 235.299 cv
94.4727 235.049 94.0977 234.861 93.7227 234.861 cv
93.3477 234.861 92.9727 235.049 92.6602 235.299 cv
92.4102 235.611 92.2227 235.986 92.2227 236.361 cv
92.2227 236.736 92.4102 237.111 92.6602 237.424 cv
92.9727 237.674 93.3477 237.861 93.7227 237.861 cv
94.0977 237.861 94.4727 237.674 94.7852 237.424 cv
95.0352 237.111 95.2227 236.736 95.2227 236.361 cv
95.2227 236.361 li
cp
f
97.5352 235.486 mo
97.5352 235.111 97.3477 234.736 97.0977 234.424 cv
96.7852 234.174 96.4102 233.986 96.0352 233.986 cv
95.6602 233.986 95.2852 234.174 94.9727 234.424 cv
94.7227 234.736 94.5352 235.111 94.5352 235.486 cv
94.5352 235.861 94.7227 236.236 94.9727 236.549 cv
95.2852 236.799 95.6602 236.986 96.0352 236.986 cv
96.4102 236.986 96.7852 236.799 97.0977 236.549 cv
97.3477 236.236 97.5352 235.861 97.5352 235.486 cv
97.5352 235.486 li
cp
f
98.8477 236.549 mo
98.8477 236.174 98.6602 235.799 98.4102 235.486 cv
98.0977 235.236 97.7227 235.049 97.3477 235.049 cv
96.9727 235.049 96.5977 235.236 96.2852 235.486 cv
96.0352 235.799 95.8477 236.174 95.8477 236.549 cv
95.8477 236.924 96.0352 237.299 96.2852 237.611 cv
96.5977 237.861 96.9727 238.049 97.3477 238.049 cv
97.7227 238.049 98.0977 237.861 98.4102 237.611 cv
98.6602 237.299 98.8477 236.924 98.8477 236.549 cv
98.8477 236.549 li
cp
f
100.723 237.111 mo
100.723 236.736 100.535 236.361 100.285 236.049 cv
99.9727 235.799 99.5977 235.611 99.2227 235.611 cv
98.8477 235.611 98.4727 235.799 98.1602 236.049 cv
97.9102 236.361 97.7227 236.736 97.7227 237.111 cv
97.7227 237.486 97.9102 237.861 98.1602 238.174 cv
98.4727 238.424 98.8477 238.611 99.2227 238.611 cv
99.5977 238.611 99.9727 238.424 100.285 238.174 cv
100.535 237.861 100.723 237.486 100.723 237.111 cv
100.723 237.111 li
cp
f
102.285 239.486 mo
102.285 239.111 102.098 238.736 101.848 238.424 cv
101.535 238.174 101.16 237.986 100.785 237.986 cv
100.41 237.986 100.035 238.174 99.7227 238.424 cv
99.4727 238.736 99.2852 239.111 99.2852 239.486 cv
99.2852 239.861 99.4727 240.236 99.7227 240.549 cv
100.035 240.799 100.41 240.986 100.785 240.986 cv
101.16 240.986 101.535 240.799 101.848 240.549 cv
102.098 240.236 102.285 239.861 102.285 239.486 cv
102.285 239.486 li
cp
f
104.723 236.736 mo
104.723 236.361 104.535 235.986 104.285 235.674 cv
103.973 235.424 103.598 235.236 103.223 235.236 cv
102.848 235.236 102.473 235.424 102.16 235.674 cv
101.91 235.986 101.723 236.361 101.723 236.736 cv
101.723 237.111 101.91 237.486 102.16 237.799 cv
102.473 238.049 102.848 238.236 103.223 238.236 cv
103.598 238.236 103.973 238.049 104.285 237.799 cv
104.535 237.486 104.723 237.111 104.723 236.736 cv
104.723 236.736 li
cp
f
106.035 238.736 mo
106.035 238.361 105.848 237.986 105.598 237.674 cv
105.285 237.424 104.91 237.236 104.535 237.236 cv
104.16 237.236 103.785 237.424 103.473 237.674 cv
103.223 237.986 103.035 238.361 103.035 238.736 cv
103.035 239.111 103.223 239.486 103.473 239.799 cv
103.785 240.049 104.16 240.236 104.535 240.236 cv
104.91 240.236 105.285 240.049 105.598 239.799 cv
105.848 239.486 106.035 239.111 106.035 238.736 cv
106.035 238.736 li
cp
f
108.16 237.986 mo
108.16 237.611 107.973 237.236 107.723 236.924 cv
107.41 236.674 107.035 236.486 106.66 236.486 cv
106.285 236.486 105.91 236.674 105.598 236.924 cv
105.348 237.236 105.16 237.611 105.16 237.986 cv
105.16 238.361 105.348 238.736 105.598 239.049 cv
105.91 239.299 106.285 239.486 106.66 239.486 cv
107.035 239.486 107.41 239.299 107.723 239.049 cv
107.973 238.736 108.16 238.361 108.16 237.986 cv
108.16 237.986 li
cp
f
109.66 236.861 mo
109.66 236.486 109.473 236.111 109.223 235.799 cv
108.91 235.549 108.535 235.361 108.16 235.361 cv
107.785 235.361 107.41 235.549 107.098 235.799 cv
106.848 236.111 106.66 236.486 106.66 236.861 cv
106.66 237.236 106.848 237.611 107.098 237.924 cv
107.41 238.174 107.785 238.361 108.16 238.361 cv
108.535 238.361 108.91 238.174 109.223 237.924 cv
109.473 237.611 109.66 237.236 109.66 236.861 cv
109.66 236.861 li
cp
f
112.348 236.049 mo
112.348 235.674 112.16 235.299 111.91 234.986 cv
111.598 234.736 111.223 234.549 110.848 234.549 cv
110.473 234.549 110.098 234.736 109.785 234.986 cv
109.535 235.299 109.348 235.674 109.348 236.049 cv
109.348 236.424 109.535 236.799 109.785 237.111 cv
110.098 237.361 110.473 237.549 110.848 237.549 cv
111.223 237.549 111.598 237.361 111.91 237.111 cv
112.16 236.799 112.348 236.424 112.348 236.049 cv
112.348 236.049 li
cp
f
114.035 238.049 mo
114.035 237.674 113.848 237.299 113.598 236.986 cv
113.285 236.736 112.91 236.549 112.535 236.549 cv
112.16 236.549 111.785 236.736 111.473 236.986 cv
111.223 237.299 111.035 237.674 111.035 238.049 cv
111.035 238.424 111.223 238.799 111.473 239.111 cv
111.785 239.361 112.16 239.549 112.535 239.549 cv
112.91 239.549 113.285 239.361 113.598 239.111 cv
113.848 238.799 114.035 238.424 114.035 238.049 cv
114.035 238.049 li
cp
f
116.035 235.486 mo
116.035 235.111 115.848 234.736 115.598 234.424 cv
115.285 234.174 114.91 233.986 114.535 233.986 cv
114.16 233.986 113.785 234.174 113.473 234.424 cv
113.223 234.736 113.035 235.111 113.035 235.486 cv
113.035 235.861 113.223 236.236 113.473 236.549 cv
113.785 236.799 114.16 236.986 114.535 236.986 cv
114.91 236.986 115.285 236.799 115.598 236.549 cv
115.848 236.236 116.035 235.861 116.035 235.486 cv
116.035 235.486 li
cp
f
116.598 238.174 mo
116.598 237.799 116.41 237.424 116.16 237.111 cv
115.848 236.861 115.473 236.674 115.098 236.674 cv
114.723 236.674 114.348 236.861 114.035 237.111 cv
113.785 237.424 113.598 237.799 113.598 238.174 cv
113.598 238.549 113.785 238.924 114.035 239.236 cv
114.348 239.486 114.723 239.674 115.098 239.674 cv
115.473 239.674 115.848 239.486 116.16 239.236 cv
116.41 238.924 116.598 238.549 116.598 238.174 cv
116.598 238.174 li
cp
f
119.035 236.299 mo
119.035 235.924 118.848 235.549 118.598 235.236 cv
118.285 234.986 117.91 234.799 117.535 234.799 cv
117.16 234.799 116.785 234.986 116.473 235.236 cv
116.223 235.549 116.035 235.924 116.035 236.299 cv
116.035 236.674 116.223 237.049 116.473 237.361 cv
116.785 237.611 117.16 237.799 117.535 237.799 cv
117.91 237.799 118.285 237.611 118.598 237.361 cv
118.848 237.049 119.035 236.674 119.035 236.299 cv
119.035 236.299 li
cp
f
121.098 235.611 mo
121.098 235.236 120.91 234.861 120.66 234.549 cv
120.348 234.299 119.973 234.111 119.598 234.111 cv
119.223 234.111 118.848 234.299 118.535 234.549 cv
118.285 234.861 118.098 235.236 118.098 235.611 cv
118.098 235.986 118.285 236.361 118.535 236.674 cv
118.848 236.924 119.223 237.111 119.598 237.111 cv
119.973 237.111 120.348 236.924 120.66 236.674 cv
120.91 236.361 121.098 235.986 121.098 235.611 cv
121.098 235.611 li
cp
f
122.973 237.424 mo
122.973 237.049 122.785 236.674 122.535 236.361 cv
122.223 236.111 121.848 235.924 121.473 235.924 cv
121.098 235.924 120.723 236.111 120.41 236.361 cv
120.16 236.674 119.973 237.049 119.973 237.424 cv
119.973 237.799 120.16 238.174 120.41 238.486 cv
120.723 238.736 121.098 238.924 121.473 238.924 cv
121.848 238.924 122.223 238.736 122.535 238.486 cv
122.785 238.174 122.973 237.799 122.973 237.424 cv
122.973 237.424 li
cp
f
124.16 234.799 mo
124.16 234.424 123.973 234.049 123.723 233.736 cv
123.41 233.486 123.035 233.299 122.66 233.299 cv
122.285 233.299 121.91 233.486 121.598 233.736 cv
121.348 234.049 121.16 234.424 121.16 234.799 cv
121.16 235.174 121.348 235.549 121.598 235.861 cv
121.91 236.111 122.285 236.299 122.66 236.299 cv
123.035 236.299 123.41 236.111 123.723 235.861 cv
123.973 235.549 124.16 235.174 124.16 234.799 cv
124.16 234.799 li
cp
f
125.348 236.736 mo
125.348 236.361 125.16 235.986 124.91 235.674 cv
124.598 235.424 124.223 235.236 123.848 235.236 cv
123.473 235.236 123.098 235.424 122.785 235.674 cv
122.535 235.986 122.348 236.361 122.348 236.736 cv
122.348 237.111 122.535 237.486 122.785 237.799 cv
123.098 238.049 123.473 238.236 123.848 238.236 cv
124.223 238.236 124.598 238.049 124.91 237.799 cv
125.16 237.486 125.348 237.111 125.348 236.736 cv
125.348 236.736 li
cp
f
126.973 237.299 mo
126.973 236.924 126.785 236.549 126.535 236.236 cv
126.223 235.986 125.848 235.799 125.473 235.799 cv
125.098 235.799 124.723 235.986 124.41 236.236 cv
124.16 236.549 123.973 236.924 123.973 237.299 cv
123.973 237.674 124.16 238.049 124.41 238.361 cv
124.723 238.611 125.098 238.799 125.473 238.799 cv
125.848 238.799 126.223 238.611 126.535 238.361 cv
126.785 238.049 126.973 237.674 126.973 237.299 cv
126.973 237.299 li
cp
f
128.098 236.361 mo
128.098 235.986 127.91 235.611 127.66 235.299 cv
127.348 235.049 126.973 234.861 126.598 234.861 cv
126.223 234.861 125.848 235.049 125.535 235.299 cv
125.285 235.611 125.098 235.986 125.098 236.361 cv
125.098 236.736 125.285 237.111 125.535 237.424 cv
125.848 237.674 126.223 237.861 126.598 237.861 cv
126.973 237.861 127.348 237.674 127.66 237.424 cv
127.91 237.111 128.098 236.736 128.098 236.361 cv
128.098 236.361 li
cp
f
130.098 234.861 mo
130.098 234.486 129.91 234.111 129.66 233.799 cv
129.348 233.549 128.973 233.361 128.598 233.361 cv
128.223 233.361 127.848 233.549 127.535 233.799 cv
127.285 234.111 127.098 234.486 127.098 234.861 cv
127.098 235.236 127.285 235.611 127.535 235.924 cv
127.848 236.174 128.223 236.361 128.598 236.361 cv
128.973 236.361 129.348 236.174 129.66 235.924 cv
129.91 235.611 130.098 235.236 130.098 234.861 cv
130.098 234.861 li
cp
f
131.66 235.361 mo
131.66 234.986 131.473 234.611 131.223 234.299 cv
130.91 234.049 130.535 233.861 130.16 233.861 cv
129.785 233.861 129.41 234.049 129.098 234.299 cv
128.848 234.611 128.66 234.986 128.66 235.361 cv
128.66 235.736 128.848 236.111 129.098 236.424 cv
129.41 236.674 129.785 236.861 130.16 236.861 cv
130.535 236.861 130.91 236.674 131.223 236.424 cv
131.473 236.111 131.66 235.736 131.66 235.361 cv
131.66 235.361 li
cp
f
133.035 235.861 mo
133.035 235.486 132.848 235.111 132.598 234.799 cv
132.285 234.549 131.91 234.361 131.535 234.361 cv
131.16 234.361 130.785 234.549 130.473 234.799 cv
130.223 235.111 130.035 235.486 130.035 235.861 cv
130.035 236.236 130.223 236.611 130.473 236.924 cv
130.785 237.174 131.16 237.361 131.535 237.361 cv
131.91 237.361 132.285 237.174 132.598 236.924 cv
132.848 236.611 133.035 236.236 133.035 235.861 cv
133.035 235.861 li
cp
f
135.16 231.361 mo
135.16 230.986 134.973 230.611 134.723 230.299 cv
134.41 230.049 134.035 229.861 133.66 229.861 cv
133.285 229.861 132.91 230.049 132.598 230.299 cv
132.348 230.611 132.16 230.986 132.16 231.361 cv
132.16 231.736 132.348 232.111 132.598 232.424 cv
132.91 232.674 133.285 232.861 133.66 232.861 cv
134.035 232.861 134.41 232.674 134.723 232.424 cv
134.973 232.111 135.16 231.736 135.16 231.361 cv
135.16 231.361 li
cp
f
136.598 235.674 mo
136.598 235.299 136.41 234.924 136.16 234.611 cv
135.848 234.361 135.473 234.174 135.098 234.174 cv
134.723 234.174 134.348 234.361 134.035 234.611 cv
133.785 234.924 133.598 235.299 133.598 235.674 cv
133.598 236.049 133.785 236.424 134.035 236.736 cv
134.348 236.986 134.723 237.174 135.098 237.174 cv
135.473 237.174 135.848 236.986 136.16 236.736 cv
136.41 236.424 136.598 236.049 136.598 235.674 cv
136.598 235.674 li
cp
f
138.535 235.549 mo
138.535 235.174 138.348 234.799 138.098 234.486 cv
137.785 234.236 137.41 234.049 137.035 234.049 cv
136.66 234.049 136.285 234.236 135.973 234.486 cv
135.723 234.799 135.535 235.174 135.535 235.549 cv
135.535 235.924 135.723 236.299 135.973 236.611 cv
136.285 236.861 136.66 237.049 137.035 237.049 cv
137.41 237.049 137.785 236.861 138.098 236.611 cv
138.348 236.299 138.535 235.924 138.535 235.549 cv
138.535 235.549 li
cp
f
140.16 232.299 mo
140.16 231.924 139.973 231.549 139.723 231.236 cv
139.41 230.986 139.035 230.799 138.66 230.799 cv
138.285 230.799 137.91 230.986 137.598 231.236 cv
137.348 231.549 137.16 231.924 137.16 232.299 cv
137.16 232.674 137.348 233.049 137.598 233.361 cv
137.91 233.611 138.285 233.799 138.66 233.799 cv
139.035 233.799 139.41 233.611 139.723 233.361 cv
139.973 233.049 140.16 232.674 140.16 232.299 cv
140.16 232.299 li
cp
f
140.973 235.236 mo
140.973 234.861 140.785 234.486 140.535 234.174 cv
140.223 233.924 139.848 233.736 139.473 233.736 cv
139.098 233.736 138.723 233.924 138.41 234.174 cv
138.16 234.486 137.973 234.861 137.973 235.236 cv
137.973 235.611 138.16 235.986 138.41 236.299 cv
138.723 236.549 139.098 236.736 139.473 236.736 cv
139.848 236.736 140.223 236.549 140.535 236.299 cv
140.785 235.986 140.973 235.611 140.973 235.236 cv
140.973 235.236 li
cp
f
143.16 242.049 mo
143.16 241.674 142.973 241.299 142.723 240.986 cv
142.41 240.736 142.035 240.549 141.66 240.549 cv
141.285 240.549 140.91 240.736 140.598 240.986 cv
140.348 241.299 140.16 241.674 140.16 242.049 cv
140.16 242.424 140.348 242.799 140.598 243.111 cv
140.91 243.361 141.285 243.549 141.66 243.549 cv
142.035 243.549 142.41 243.361 142.723 243.111 cv
142.973 242.799 143.16 242.424 143.16 242.049 cv
143.16 242.049 li
cp
f
144.035 235.674 mo
144.035 235.299 143.848 234.924 143.598 234.611 cv
143.285 234.361 142.91 234.174 142.535 234.174 cv
142.16 234.174 141.785 234.361 141.473 234.611 cv
141.223 234.924 141.035 235.299 141.035 235.674 cv
141.035 236.049 141.223 236.424 141.473 236.736 cv
141.785 236.986 142.16 237.174 142.535 237.174 cv
142.91 237.174 143.285 236.986 143.598 236.736 cv
143.848 236.424 144.035 236.049 144.035 235.674 cv
144.035 235.674 li
cp
f
146.41 230.799 mo
146.41 230.424 146.223 230.049 145.973 229.736 cv
145.66 229.486 145.285 229.299 144.91 229.299 cv
144.535 229.299 144.16 229.486 143.848 229.736 cv
143.598 230.049 143.41 230.424 143.41 230.799 cv
143.41 231.174 143.598 231.549 143.848 231.861 cv
144.16 232.111 144.535 232.299 144.91 232.299 cv
145.285 232.299 145.66 232.111 145.973 231.861 cv
146.223 231.549 146.41 231.174 146.41 230.799 cv
146.41 230.799 li
cp
f
147.41 234.174 mo
147.41 233.799 147.223 233.424 146.973 233.111 cv
146.66 232.861 146.285 232.674 145.91 232.674 cv
145.535 232.674 145.16 232.861 144.848 233.111 cv
144.598 233.424 144.41 233.799 144.41 234.174 cv
144.41 234.549 144.598 234.924 144.848 235.236 cv
145.16 235.486 145.535 235.674 145.91 235.674 cv
146.285 235.674 146.66 235.486 146.973 235.236 cv
147.223 234.924 147.41 234.549 147.41 234.174 cv
147.41 234.174 li
cp
f
149.098 233.111 mo
149.098 232.736 148.91 232.361 148.66 232.049 cv
148.348 231.799 147.973 231.611 147.598 231.611 cv
147.223 231.611 146.848 231.799 146.535 232.049 cv
146.285 232.361 146.098 232.736 146.098 233.111 cv
146.098 233.486 146.285 233.861 146.535 234.174 cv
146.848 234.424 147.223 234.611 147.598 234.611 cv
147.973 234.611 148.348 234.424 148.66 234.174 cv
148.91 233.861 149.098 233.486 149.098 233.111 cv
149.098 233.111 li
cp
f
150.598 227.674 mo
150.598 227.299 150.41 226.924 150.16 226.611 cv
149.848 226.361 149.473 226.174 149.098 226.174 cv
148.723 226.174 148.348 226.361 148.035 226.611 cv
147.785 226.924 147.598 227.299 147.598 227.674 cv
147.598 228.049 147.785 228.424 148.035 228.736 cv
148.348 228.986 148.723 229.174 149.098 229.174 cv
149.473 229.174 149.848 228.986 150.16 228.736 cv
150.41 228.424 150.598 228.049 150.598 227.674 cv
150.598 227.674 li
cp
f
151.66 233.986 mo
151.66 233.611 151.473 233.236 151.223 232.924 cv
150.91 232.674 150.535 232.486 150.16 232.486 cv
149.785 232.486 149.41 232.674 149.098 232.924 cv
148.848 233.236 148.66 233.611 148.66 233.986 cv
148.66 234.361 148.848 234.736 149.098 235.049 cv
149.41 235.299 149.785 235.486 150.16 235.486 cv
150.535 235.486 150.91 235.299 151.223 235.049 cv
151.473 234.736 151.66 234.361 151.66 233.986 cv
151.66 233.986 li
cp
f
152.785 230.174 mo
152.785 229.799 152.598 229.424 152.348 229.111 cv
152.035 228.861 151.66 228.674 151.285 228.674 cv
150.91 228.674 150.535 228.861 150.223 229.111 cv
149.973 229.424 149.785 229.799 149.785 230.174 cv
149.785 230.549 149.973 230.924 150.223 231.236 cv
150.535 231.486 150.91 231.674 151.285 231.674 cv
151.66 231.674 152.035 231.486 152.348 231.236 cv
152.598 230.924 152.785 230.549 152.785 230.174 cv
152.785 230.174 li
cp
f
153.535 230.674 mo
153.535 230.299 153.348 229.924 153.098 229.611 cv
152.785 229.361 152.41 229.174 152.035 229.174 cv
151.66 229.174 151.285 229.361 150.973 229.611 cv
150.723 229.924 150.535 230.299 150.535 230.674 cv
150.535 231.049 150.723 231.424 150.973 231.736 cv
151.285 231.986 151.66 232.174 152.035 232.174 cv
152.41 232.174 152.785 231.986 153.098 231.736 cv
153.348 231.424 153.535 231.049 153.535 230.674 cv
153.535 230.674 li
cp
f
155.535 229.674 mo
155.535 229.299 155.348 228.924 155.098 228.611 cv
154.785 228.361 154.41 228.174 154.035 228.174 cv
153.66 228.174 153.285 228.361 152.973 228.611 cv
152.723 228.924 152.535 229.299 152.535 229.674 cv
152.535 230.049 152.723 230.424 152.973 230.736 cv
153.285 230.986 153.66 231.174 154.035 231.174 cv
154.41 231.174 154.785 230.986 155.098 230.736 cv
155.348 230.424 155.535 230.049 155.535 229.674 cv
155.535 229.674 li
cp
f
156.848 226.736 mo
156.848 226.361 156.66 225.986 156.41 225.674 cv
156.098 225.424 155.723 225.236 155.348 225.236 cv
154.973 225.236 154.598 225.424 154.285 225.674 cv
154.035 225.986 153.848 226.361 153.848 226.736 cv
153.848 227.111 154.035 227.486 154.285 227.799 cv
154.598 228.049 154.973 228.236 155.348 228.236 cv
155.723 228.236 156.098 228.049 156.41 227.799 cv
156.66 227.486 156.848 227.111 156.848 226.736 cv
156.848 226.736 li
cp
f
157.973 234.799 mo
157.973 234.424 157.785 234.049 157.535 233.736 cv
157.223 233.486 156.848 233.299 156.473 233.299 cv
156.098 233.299 155.723 233.486 155.41 233.736 cv
155.16 234.049 154.973 234.424 154.973 234.799 cv
154.973 235.174 155.16 235.549 155.41 235.861 cv
155.723 236.111 156.098 236.299 156.473 236.299 cv
156.848 236.299 157.223 236.111 157.535 235.861 cv
157.785 235.549 157.973 235.174 157.973 234.799 cv
157.973 234.799 li
cp
f
159.41 237.986 mo
159.41 237.611 159.223 237.236 158.973 236.924 cv
158.66 236.674 158.285 236.486 157.91 236.486 cv
157.535 236.486 157.16 236.674 156.848 236.924 cv
156.598 237.236 156.41 237.611 156.41 237.986 cv
156.41 238.361 156.598 238.736 156.848 239.049 cv
157.16 239.299 157.535 239.486 157.91 239.486 cv
158.285 239.486 158.66 239.299 158.973 239.049 cv
159.223 238.736 159.41 238.361 159.41 237.986 cv
159.41 237.986 li
cp
f
161.223 234.049 mo
161.223 233.674 161.035 233.299 160.785 232.986 cv
160.473 232.736 160.098 232.549 159.723 232.549 cv
159.348 232.549 158.973 232.736 158.66 232.986 cv
158.41 233.299 158.223 233.674 158.223 234.049 cv
158.223 234.424 158.41 234.799 158.66 235.111 cv
158.973 235.361 159.348 235.549 159.723 235.549 cv
160.098 235.549 160.473 235.361 160.785 235.111 cv
161.035 234.799 161.223 234.424 161.223 234.049 cv
161.223 234.049 li
cp
f
162.41 228.611 mo
162.41 228.236 162.223 227.861 161.973 227.549 cv
161.66 227.299 161.285 227.111 160.91 227.111 cv
160.535 227.111 160.16 227.299 159.848 227.549 cv
159.598 227.861 159.41 228.236 159.41 228.611 cv
159.41 228.986 159.598 229.361 159.848 229.674 cv
160.16 229.924 160.535 230.111 160.91 230.111 cv
161.285 230.111 161.66 229.924 161.973 229.674 cv
162.223 229.361 162.41 228.986 162.41 228.611 cv
162.41 228.611 li
cp
f
164.035 230.611 mo
164.035 230.236 163.848 229.861 163.598 229.549 cv
163.285 229.299 162.91 229.111 162.535 229.111 cv
162.16 229.111 161.785 229.299 161.473 229.549 cv
161.223 229.861 161.035 230.236 161.035 230.611 cv
161.035 230.986 161.223 231.361 161.473 231.674 cv
161.785 231.924 162.16 232.111 162.535 232.111 cv
162.91 232.111 163.285 231.924 163.598 231.674 cv
163.848 231.361 164.035 230.986 164.035 230.611 cv
164.035 230.611 li
cp
f
165.223 216.674 mo
165.223 216.299 165.035 215.924 164.785 215.611 cv
164.473 215.361 164.098 215.174 163.723 215.174 cv
163.348 215.174 162.973 215.361 162.66 215.611 cv
162.41 215.924 162.223 216.299 162.223 216.674 cv
162.223 217.049 162.41 217.424 162.66 217.736 cv
162.973 217.986 163.348 218.174 163.723 218.174 cv
164.098 218.174 164.473 217.986 164.785 217.736 cv
165.035 217.424 165.223 217.049 165.223 216.674 cv
165.223 216.674 li
cp
f
166.473 231.174 mo
166.473 230.799 166.285 230.424 166.035 230.111 cv
165.723 229.861 165.348 229.674 164.973 229.674 cv
164.598 229.674 164.223 229.861 163.91 230.111 cv
163.66 230.424 163.473 230.799 163.473 231.174 cv
163.473 231.549 163.66 231.924 163.91 232.236 cv
164.223 232.486 164.598 232.674 164.973 232.674 cv
165.348 232.674 165.723 232.486 166.035 232.236 cv
166.285 231.924 166.473 231.549 166.473 231.174 cv
166.473 231.174 li
cp
f
174.035 231.361 mo
174.035 230.986 173.848 230.611 173.598 230.299 cv
173.285 230.049 172.91 229.861 172.535 229.861 cv
172.16 229.861 171.785 230.049 171.473 230.299 cv
171.223 230.611 171.035 230.986 171.035 231.361 cv
171.035 231.736 171.223 232.111 171.473 232.424 cv
171.785 232.674 172.16 232.861 172.535 232.861 cv
172.91 232.861 173.285 232.674 173.598 232.424 cv
173.848 232.111 174.035 231.736 174.035 231.361 cv
174.035 231.361 li
cp
f
182.035 230.111 mo
182.035 229.736 181.848 229.361 181.598 229.049 cv
181.285 228.799 180.91 228.611 180.535 228.611 cv
180.16 228.611 179.785 228.799 179.473 229.049 cv
179.223 229.361 179.035 229.736 179.035 230.111 cv
179.035 230.486 179.223 230.861 179.473 231.174 cv
179.785 231.424 180.16 231.611 180.535 231.611 cv
180.91 231.611 181.285 231.424 181.598 231.174 cv
181.848 230.861 182.035 230.486 182.035 230.111 cv
182.035 230.111 li
cp
f
194.598 229.674 mo
194.598 229.299 194.41 228.924 194.16 228.611 cv
193.848 228.361 193.473 228.174 193.098 228.174 cv
192.723 228.174 192.348 228.361 192.035 228.611 cv
191.785 228.924 191.598 229.299 191.598 229.674 cv
191.598 230.049 191.785 230.424 192.035 230.736 cv
192.348 230.986 192.723 231.174 193.098 231.174 cv
193.473 231.174 193.848 230.986 194.16 230.736 cv
194.41 230.424 194.598 230.049 194.598 229.674 cv
194.598 229.674 li
cp
f
227.035 226.611 mo
227.035 226.236 226.848 225.861 226.598 225.549 cv
226.285 225.299 225.91 225.111 225.535 225.111 cv
225.16 225.111 224.785 225.299 224.473 225.549 cv
224.223 225.861 224.035 226.236 224.035 226.611 cv
224.035 226.986 224.223 227.361 224.473 227.674 cv
224.785 227.924 225.16 228.111 225.535 228.111 cv
225.91 228.111 226.285 227.924 226.598 227.674 cv
226.848 227.361 227.035 226.986 227.035 226.611 cv
227.035 226.611 li
cp
f
231.098 216.299 mo
231.098 215.924 230.91 215.549 230.66 215.236 cv
230.348 214.986 229.973 214.799 229.598 214.799 cv
229.223 214.799 228.848 214.986 228.535 215.236 cv
228.285 215.549 228.098 215.924 228.098 216.299 cv
228.098 216.674 228.285 217.049 228.535 217.361 cv
228.848 217.611 229.223 217.799 229.598 217.799 cv
229.973 217.799 230.348 217.611 230.66 217.361 cv
230.91 217.049 231.098 216.674 231.098 216.299 cv
231.098 216.299 li
cp
f
232.16 223.486 mo
232.16 223.111 231.973 222.736 231.723 222.424 cv
231.41 222.174 231.035 221.986 230.66 221.986 cv
230.285 221.986 229.91 222.174 229.598 222.424 cv
229.348 222.736 229.16 223.111 229.16 223.486 cv
229.16 223.861 229.348 224.236 229.598 224.549 cv
229.91 224.799 230.285 224.986 230.66 224.986 cv
231.035 224.986 231.41 224.799 231.723 224.549 cv
231.973 224.236 232.16 223.861 232.16 223.486 cv
232.16 223.486 li
cp
f
244.035 223.611 mo
244.035 223.236 243.848 222.861 243.598 222.549 cv
243.285 222.299 242.91 222.111 242.535 222.111 cv
242.16 222.111 241.785 222.299 241.473 222.549 cv
241.223 222.861 241.035 223.236 241.035 223.611 cv
241.035 223.986 241.223 224.361 241.473 224.674 cv
241.785 224.924 242.16 225.111 242.535 225.111 cv
242.91 225.111 243.285 224.924 243.598 224.674 cv
243.848 224.361 244.035 223.986 244.035 223.611 cv
244.035 223.611 li
cp
f
252.723 217.611 mo
252.723 217.236 252.535 216.861 252.285 216.549 cv
251.973 216.299 251.598 216.111 251.223 216.111 cv
250.848 216.111 250.473 216.299 250.16 216.549 cv
249.91 216.861 249.723 217.236 249.723 217.611 cv
249.723 217.986 249.91 218.361 250.16 218.674 cv
250.473 218.924 250.848 219.111 251.223 219.111 cv
251.598 219.111 251.973 218.924 252.285 218.674 cv
252.535 218.361 252.723 217.986 252.723 217.611 cv
252.723 217.611 li
cp
f
255.91 215.111 mo
255.91 214.736 255.723 214.361 255.473 214.049 cv
255.16 213.799 254.785 213.611 254.41 213.611 cv
254.035 213.611 253.66 213.799 253.348 214.049 cv
253.098 214.361 252.91 214.736 252.91 215.111 cv
252.91 215.486 253.098 215.861 253.348 216.174 cv
253.66 216.424 254.035 216.611 254.41 216.611 cv
254.785 216.611 255.16 216.424 255.473 216.174 cv
255.723 215.861 255.91 215.486 255.91 215.111 cv
255.91 215.111 li
cp
f
259.723 214.924 mo
259.723 214.549 259.535 214.174 259.285 213.861 cv
258.973 213.611 258.598 213.424 258.223 213.424 cv
257.848 213.424 257.473 213.611 257.16 213.861 cv
256.91 214.174 256.723 214.549 256.723 214.924 cv
256.723 215.299 256.91 215.674 257.16 215.986 cv
257.473 216.236 257.848 216.424 258.223 216.424 cv
258.598 216.424 258.973 216.236 259.285 215.986 cv
259.535 215.674 259.723 215.299 259.723 214.924 cv
259.723 214.924 li
cp
f
286.91 211.049 mo
286.91 210.674 286.723 210.299 286.473 209.986 cv
286.16 209.736 285.785 209.549 285.41 209.549 cv
285.035 209.549 284.66 209.736 284.348 209.986 cv
284.098 210.299 283.91 210.674 283.91 211.049 cv
283.91 211.424 284.098 211.799 284.348 212.111 cv
284.66 212.361 285.035 212.549 285.41 212.549 cv
285.785 212.549 286.16 212.361 286.473 212.111 cv
286.723 211.799 286.91 211.424 286.91 211.049 cv
286.91 211.049 li
cp
f
294.598 213.924 mo
294.598 213.549 294.41 213.174 294.16 212.861 cv
293.848 212.611 293.473 212.424 293.098 212.424 cv
292.723 212.424 292.348 212.611 292.035 212.861 cv
291.785 213.174 291.598 213.549 291.598 213.924 cv
291.598 214.299 291.785 214.674 292.035 214.986 cv
292.348 215.236 292.723 215.424 293.098 215.424 cv
293.473 215.424 293.848 215.236 294.16 214.986 cv
294.41 214.674 294.598 214.299 294.598 213.924 cv
294.598 213.924 li
cp
f
271.66 209.611 mo
271.66 209.236 271.473 208.861 271.223 208.549 cv
270.91 208.299 270.535 208.111 270.16 208.111 cv
269.785 208.111 269.41 208.299 269.098 208.549 cv
268.848 208.861 268.66 209.236 268.66 209.611 cv
268.66 209.986 268.848 210.361 269.098 210.674 cv
269.41 210.924 269.785 211.111 270.16 211.111 cv
270.535 211.111 270.91 210.924 271.223 210.674 cv
271.473 210.361 271.66 209.986 271.66 209.611 cv
271.66 209.611 li
cp
f
281.285 214.986 mo
281.285 214.611 281.098 214.236 280.848 213.924 cv
280.535 213.674 280.16 213.486 279.785 213.486 cv
279.41 213.486 279.035 213.674 278.723 213.924 cv
278.473 214.236 278.285 214.611 278.285 214.986 cv
278.285 215.361 278.473 215.736 278.723 216.049 cv
279.035 216.299 279.41 216.486 279.785 216.486 cv
280.16 216.486 280.535 216.299 280.848 216.049 cv
281.098 215.736 281.285 215.361 281.285 214.986 cv
281.285 214.986 li
cp
f
305.16 218.361 mo
305.16 217.986 304.973 217.611 304.723 217.299 cv
304.41 217.049 304.035 216.861 303.66 216.861 cv
303.285 216.861 302.91 217.049 302.598 217.299 cv
302.348 217.611 302.16 217.986 302.16 218.361 cv
302.16 218.736 302.348 219.111 302.598 219.424 cv
302.91 219.674 303.285 219.861 303.66 219.861 cv
304.035 219.861 304.41 219.674 304.723 219.424 cv
304.973 219.111 305.16 218.736 305.16 218.361 cv
305.16 218.361 li
cp
f
282.973 211.736 mo
282.973 211.361 282.785 210.986 282.535 210.674 cv
282.223 210.424 281.848 210.236 281.473 210.236 cv
281.098 210.236 280.723 210.424 280.41 210.674 cv
280.16 210.986 279.973 211.361 279.973 211.736 cv
279.973 212.111 280.16 212.486 280.41 212.799 cv
280.723 213.049 281.098 213.236 281.473 213.236 cv
281.848 213.236 282.223 213.049 282.535 212.799 cv
282.785 212.486 282.973 212.111 282.973 211.736 cv
282.973 211.736 li
cp
f
286.598 215.236 mo
286.598 214.861 286.41 214.486 286.16 214.174 cv
285.848 213.924 285.473 213.736 285.098 213.736 cv
284.723 213.736 284.348 213.924 284.035 214.174 cv
283.785 214.486 283.598 214.861 283.598 215.236 cv
283.598 215.611 283.785 215.986 284.035 216.299 cv
284.348 216.549 284.723 216.736 285.098 216.736 cv
285.473 216.736 285.848 216.549 286.16 216.299 cv
286.41 215.986 286.598 215.611 286.598 215.236 cv
286.598 215.236 li
cp
f
307.223 211.049 mo
307.223 210.674 307.035 210.299 306.785 209.986 cv
306.473 209.736 306.098 209.549 305.723 209.549 cv
305.348 209.549 304.973 209.736 304.66 209.986 cv
304.41 210.299 304.223 210.674 304.223 211.049 cv
304.223 211.424 304.41 211.799 304.66 212.111 cv
304.973 212.361 305.348 212.549 305.723 212.549 cv
306.098 212.549 306.473 212.361 306.785 212.111 cv
307.035 211.799 307.223 211.424 307.223 211.049 cv
307.223 211.049 li
cp
f
294.973 210.861 mo
294.973 210.486 294.785 210.111 294.535 209.799 cv
294.223 209.549 293.848 209.361 293.473 209.361 cv
293.098 209.361 292.723 209.549 292.41 209.799 cv
292.16 210.111 291.973 210.486 291.973 210.861 cv
291.973 211.236 292.16 211.611 292.41 211.924 cv
292.723 212.174 293.098 212.361 293.473 212.361 cv
293.848 212.361 294.223 212.174 294.535 211.924 cv
294.785 211.611 294.973 211.236 294.973 210.861 cv
294.973 210.861 li
cp
f
316.66 213.549 mo
316.66 213.174 316.473 212.799 316.223 212.486 cv
315.91 212.236 315.535 212.049 315.16 212.049 cv
314.785 212.049 314.41 212.236 314.098 212.486 cv
313.848 212.799 313.66 213.174 313.66 213.549 cv
313.66 213.924 313.848 214.299 314.098 214.611 cv
314.41 214.861 314.785 215.049 315.16 215.049 cv
315.535 215.049 315.91 214.861 316.223 214.611 cv
316.473 214.299 316.66 213.924 316.66 213.549 cv
316.66 213.549 li
cp
f
gsave
34.9727 80.9863 mo
34.9727 257.986 li
320.973 257.986 li
320.973 80.9863 li
34.9727 80.9863 li
cp
clp
2 lw
2 lc
0 lj
3.239 ml
[] 0 dsh
true sadj
-7.08984 254.424 mo
-6.96484 254.424 li
-6.83984 254.424 li
-6.65234 254.424 li
-6.21484 254.424 li
-5.33984 254.361 li
-3.58984 254.299 li
-0.0898438 254.236 li
7.53516 254.049 li
14.5977 253.861 li
21.5352 253.611 li
29.0977 253.424 li
36.1602 253.174 li
43.7227 252.986 li
51.2227 252.736 li
58.2227 252.486 li
65.7852 252.236 li
72.8477 251.986 li
79.7852 251.736 li
87.2852 251.424 li
94.2852 251.174 li
101.91 250.861 li
109.348 250.549 li
116.348 250.299 li
123.91 249.924 li
130.91 249.611 li
138.598 249.299 li
146.098 248.924 li
153.035 248.611 li
160.66 248.236 li
167.723 247.861 li
174.66 247.486 li
182.223 247.049 li
189.223 246.674 li
196.848 246.236 li
204.285 245.799 li
211.285 245.361 li
218.848 244.924 li
225.91 244.486 li
232.848 243.986 li
240.348 243.486 li
247.348 243.049 li
254.91 242.486 li
262.035 241.986 li
268.973 241.486 li
276.535 240.861 li
283.535 240.361 li
291.16 239.736 li
298.66 239.111 li
305.66 238.549 li
313.223 237.861 li
320.285 237.236 li
327.223 236.611 li
334.785 235.924 li
341.785 235.236 li
349.41 234.549 li
349.41 234.549 li
349.41 234.549 li
349.41 234.549 li
349.41 234.549 li
349.473 234.549 li
349.473 234.549 li
349.535 234.549 li
349.535 234.549 li
349.535 234.549 li
349.535 234.486 li
349.535 234.486 li
349.535 234.486 li
349.535 234.486 li
349.598 234.486 li
349.598 234.486 li
349.598 234.486 li
349.598 234.486 li
349.598 234.486 li
349.598 234.486 li
349.598 234.486 li
349.598 234.486 li
349.598 234.486 li
0 0.992157 1 0 cmyk
@
grestore
39.3477 253.861 mo
39.3477 253.486 39.2227 253.111 38.9102 252.861 cv
38.6602 252.549 38.2852 252.424 37.9102 252.424 cv
37.5352 252.424 37.1602 252.549 36.9102 252.861 cv
36.5977 253.111 36.4727 253.486 36.4727 253.861 cv
36.4727 254.236 36.5977 254.611 36.9102 254.861 cv
37.1602 255.174 37.5352 255.299 37.9102 255.299 cv
38.2852 255.299 38.6602 255.174 38.9102 254.861 cv
39.2227 254.611 39.3477 254.236 39.3477 253.861 cv
39.3477 253.861 li
cp
0.882353 0.768627 0 0 cmyk
f
42.0977 253.611 mo
42.0977 253.236 41.9727 252.861 41.6602 252.611 cv
41.4102 252.299 41.0352 252.174 40.6602 252.174 cv
40.2852 252.174 39.9102 252.299 39.6602 252.611 cv
39.3477 252.861 39.2227 253.236 39.2227 253.611 cv
39.2227 253.986 39.3477 254.361 39.6602 254.611 cv
39.9102 254.924 40.2852 255.049 40.6602 255.049 cv
41.0352 255.049 41.4102 254.924 41.6602 254.611 cv
41.9727 254.361 42.0977 253.986 42.0977 253.611 cv
42.0977 253.611 li
cp
f
47.9727 253.236 mo
47.9727 252.861 47.8477 252.486 47.5352 252.236 cv
47.2852 251.924 46.9102 251.799 46.5352 251.799 cv
46.1602 251.799 45.7852 251.924 45.5352 252.236 cv
45.2227 252.486 45.0977 252.861 45.0977 253.236 cv
45.0977 253.611 45.2227 253.986 45.5352 254.236 cv
45.7852 254.549 46.1602 254.674 46.5352 254.674 cv
46.9102 254.674 47.2852 254.549 47.5352 254.236 cv
47.8477 253.986 47.9727 253.611 47.9727 253.236 cv
47.9727 253.236 li
cp
f
52.3477 252.549 mo
52.3477 252.174 52.2227 251.799 51.9102 251.549 cv
51.6602 251.236 51.2852 251.111 50.9102 251.111 cv
50.5352 251.111 50.1602 251.236 49.9102 251.549 cv
49.5977 251.799 49.4727 252.174 49.4727 252.549 cv
49.4727 252.924 49.5977 253.299 49.9102 253.549 cv
50.1602 253.861 50.5352 253.986 50.9102 253.986 cv
51.2852 253.986 51.6602 253.861 51.9102 253.549 cv
52.2227 253.299 52.3477 252.924 52.3477 252.549 cv
52.3477 252.549 li
cp
f
54.5977 252.424 mo
54.5977 252.049 54.4727 251.674 54.1602 251.424 cv
53.9102 251.111 53.5352 250.986 53.1602 250.986 cv
52.7852 250.986 52.4102 251.111 52.1602 251.424 cv
51.8477 251.674 51.7227 252.049 51.7227 252.424 cv
51.7227 252.799 51.8477 253.174 52.1602 253.424 cv
52.4102 253.736 52.7852 253.861 53.1602 253.861 cv
53.5352 253.861 53.9102 253.736 54.1602 253.424 cv
54.4727 253.174 54.5977 252.799 54.5977 252.424 cv
54.5977 252.424 li
cp
f
58.7852 251.736 mo
58.7852 251.361 58.6602 250.986 58.3477 250.736 cv
58.0977 250.424 57.7227 250.299 57.3477 250.299 cv
56.9727 250.299 56.5977 250.424 56.3477 250.736 cv
56.0352 250.986 55.9102 251.361 55.9102 251.736 cv
55.9102 252.111 56.0352 252.486 56.3477 252.736 cv
56.5977 253.049 56.9727 253.174 57.3477 253.174 cv
57.7227 253.174 58.0977 253.049 58.3477 252.736 cv
58.6602 252.486 58.7852 252.111 58.7852 251.736 cv
58.7852 251.736 li
cp
f
60.5977 251.799 mo
60.5977 251.424 60.4727 251.049 60.1602 250.799 cv
59.9102 250.486 59.5352 250.361 59.1602 250.361 cv
58.7852 250.361 58.4102 250.486 58.1602 250.799 cv
57.8477 251.049 57.7227 251.424 57.7227 251.799 cv
57.7227 252.174 57.8477 252.549 58.1602 252.799 cv
58.4102 253.111 58.7852 253.236 59.1602 253.236 cv
59.5352 253.236 59.9102 253.111 60.1602 252.799 cv
60.4727 252.549 60.5977 252.174 60.5977 251.799 cv
60.5977 251.799 li
cp
f
63.2227 251.549 mo
63.2227 251.174 63.0977 250.799 62.7852 250.549 cv
62.5352 250.236 62.1602 250.111 61.7852 250.111 cv
61.4102 250.111 61.0352 250.236 60.7852 250.549 cv
60.4727 250.799 60.3477 251.174 60.3477 251.549 cv
60.3477 251.924 60.4727 252.299 60.7852 252.549 cv
61.0352 252.861 61.4102 252.986 61.7852 252.986 cv
62.1602 252.986 62.5352 252.861 62.7852 252.549 cv
63.0977 252.299 63.2227 251.924 63.2227 251.549 cv
63.2227 251.549 li
cp
f
65.9102 251.424 mo
65.9102 251.049 65.7852 250.674 65.4727 250.424 cv
65.2227 250.111 64.8477 249.986 64.4727 249.986 cv
64.0977 249.986 63.7227 250.111 63.4727 250.424 cv
63.1602 250.674 63.0352 251.049 63.0352 251.424 cv
63.0352 251.799 63.1602 252.174 63.4727 252.424 cv
63.7227 252.736 64.0977 252.861 64.4727 252.861 cv
64.8477 252.861 65.2227 252.736 65.4727 252.424 cv
65.7852 252.174 65.9102 251.799 65.9102 251.424 cv
65.9102 251.424 li
cp
f
69.4727 251.299 mo
69.4727 250.924 69.3477 250.549 69.0352 250.299 cv
68.7852 249.986 68.4102 249.861 68.0352 249.861 cv
67.6602 249.861 67.2852 249.986 67.0352 250.299 cv
66.7227 250.549 66.5977 250.924 66.5977 251.299 cv
66.5977 251.674 66.7227 252.049 67.0352 252.299 cv
67.2852 252.611 67.6602 252.736 68.0352 252.736 cv
68.4102 252.736 68.7852 252.611 69.0352 252.299 cv
69.3477 252.049 69.4727 251.674 69.4727 251.299 cv
69.4727 251.299 li
cp
f
72.3477 250.986 mo
72.3477 250.611 72.2227 250.236 71.9102 249.986 cv
71.6602 249.674 71.2852 249.549 70.9102 249.549 cv
70.5352 249.549 70.1602 249.674 69.9102 249.986 cv
69.5977 250.236 69.4727 250.611 69.4727 250.986 cv
69.4727 251.361 69.5977 251.736 69.9102 251.986 cv
70.1602 252.299 70.5352 252.424 70.9102 252.424 cv
71.2852 252.424 71.6602 252.299 71.9102 251.986 cv
72.2227 251.736 72.3477 251.361 72.3477 250.986 cv
72.3477 250.986 li
cp
f
74.7852 251.236 mo
74.7852 250.861 74.6602 250.486 74.3477 250.236 cv
74.0977 249.924 73.7227 249.799 73.3477 249.799 cv
72.9727 249.799 72.5977 249.924 72.3477 250.236 cv
72.0352 250.486 71.9102 250.861 71.9102 251.236 cv
71.9102 251.611 72.0352 251.986 72.3477 252.236 cv
72.5977 252.549 72.9727 252.674 73.3477 252.674 cv
73.7227 252.674 74.0977 252.549 74.3477 252.236 cv
74.6602 251.986 74.7852 251.611 74.7852 251.236 cv
74.7852 251.236 li
cp
f
77.0977 251.236 mo
77.0977 250.861 76.9727 250.486 76.6602 250.236 cv
76.4102 249.924 76.0352 249.799 75.6602 249.799 cv
75.2852 249.799 74.9102 249.924 74.6602 250.236 cv
74.3477 250.486 74.2227 250.861 74.2227 251.236 cv
74.2227 251.611 74.3477 251.986 74.6602 252.236 cv
74.9102 252.549 75.2852 252.674 75.6602 252.674 cv
76.0352 252.674 76.4102 252.549 76.6602 252.236 cv
76.9727 251.986 77.0977 251.611 77.0977 251.236 cv
77.0977 251.236 li
cp
f
80.4102 251.236 mo
80.4102 250.861 80.2852 250.486 79.9727 250.236 cv
79.7227 249.924 79.3477 249.799 78.9727 249.799 cv
78.5977 249.799 78.2227 249.924 77.9727 250.236 cv
77.6602 250.486 77.5352 250.861 77.5352 251.236 cv
77.5352 251.611 77.6602 251.986 77.9727 252.236 cv
78.2227 252.549 78.5977 252.674 78.9727 252.674 cv
79.3477 252.674 79.7227 252.549 79.9727 252.236 cv
80.2852 251.986 80.4102 251.611 80.4102 251.236 cv
80.4102 251.236 li
cp
f
84.3477 251.236 mo
84.3477 250.861 84.2227 250.486 83.9102 250.236 cv
83.6602 249.924 83.2852 249.799 82.9102 249.799 cv
82.5352 249.799 82.1602 249.924 81.9102 250.236 cv
81.5977 250.486 81.4727 250.861 81.4727 251.236 cv
81.4727 251.611 81.5977 251.986 81.9102 252.236 cv
82.1602 252.549 82.5352 252.674 82.9102 252.674 cv
83.2852 252.674 83.6602 252.549 83.9102 252.236 cv
84.2227 251.986 84.3477 251.611 84.3477 251.236 cv
84.3477 251.236 li
cp
f
86.5352 251.424 mo
86.5352 251.049 86.4102 250.674 86.0977 250.424 cv
85.8477 250.111 85.4727 249.986 85.0977 249.986 cv
84.7227 249.986 84.3477 250.111 84.0977 250.424 cv
83.7852 250.674 83.6602 251.049 83.6602 251.424 cv
83.6602 251.799 83.7852 252.174 84.0977 252.424 cv
84.3477 252.736 84.7227 252.861 85.0977 252.861 cv
85.4727 252.861 85.8477 252.736 86.0977 252.424 cv
86.4102 252.174 86.5352 251.799 86.5352 251.424 cv
86.5352 251.424 li
cp
f
90.7852 251.361 mo
90.7852 250.986 90.6602 250.611 90.3477 250.361 cv
90.0977 250.049 89.7227 249.924 89.3477 249.924 cv
88.9727 249.924 88.5977 250.049 88.3477 250.361 cv
88.0352 250.611 87.9102 250.986 87.9102 251.361 cv
87.9102 251.736 88.0352 252.111 88.3477 252.361 cv
88.5977 252.674 88.9727 252.799 89.3477 252.799 cv
89.7227 252.799 90.0977 252.674 90.3477 252.361 cv
90.6602 252.111 90.7852 251.736 90.7852 251.361 cv
90.7852 251.361 li
cp
f
92.9102 251.424 mo
92.9102 251.049 92.7852 250.674 92.4727 250.424 cv
92.2227 250.111 91.8477 249.986 91.4727 249.986 cv
91.0977 249.986 90.7227 250.111 90.4727 250.424 cv
90.1602 250.674 90.0352 251.049 90.0352 251.424 cv
90.0352 251.799 90.1602 252.174 90.4727 252.424 cv
90.7227 252.736 91.0977 252.861 91.4727 252.861 cv
91.8477 252.861 92.2227 252.736 92.4727 252.424 cv
92.7852 252.174 92.9102 251.799 92.9102 251.424 cv
92.9102 251.424 li
cp
f
97.0977 251.361 mo
97.0977 250.986 96.9727 250.611 96.6602 250.361 cv
96.4102 250.049 96.0352 249.924 95.6602 249.924 cv
95.2852 249.924 94.9102 250.049 94.6602 250.361 cv
94.3477 250.611 94.2227 250.986 94.2227 251.361 cv
94.2227 251.736 94.3477 252.111 94.6602 252.361 cv
94.9102 252.674 95.2852 252.799 95.6602 252.799 cv
96.0352 252.799 96.4102 252.674 96.6602 252.361 cv
96.9727 252.111 97.0977 251.736 97.0977 251.361 cv
97.0977 251.361 li
cp
f
99.2852 251.549 mo
99.2852 251.174 99.1602 250.799 98.8477 250.549 cv
98.5977 250.236 98.2227 250.111 97.8477 250.111 cv
97.4727 250.111 97.0977 250.236 96.8477 250.549 cv
96.5352 250.799 96.4102 251.174 96.4102 251.549 cv
96.4102 251.924 96.5352 252.299 96.8477 252.549 cv
97.0977 252.861 97.4727 252.986 97.8477 252.986 cv
98.2227 252.986 98.5977 252.861 98.8477 252.549 cv
99.1602 252.299 99.2852 251.924 99.2852 251.549 cv
99.2852 251.549 li
cp
f
103.473 251.299 mo
103.473 250.924 103.348 250.549 103.035 250.299 cv
102.785 249.986 102.41 249.861 102.035 249.861 cv
101.66 249.861 101.285 249.986 101.035 250.299 cv
100.723 250.549 100.598 250.924 100.598 251.299 cv
100.598 251.674 100.723 252.049 101.035 252.299 cv
101.285 252.611 101.66 252.736 102.035 252.736 cv
102.41 252.736 102.785 252.611 103.035 252.299 cv
103.348 252.049 103.473 251.674 103.473 251.299 cv
103.473 251.299 li
cp
f
106.035 251.299 mo
106.035 250.924 105.91 250.549 105.598 250.299 cv
105.348 249.986 104.973 249.861 104.598 249.861 cv
104.223 249.861 103.848 249.986 103.598 250.299 cv
103.285 250.549 103.16 250.924 103.16 251.299 cv
103.16 251.674 103.285 252.049 103.598 252.299 cv
103.848 252.611 104.223 252.736 104.598 252.736 cv
104.973 252.736 105.348 252.611 105.598 252.299 cv
105.91 252.049 106.035 251.674 106.035 251.299 cv
106.035 251.299 li
cp
f
110.66 251.486 mo
110.66 251.111 110.535 250.736 110.223 250.486 cv
109.973 250.174 109.598 250.049 109.223 250.049 cv
108.848 250.049 108.473 250.174 108.223 250.486 cv
107.91 250.736 107.785 251.111 107.785 251.486 cv
107.785 251.861 107.91 252.236 108.223 252.486 cv
108.473 252.799 108.848 252.924 109.223 252.924 cv
109.598 252.924 109.973 252.799 110.223 252.486 cv
110.535 252.236 110.66 251.861 110.66 251.486 cv
110.66 251.486 li
cp
f
114.41 251.111 mo
114.41 250.736 114.285 250.361 113.973 250.111 cv
113.723 249.799 113.348 249.674 112.973 249.674 cv
112.598 249.674 112.223 249.799 111.973 250.111 cv
111.66 250.361 111.535 250.736 111.535 251.111 cv
111.535 251.486 111.66 251.861 111.973 252.111 cv
112.223 252.424 112.598 252.549 112.973 252.549 cv
113.348 252.549 113.723 252.424 113.973 252.111 cv
114.285 251.861 114.41 251.486 114.41 251.111 cv
114.41 251.111 li
cp
f
117.473 251.049 mo
117.473 250.674 117.348 250.299 117.035 250.049 cv
116.785 249.736 116.41 249.611 116.035 249.611 cv
115.66 249.611 115.285 249.736 115.035 250.049 cv
114.723 250.299 114.598 250.674 114.598 251.049 cv
114.598 251.424 114.723 251.799 115.035 252.049 cv
115.285 252.361 115.66 252.486 116.035 252.486 cv
116.41 252.486 116.785 252.361 117.035 252.049 cv
117.348 251.799 117.473 251.424 117.473 251.049 cv
117.473 251.049 li
cp
f
120.785 250.861 mo
120.785 250.486 120.66 250.111 120.348 249.861 cv
120.098 249.549 119.723 249.424 119.348 249.424 cv
118.973 249.424 118.598 249.549 118.348 249.861 cv
118.035 250.111 117.91 250.486 117.91 250.861 cv
117.91 251.236 118.035 251.611 118.348 251.861 cv
118.598 252.174 118.973 252.299 119.348 252.299 cv
119.723 252.299 120.098 252.174 120.348 251.861 cv
120.66 251.611 120.785 251.236 120.785 250.861 cv
120.785 250.861 li
cp
f
124.285 250.736 mo
124.285 250.361 124.16 249.986 123.848 249.736 cv
123.598 249.424 123.223 249.299 122.848 249.299 cv
122.473 249.299 122.098 249.424 121.848 249.736 cv
121.535 249.986 121.41 250.361 121.41 250.736 cv
121.41 251.111 121.535 251.486 121.848 251.736 cv
122.098 252.049 122.473 252.174 122.848 252.174 cv
123.223 252.174 123.598 252.049 123.848 251.736 cv
124.16 251.486 124.285 251.111 124.285 250.736 cv
124.285 250.736 li
cp
f
128.66 250.924 mo
128.66 250.549 128.535 250.174 128.223 249.924 cv
127.973 249.611 127.598 249.486 127.223 249.486 cv
126.848 249.486 126.473 249.611 126.223 249.924 cv
125.91 250.174 125.785 250.549 125.785 250.924 cv
125.785 251.299 125.91 251.674 126.223 251.924 cv
126.473 252.236 126.848 252.361 127.223 252.361 cv
127.598 252.361 127.973 252.236 128.223 251.924 cv
128.535 251.674 128.66 251.299 128.66 250.924 cv
128.66 250.924 li
cp
f
131.348 250.361 mo
131.348 249.986 131.223 249.611 130.91 249.361 cv
130.66 249.049 130.285 248.924 129.91 248.924 cv
129.535 248.924 129.16 249.049 128.91 249.361 cv
128.598 249.611 128.473 249.986 128.473 250.361 cv
128.473 250.736 128.598 251.111 128.91 251.361 cv
129.16 251.674 129.535 251.799 129.91 251.799 cv
130.285 251.799 130.66 251.674 130.91 251.361 cv
131.223 251.111 131.348 250.736 131.348 250.361 cv
131.348 250.361 li
cp
f
135.035 250.486 mo
135.035 250.111 134.91 249.736 134.598 249.486 cv
134.348 249.174 133.973 249.049 133.598 249.049 cv
133.223 249.049 132.848 249.174 132.598 249.486 cv
132.285 249.736 132.16 250.111 132.16 250.486 cv
132.16 250.861 132.285 251.236 132.598 251.486 cv
132.848 251.799 133.223 251.924 133.598 251.924 cv
133.973 251.924 134.348 251.799 134.598 251.486 cv
134.91 251.236 135.035 250.861 135.035 250.486 cv
135.035 250.486 li
cp
f
137.973 249.924 mo
137.973 249.549 137.848 249.174 137.535 248.924 cv
137.285 248.611 136.91 248.486 136.535 248.486 cv
136.16 248.486 135.785 248.611 135.535 248.924 cv
135.223 249.174 135.098 249.549 135.098 249.924 cv
135.098 250.299 135.223 250.674 135.535 250.924 cv
135.785 251.236 136.16 251.361 136.535 251.361 cv
136.91 251.361 137.285 251.236 137.535 250.924 cv
137.848 250.674 137.973 250.299 137.973 249.924 cv
137.973 249.924 li
cp
f
141.348 250.174 mo
141.348 249.799 141.223 249.424 140.91 249.174 cv
140.66 248.861 140.285 248.736 139.91 248.736 cv
139.535 248.736 139.16 248.861 138.91 249.174 cv
138.598 249.424 138.473 249.799 138.473 250.174 cv
138.473 250.549 138.598 250.924 138.91 251.174 cv
139.16 251.486 139.535 251.611 139.91 251.611 cv
140.285 251.611 140.66 251.486 140.91 251.174 cv
141.223 250.924 141.348 250.549 141.348 250.174 cv
141.348 250.174 li
cp
f
145.66 249.799 mo
145.66 249.424 145.535 249.049 145.223 248.799 cv
144.973 248.486 144.598 248.361 144.223 248.361 cv
143.848 248.361 143.473 248.486 143.223 248.799 cv
142.91 249.049 142.785 249.424 142.785 249.799 cv
142.785 250.174 142.91 250.549 143.223 250.799 cv
143.473 251.111 143.848 251.236 144.223 251.236 cv
144.598 251.236 144.973 251.111 145.223 250.799 cv
145.535 250.549 145.66 250.174 145.66 249.799 cv
145.66 249.799 li
cp
f
148.285 249.611 mo
148.285 249.236 148.16 248.861 147.848 248.611 cv
147.598 248.299 147.223 248.174 146.848 248.174 cv
146.473 248.174 146.098 248.299 145.848 248.611 cv
145.535 248.861 145.41 249.236 145.41 249.611 cv
145.41 249.986 145.535 250.361 145.848 250.611 cv
146.098 250.924 146.473 251.049 146.848 251.049 cv
147.223 251.049 147.598 250.924 147.848 250.611 cv
148.16 250.361 148.285 249.986 148.285 249.611 cv
148.285 249.611 li
cp
f
151.848 249.361 mo
151.848 248.986 151.723 248.611 151.41 248.361 cv
151.16 248.049 150.785 247.924 150.41 247.924 cv
150.035 247.924 149.66 248.049 149.41 248.361 cv
149.098 248.611 148.973 248.986 148.973 249.361 cv
148.973 249.736 149.098 250.111 149.41 250.361 cv
149.66 250.674 150.035 250.799 150.41 250.799 cv
150.785 250.799 151.16 250.674 151.41 250.361 cv
151.723 250.111 151.848 249.736 151.848 249.361 cv
151.848 249.361 li
cp
f
155.223 248.799 mo
155.223 248.424 155.098 248.049 154.785 247.799 cv
154.535 247.486 154.16 247.361 153.785 247.361 cv
153.41 247.361 153.035 247.486 152.785 247.799 cv
152.473 248.049 152.348 248.424 152.348 248.799 cv
152.348 249.174 152.473 249.549 152.785 249.799 cv
153.035 250.111 153.41 250.236 153.785 250.236 cv
154.16 250.236 154.535 250.111 154.785 249.799 cv
155.098 249.549 155.223 249.174 155.223 248.799 cv
155.223 248.799 li
cp
f
157.848 248.549 mo
157.848 248.174 157.723 247.799 157.41 247.549 cv
157.16 247.236 156.785 247.111 156.41 247.111 cv
156.035 247.111 155.66 247.236 155.41 247.549 cv
155.098 247.799 154.973 248.174 154.973 248.549 cv
154.973 248.924 155.098 249.299 155.41 249.549 cv
155.66 249.861 156.035 249.986 156.41 249.986 cv
156.785 249.986 157.16 249.861 157.41 249.549 cv
157.723 249.299 157.848 248.924 157.848 248.549 cv
157.848 248.549 li
cp
f
161.535 248.174 mo
161.535 247.799 161.41 247.424 161.098 247.174 cv
160.848 246.861 160.473 246.736 160.098 246.736 cv
159.723 246.736 159.348 246.861 159.098 247.174 cv
158.785 247.424 158.66 247.799 158.66 248.174 cv
158.66 248.549 158.785 248.924 159.098 249.174 cv
159.348 249.486 159.723 249.611 160.098 249.611 cv
160.473 249.611 160.848 249.486 161.098 249.174 cv
161.41 248.924 161.535 248.549 161.535 248.174 cv
161.535 248.174 li
cp
f
163.16 248.486 mo
163.16 248.111 163.035 247.736 162.723 247.486 cv
162.473 247.174 162.098 247.049 161.723 247.049 cv
161.348 247.049 160.973 247.174 160.723 247.486 cv
160.41 247.736 160.285 248.111 160.285 248.486 cv
160.285 248.861 160.41 249.236 160.723 249.486 cv
160.973 249.799 161.348 249.924 161.723 249.924 cv
162.098 249.924 162.473 249.799 162.723 249.486 cv
163.035 249.236 163.16 248.861 163.16 248.486 cv
163.16 248.486 li
cp
f
166.473 248.299 mo
166.473 247.924 166.348 247.549 166.035 247.299 cv
165.785 246.986 165.41 246.861 165.035 246.861 cv
164.66 246.861 164.285 246.986 164.035 247.299 cv
163.723 247.549 163.598 247.924 163.598 248.299 cv
163.598 248.674 163.723 249.049 164.035 249.299 cv
164.285 249.611 164.66 249.736 165.035 249.736 cv
165.41 249.736 165.785 249.611 166.035 249.299 cv
166.348 249.049 166.473 248.674 166.473 248.299 cv
166.473 248.299 li
cp
f
168.91 248.424 mo
168.91 248.049 168.785 247.674 168.473 247.424 cv
168.223 247.111 167.848 246.986 167.473 246.986 cv
167.098 246.986 166.723 247.111 166.473 247.424 cv
166.16 247.674 166.035 248.049 166.035 248.424 cv
166.035 248.799 166.16 249.174 166.473 249.424 cv
166.723 249.736 167.098 249.861 167.473 249.861 cv
167.848 249.861 168.223 249.736 168.473 249.424 cv
168.785 249.174 168.91 248.799 168.91 248.424 cv
168.91 248.424 li
cp
f
172.223 247.549 mo
172.223 247.174 172.098 246.799 171.785 246.549 cv
171.535 246.236 171.16 246.111 170.785 246.111 cv
170.41 246.111 170.035 246.236 169.785 246.549 cv
169.473 246.799 169.348 247.174 169.348 247.549 cv
169.348 247.924 169.473 248.299 169.785 248.549 cv
170.035 248.861 170.41 248.986 170.785 248.986 cv
171.16 248.986 171.535 248.861 171.785 248.549 cv
172.098 248.299 172.223 247.924 172.223 247.549 cv
172.223 247.549 li
cp
f
174.848 247.549 mo
174.848 247.174 174.723 246.799 174.41 246.549 cv
174.16 246.236 173.785 246.111 173.41 246.111 cv
173.035 246.111 172.66 246.236 172.41 246.549 cv
172.098 246.799 171.973 247.174 171.973 247.549 cv
171.973 247.924 172.098 248.299 172.41 248.549 cv
172.66 248.861 173.035 248.986 173.41 248.986 cv
173.785 248.986 174.16 248.861 174.41 248.549 cv
174.723 248.299 174.848 247.924 174.848 247.549 cv
174.848 247.549 li
cp
f
178.723 247.049 mo
178.723 246.674 178.598 246.299 178.285 246.049 cv
178.035 245.736 177.66 245.611 177.285 245.611 cv
176.91 245.611 176.535 245.736 176.285 246.049 cv
175.973 246.299 175.848 246.674 175.848 247.049 cv
175.848 247.424 175.973 247.799 176.285 248.049 cv
176.535 248.361 176.91 248.486 177.285 248.486 cv
177.66 248.486 178.035 248.361 178.285 248.049 cv
178.598 247.799 178.723 247.424 178.723 247.049 cv
178.723 247.049 li
cp
f
182.035 247.486 mo
182.035 247.111 181.91 246.736 181.598 246.486 cv
181.348 246.174 180.973 246.049 180.598 246.049 cv
180.223 246.049 179.848 246.174 179.598 246.486 cv
179.285 246.736 179.16 247.111 179.16 247.486 cv
179.16 247.861 179.285 248.236 179.598 248.486 cv
179.848 248.799 180.223 248.924 180.598 248.924 cv
180.973 248.924 181.348 248.799 181.598 248.486 cv
181.91 248.236 182.035 247.861 182.035 247.486 cv
182.035 247.486 li
cp
f
184.785 246.861 mo
184.785 246.486 184.66 246.111 184.348 245.861 cv
184.098 245.549 183.723 245.424 183.348 245.424 cv
182.973 245.424 182.598 245.549 182.348 245.861 cv
182.035 246.111 181.91 246.486 181.91 246.861 cv
181.91 247.236 182.035 247.611 182.348 247.861 cv
182.598 248.174 182.973 248.299 183.348 248.299 cv
183.723 248.299 184.098 248.174 184.348 247.861 cv
184.66 247.611 184.785 247.236 184.785 246.861 cv
184.785 246.861 li
cp
f
186.785 246.986 mo
186.785 246.611 186.66 246.236 186.348 245.986 cv
186.098 245.674 185.723 245.549 185.348 245.549 cv
184.973 245.549 184.598 245.674 184.348 245.986 cv
184.035 246.236 183.91 246.611 183.91 246.986 cv
183.91 247.361 184.035 247.736 184.348 247.986 cv
184.598 248.299 184.973 248.424 185.348 248.424 cv
185.723 248.424 186.098 248.299 186.348 247.986 cv
186.66 247.736 186.785 247.361 186.785 246.986 cv
186.785 246.986 li
cp
f
189.723 246.174 mo
189.723 245.799 189.598 245.424 189.285 245.174 cv
189.035 244.861 188.66 244.736 188.285 244.736 cv
187.91 244.736 187.535 244.861 187.285 245.174 cv
186.973 245.424 186.848 245.799 186.848 246.174 cv
186.848 246.549 186.973 246.924 187.285 247.174 cv
187.535 247.486 187.91 247.611 188.285 247.611 cv
188.66 247.611 189.035 247.486 189.285 247.174 cv
189.598 246.924 189.723 246.549 189.723 246.174 cv
189.723 246.174 li
cp
f
191.785 246.049 mo
191.785 245.674 191.66 245.299 191.348 245.049 cv
191.098 244.736 190.723 244.611 190.348 244.611 cv
189.973 244.611 189.598 244.736 189.348 245.049 cv
189.035 245.299 188.91 245.674 188.91 246.049 cv
188.91 246.424 189.035 246.799 189.348 247.049 cv
189.598 247.361 189.973 247.486 190.348 247.486 cv
190.723 247.486 191.098 247.361 191.348 247.049 cv
191.66 246.799 191.785 246.424 191.785 246.049 cv
191.785 246.049 li
cp
f
194.723 246.611 mo
194.723 246.236 194.598 245.861 194.285 245.611 cv
194.035 245.299 193.66 245.174 193.285 245.174 cv
192.91 245.174 192.535 245.299 192.285 245.611 cv
191.973 245.861 191.848 246.236 191.848 246.611 cv
191.848 246.986 191.973 247.361 192.285 247.611 cv
192.535 247.924 192.91 248.049 193.285 248.049 cv
193.66 248.049 194.035 247.924 194.285 247.611 cv
194.598 247.361 194.723 246.986 194.723 246.611 cv
194.723 246.611 li
cp
f
197.723 245.799 mo
197.723 245.424 197.598 245.049 197.285 244.799 cv
197.035 244.486 196.66 244.361 196.285 244.361 cv
195.91 244.361 195.535 244.486 195.285 244.799 cv
194.973 245.049 194.848 245.424 194.848 245.799 cv
194.848 246.174 194.973 246.549 195.285 246.799 cv
195.535 247.111 195.91 247.236 196.285 247.236 cv
196.66 247.236 197.035 247.111 197.285 246.799 cv
197.598 246.549 197.723 246.174 197.723 245.799 cv
197.723 245.799 li
cp
f
200.723 244.861 mo
200.723 244.486 200.598 244.111 200.285 243.861 cv
200.035 243.549 199.66 243.424 199.285 243.424 cv
198.91 243.424 198.535 243.549 198.285 243.861 cv
197.973 244.111 197.848 244.486 197.848 244.861 cv
197.848 245.236 197.973 245.611 198.285 245.861 cv
198.535 246.174 198.91 246.299 199.285 246.299 cv
199.66 246.299 200.035 246.174 200.285 245.861 cv
200.598 245.611 200.723 245.236 200.723 244.861 cv
200.723 244.861 li
cp
f
203.91 245.174 mo
203.91 244.799 203.785 244.424 203.473 244.174 cv
203.223 243.861 202.848 243.736 202.473 243.736 cv
202.098 243.736 201.723 243.861 201.473 244.174 cv
201.16 244.424 201.035 244.799 201.035 245.174 cv
201.035 245.549 201.16 245.924 201.473 246.174 cv
201.723 246.486 202.098 246.611 202.473 246.611 cv
202.848 246.611 203.223 246.486 203.473 246.174 cv
203.785 245.924 203.91 245.549 203.91 245.174 cv
203.91 245.174 li
cp
f
205.598 245.361 mo
205.598 244.986 205.473 244.611 205.16 244.361 cv
204.91 244.049 204.535 243.924 204.16 243.924 cv
203.785 243.924 203.41 244.049 203.16 244.361 cv
202.848 244.611 202.723 244.986 202.723 245.361 cv
202.723 245.736 202.848 246.111 203.16 246.361 cv
203.41 246.674 203.785 246.799 204.16 246.799 cv
204.535 246.799 204.91 246.674 205.16 246.361 cv
205.473 246.111 205.598 245.736 205.598 245.361 cv
205.598 245.361 li
cp
f
207.91 245.361 mo
207.91 244.986 207.785 244.611 207.473 244.361 cv
207.223 244.049 206.848 243.924 206.473 243.924 cv
206.098 243.924 205.723 244.049 205.473 244.361 cv
205.16 244.611 205.035 244.986 205.035 245.361 cv
205.035 245.736 205.16 246.111 205.473 246.361 cv
205.723 246.674 206.098 246.799 206.473 246.799 cv
206.848 246.799 207.223 246.674 207.473 246.361 cv
207.785 246.111 207.91 245.736 207.91 245.361 cv
207.91 245.361 li
cp
f
210.535 244.861 mo
210.535 244.486 210.41 244.111 210.098 243.861 cv
209.848 243.549 209.473 243.424 209.098 243.424 cv
208.723 243.424 208.348 243.549 208.098 243.861 cv
207.785 244.111 207.66 244.486 207.66 244.861 cv
207.66 245.236 207.785 245.611 208.098 245.861 cv
208.348 246.174 208.723 246.299 209.098 246.299 cv
209.473 246.299 209.848 246.174 210.098 245.861 cv
210.41 245.611 210.535 245.236 210.535 244.861 cv
210.535 244.861 li
cp
f
gsave
20.9727 75.9863 mo
20.9727 270.986 li
320.973 270.986 li
320.973 75.9863 li
20.9727 75.9863 li
cp
clp
0.1875 lw
2 lc
0 lj
3.239 ml
[] 0 dsh
true sadj
320.848 81.4238 mo
320.848 257.986 li
35.2227 81.4238 mo
320.848 81.4238 li
35.2227 257.986 mo
35.2227 81.4238 li
320.848 257.986 mo
35.2227 257.986 li
0 0 0 1 cmyk
@
grestore
0.1875 lw
0 lc
0 lj
3.239 ml
[] 0 dsh
true sadj
52.4102 257.986 mo
52.4102 254.611 li
40.4727 257.986 mo
40.4727 255.924 li
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: Times-Roman Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Times-Roman def/FontInfo 5 dict dup begin/ItalicAngle 0 def/OrigFontType /TrueType defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 46 /period putdup 50 /two putdef/FontBBox {-203 -428 1700 1271} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/.notdef <1C60D8A8C9B6079F6CEA24BDEB0F5E4D18DF0CD7E2A11E9D72D963E3987D5E4E6C9FCD> |-/period <1C60D8A8C9B8707CDCE5666C9B3EABE1C8F3B5685DC89284E5BE559D084487449BF37D1D86EF1322476306E241C4EF3BA9B7322496F4AC15DB69BEC6340D464440EA95046229> |-/two <1C60D8A8C9B7A73DE72BAD97A1AB14497350B04AEDCC89B810A7A7579EC67BBA1BB072CAE80FF5F224043D73141B835306B538E1A090321AB63325D8B3A58C70F1FD34F3553B37A8BF6164DDA11E437012DC022ABF8601BBE36E43FA1BA89215476687E89F4C0A4BCB6119B7B6C22E9A6D30709E37D3141BAD532924FFAD1DE501B4> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/SGFHEW+Times-Roman /Times-Roman findfont ct_VMDictPut/SGFHEW+Times-Roman*1 [46{/.notdef}rp /period 3{/.notdef}rp /two 205{/.notdef}rp]SGFHEW+Times-Roman nfSGFHEW+Times-Roman*1 [9 0 0 -9 0 0 ]msf46.7539 268.963 mo(2.)[4.5 0 ]xsh%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginSGFHEW+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/zero <1C60D8A8C9B7A73DB9A6590C6FE2B7096DCA6F9A5EA5CF6E8AC2157EC7418EBDC43117FA8257DD5995ADA72B55217A703B5CBF244854B4360CFDF4258ECD5C9DEB492AEA5EC77E976B17AE7E2222D3F2CC89571B26AFB82DDBE99926812437BF7851C7D506B52E7A7DE1242CAC6D81645AF838199FD3EBA9B534D647714BFDCAF64F05E4> |-systemdict /gcheck known {setglobal} if end {end} ifendSGFHEW+Times-Roman /Encoding getdup 48 /zero putpop%ADOEndSubsetFont
/SGFHEW+Times-Roman*1 [46{/.notdef}rp /period /.notdef /zero /.notdef /two 205{/.notdef}rp]SGFHEW+Times-Roman nfSGFHEW+Times-Roman*1 [9 0 0 -9 0 0 ]msf53.5039 268.963 mo(0)sh111.848 257.986 mo
111.848 254.611 li
99.9102 257.986 mo
99.9102 255.924 li
88.0352 257.986 mo
88.0352 255.924 li
76.1602 257.986 mo
76.1602 255.924 li
64.2852 257.986 mo
64.2852 255.924 li
@
SGFHEW+Times-Roman*1 [9 0 0 -9 0 0 ]msf106.199 268.963 mo(2.)[4.5 0 ]xsh%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginSGFHEW+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/five <1C60D8A8C9B7A73D986C0D7DE9D329253DCB6E971CF9F86B9AEBF9128F879E3BA076A7524F8AC6EF0948A0BD36A1BBAD3176809EA5D8C10BC04F27D1FCF8D9BA3577509C082FF1EE49DF22B08F8B21F3A6C3932A3BC82C6C594431B4032E2BEF80E15787B3E427A047FD8FD191291F42BAC74588B21DCB1EB3232C29BA67B72B9A00CCBC571F0227C6EF50964CF91F1B0EC573A04AE3E4DF9447B77BD2A0A959F534BEC79AECEF51C27F8D677FD06B99742B747A695088E88EBCC4A6BCCC7402ABFDFE9926161D96> |-systemdict /gcheck known {setglobal} if end {end} ifendSGFHEW+Times-Roman /Encoding getdup 53 /five putpop%ADOEndSubsetFont
/SGFHEW+Times-Roman*1 [46{/.notdef}rp /period /.notdef /zero /.notdef /two 2{/.notdef}rp /five 202{/.notdef}rp]SGFHEW+Times-Roman nfSGFHEW+Times-Roman*1 [9 0 0 -9 0 0 ]msf112.957 268.963 mo(5)sh171.285 257.986 mo
171.285 254.611 li
159.41 257.986 mo
159.41 255.924 li
147.473 257.986 mo
147.473 255.924 li
135.598 257.986 mo
135.598 255.924 li
123.723 257.986 mo
123.723 255.924 li
@
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginSGFHEW+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/three <1C60D8A8C9B7A73D960D5C905E34DC81A096980F2B4111B9B099A6DB83E1916FF3E1A9E04B02D3E9232818F77B09A9AACB5832FED542FDDA70002EB05443C3A08AC9203ACF784CB865C5B9F7D872416879897E73175190413158DECCEEC3F81053539EF7A5BA54848FD5EF8191B77C87FC4B2FB70A247D6480306D63973D6D1E40988764838CF4D7C7CFD56B10F551336B687A8CAD70446C673C2BFDC7C6AD86547DB031DFD479DCB051DAF5177334E8CD4B35F8B65FC86BD3BDBBB8D1E2B3149970112D8374721C0AB537409EB4ADF5E62264D22634EE> |-systemdict /gcheck known {setglobal} if end {end} ifendSGFHEW+Times-Roman /Encoding getdup 51 /three putpop%ADOEndSubsetFont
/SGFHEW+Times-Roman*1 [46{/.notdef}rp /period /.notdef /zero /.notdef /two /three /.notdef /five 202{/.notdef}rp]SGFHEW+Times-Roman nfSGFHEW+Times-Roman*1 [9 0 0 -9 0 0 ]msf165.652 268.963 mo(3.)[4.5 0 ]xshSGFHEW+Times-Roman*1 [9 0 0 -9 0 0 ]msf172.402 268.963 mo(0)sh230.723 257.986 mo
230.723 254.611 li
218.848 257.986 mo
218.848 255.924 li
206.973 257.986 mo
206.973 255.924 li
195.035 257.986 mo
195.035 255.924 li
183.16 257.986 mo
183.16 255.924 li
@
SGFHEW+Times-Roman*1 [9 0 0 -9 0 0 ]msf225.098 268.963 mo(3.)[4.5 0 ]xshSGFHEW+Times-Roman*1 [9 0 0 -9 0 0 ]msf231.84 268.963 mo(5)sh290.16 257.986 mo
290.16 254.611 li
278.285 257.986 mo
278.285 255.924 li
266.41 257.986 mo
266.41 255.924 li
254.473 257.986 mo
254.473 255.924 li
242.598 257.986 mo
242.598 255.924 li
@
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginSGFHEW+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/four <1C60D8A8C9B7A73DB992534E0CF1B84939C969D2AC65F1AE73EE883487A67D0ECB26822C5FF826C828AC8594DE5FF3D9E5AE6F090B> |-systemdict /gcheck known {setglobal} if end {end} ifendSGFHEW+Times-Roman /Encoding getdup 52 /four putpop%ADOEndSubsetFont
/SGFHEW+Times-Roman*1 [46{/.notdef}rp /period /.notdef /zero /.notdef /two /three /four /five 202{/.notdef}rp]SGFHEW+Times-Roman nfSGFHEW+Times-Roman*1 [9 0 0 -9 0 0 ]msf284.543 268.963 mo(4.)[4.5 0 ]xshSGFHEW+Times-Roman*1 [9 0 0 -9 0 0 ]msf291.293 268.963 mo(0)sh35.2227 257.986 mo
38.5977 257.986 li
313.973 257.986 mo
313.973 255.924 li
302.035 257.986 mo
302.035 255.924 li
@
SGFHEW+Times-Roman*1 [9 0 0 -9 0 0 ]msf20.9727 260.963 mo(0.)[4.5 0 ]xshSGFHEW+Times-Roman*1 [9 0 0 -9 0 0 ]msf27.7227 260.963 mo(0)sh35.2227 232.736 mo
38.5977 232.736 li
35.2227 239.049 mo
37.2227 239.049 li
35.2227 245.361 mo
37.2227 245.361 li
35.2227 251.674 mo
37.2227 251.674 li
@
SGFHEW+Times-Roman*1 [9 0 0 -9 0 0 ]msf20.9727 235.744 mo(0.)[4.5 0 ]xshSGFHEW+Times-Roman*1 [9 0 0 -9 0 0 ]msf27.7227 235.744 mo(2)sh35.2227 207.549 mo
38.5977 207.549 li
35.2227 213.799 mo
37.2227 213.799 li
35.2227 220.111 mo
37.2227 220.111 li
35.2227 226.424 mo
37.2227 226.424 li
@
SGFHEW+Times-Roman*1 [9 0 0 -9 0 0 ]msf20.9727 210.525 mo(0.)[4.5 0 ]xshSGFHEW+Times-Roman*1 [9 0 0 -9 0 0 ]msf27.7227 210.525 mo(4)sh35.2227 182.299 mo
38.5977 182.299 li
35.2227 188.611 mo
37.2227 188.611 li
35.2227 194.924 mo
37.2227 194.924 li
35.2227 201.236 mo
37.2227 201.236 li
@
SGFHEW+Times-Roman*1 [9 0 0 -9 0 0 ]msf20.9727 185.299 mo(0.)[4.5 0 ]xsh%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginSGFHEW+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/six <1C60D8A8C9B7A73DB6D2877672A15D933475028E1A563F35D9B429BC044364BBEA6C8D8E288B5629F6BF21219495DF799C22E6D194E7EF19D2BF50638A5DFD525E61CAA756DFB58BC6CF02B70355716B1567E587BDF24EE1CD60FDA306A5E8E3EC9A065FDF865555F45DE4B3A9666958B7C5B64C412BD6705A27F81BA359AA5385B74802E199214ED2C08D85C8D9515B8A71A37E696B11B788D46272326187B79B809C5ABF82FEBD4C4DE257125A17BA43> |-systemdict /gcheck known {setglobal} if end {end} ifendSGFHEW+Times-Roman /Encoding getdup 54 /six putpop%ADOEndSubsetFont
/SGFHEW+Times-Roman*1 [46{/.notdef}rp /period /.notdef /zero /.notdef /two /three /four /five /six 201{/.notdef}rp]SGFHEW+Times-Roman nfSGFHEW+Times-Roman*1 [9 0 0 -9 0 0 ]msf27.7227 185.299 mo(6)sh35.2227 157.111 mo
38.5977 157.111 li
35.2227 163.361 mo
37.2227 163.361 li
35.2227 169.674 mo
37.2227 169.674 li
35.2227 175.986 mo
37.2227 175.986 li
@
SGFHEW+Times-Roman*1 [9 0 0 -9 0 0 ]msf20.9727 160.08 mo(0.)[4.5 0 ]xsh%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginSGFHEW+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/eight <1C60D8A8C9B7A73DB9AA6386F0D433AA59FB601CE68D9D6220D80F865EFA1568339E25269162989F3B16CF5E1B85465E9B09AD3E1F38EB0BC3CC5B97FD7D595D378E5AF532DAC1C0173C6C74DAC1A5EFEB2094038777E094111D458CECDBEE2BFAFA1B194747D5AC182EDAECA7759C2CF7DA7B573AFBC7EB901C25328CA8529A5AF9870597DA9D6CE71ED45E3423137009ACC2E00FA606E5775C8BEB1D188095A69B5C3B51980741130E91409210303836D6B9BCD44F7FE0CC1ED555E839C2D5D70041FF279A3E977285D9F41DC64AB105D99B2CC098F9CEE3C23260EF9612DAD441A57B770C0516F587622E5D85261682E95C452BF079> |-systemdict /gcheck known {setglobal} if end {end} ifendSGFHEW+Times-Roman /Encoding getdup 56 /eight putpop%ADOEndSubsetFont
/SGFHEW+Times-Roman*1 [46{/.notdef}rp /period /.notdef /zero /.notdef /two /three /four /five /six /.notdef /eight 199{/.notdef}rp]SGFHEW+Times-Roman nfSGFHEW+Times-Roman*1 [9 0 0 -9 0 0 ]msf27.7227 160.08 mo(8)sh35.2227 131.861 mo
38.5977 131.861 li
35.2227 138.174 mo
37.2227 138.174 li
35.2227 144.486 mo
37.2227 144.486 li
35.2227 150.799 mo
37.2227 150.799 li
@
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginSGFHEW+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/one <1C60D8A8C9B7A73DB999B05B43470AE76323D53E9C54AE29C0ACC4151BDD30C8F3109BFE7DACF9BA339B31B8666788A01E1F3860FDA3F22312D6A6628C8CCA55270976BF3BB8008DD87D719627657135E81F194E374733A743BBCD543132801A49C4BA675F59C41D> |-systemdict /gcheck known {setglobal} if end {end} ifendSGFHEW+Times-Roman /Encoding getdup 49 /one putpop%ADOEndSubsetFont
/SGFHEW+Times-Roman*1 [46{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /.notdef /eight 199{/.notdef}rp]SGFHEW+Times-Roman nfSGFHEW+Times-Roman*1 [9 0 0 -9 0 0 ]msf20.9727 134.861 mo(1.)[4.5 0 ]xshSGFHEW+Times-Roman*1 [9 0 0 -9 0 0 ]msf27.7227 134.861 mo(0)sh35.2227 106.674 mo
38.5977 106.674 li
35.2227 112.924 mo
37.2227 112.924 li
35.2227 119.236 mo
37.2227 119.236 li
35.2227 125.549 mo
37.2227 125.549 li
@
SGFHEW+Times-Roman*1 [9 0 0 -9 0 0 ]msf20.9727 109.643 mo(1.)[4.5 0 ]xshSGFHEW+Times-Roman*1 [9 0 0 -9 0 0 ]msf27.7227 109.643 mo(2)sh35.2227 81.4238 mo
38.5977 81.4238 li
35.2227 87.7363 mo
37.2227 87.7363 li
35.2227 94.0488 mo
37.2227 94.0488 li
35.2227 100.361 mo
37.2227 100.361 li
@
SGFHEW+Times-Roman*1 [9 0 0 -9 0 0 ]msf20.9727 84.4238 mo(1.)[4.5 0 ]xshSGFHEW+Times-Roman*1 [9 0 0 -9 0 0 ]msf27.7227 84.4238 mo(4)shgsave
20.9727 75.9863 mo
20.9727 270.986 li
320.973 270.986 li
320.973 75.9863 li
20.9727 75.9863 li
cp
clp
320.848 81.4238 mo
317.473 81.4238 li
320.848 87.7363 mo
318.848 87.7363 li
320.848 94.0488 mo
318.848 94.0488 li
320.848 100.361 mo
318.848 100.361 li
320.848 106.674 mo
317.473 106.674 li
320.848 112.924 mo
318.848 112.924 li
320.848 119.236 mo
318.848 119.236 li
320.848 125.549 mo
318.848 125.549 li
320.848 131.861 mo
317.473 131.861 li
320.848 138.174 mo
318.848 138.174 li
320.848 144.486 mo
318.848 144.486 li
320.848 150.799 mo
318.848 150.799 li
320.848 157.111 mo
317.473 157.111 li
320.848 163.361 mo
318.848 163.361 li
320.848 169.674 mo
318.848 169.674 li
320.848 175.986 mo
318.848 175.986 li
320.848 182.299 mo
317.473 182.299 li
320.848 188.611 mo
318.848 188.611 li
320.848 194.924 mo
318.848 194.924 li
320.848 201.236 mo
318.848 201.236 li
320.848 207.549 mo
317.473 207.549 li
320.848 213.799 mo
318.848 213.799 li
320.848 220.111 mo
318.848 220.111 li
320.848 226.424 mo
318.848 226.424 li
320.848 232.736 mo
317.473 232.736 li
320.848 239.049 mo
318.848 239.049 li
320.848 245.361 mo
318.848 245.361 li
320.848 251.674 mo
318.848 251.674 li
320.848 257.986 mo
317.473 257.986 li
313.973 81.4238 mo
313.973 83.4238 li
302.035 81.4238 mo
302.035 83.4238 li
290.16 81.4238 mo
290.16 84.7988 li
278.285 81.4238 mo
278.285 83.4238 li
266.41 81.4238 mo
266.41 83.4238 li
254.473 81.4238 mo
254.473 83.4238 li
242.598 81.4238 mo
242.598 83.4238 li
230.723 81.4238 mo
230.723 84.7988 li
218.848 81.4238 mo
218.848 83.4238 li
206.973 81.4238 mo
206.973 83.4238 li
195.035 81.4238 mo
195.035 83.4238 li
183.16 81.4238 mo
183.16 83.4238 li
171.285 81.4238 mo
171.285 84.7988 li
159.41 81.4238 mo
159.41 83.4238 li
147.473 81.4238 mo
147.473 83.4238 li
135.598 81.4238 mo
135.598 83.4238 li
123.723 81.4238 mo
123.723 83.4238 li
111.848 81.4238 mo
111.848 84.7988 li
99.9102 81.4238 mo
99.9102 83.4238 li
88.0352 81.4238 mo
88.0352 83.4238 li
76.1602 81.4238 mo
76.1602 83.4238 li
64.2852 81.4238 mo
64.2852 83.4238 li
52.4102 81.4238 mo
52.4102 84.7988 li
40.4727 81.4238 mo
40.4727 83.4238 li
@
grestore
196.605 100.344 mo
196.605 99.9165 196.392 99.4893 196.106 99.1328 cv
195.751 98.8481 195.323 98.6343 194.896 98.6343 cv
194.468 98.6343 194.04 98.8481 193.685 99.1328 cv
193.399 99.4893 193.186 99.9165 193.186 100.344 cv
193.186 100.771 193.399 101.199 193.685 101.555 cv
194.04 101.84 194.468 102.054 194.896 102.054 cv
195.323 102.054 195.751 101.84 196.106 101.555 cv
196.392 101.199 196.605 100.771 196.605 100.344 cv
196.605 100.344 li
cp
0.811765 0.027451 1 0 cmyk
f
196.605 108.324 mo
196.605 107.878 196.456 107.432 196.085 107.135 cv
195.787 106.763 195.342 106.614 194.896 106.614 cv
194.449 106.614 194.004 106.763 193.706 107.135 cv
193.335 107.432 193.186 107.878 193.186 108.324 cv
193.186 108.77 193.335 109.216 193.706 109.514 cv
194.004 109.886 194.449 110.034 194.896 110.034 cv
195.342 110.034 195.787 109.886 196.085 109.514 cv
196.456 109.216 196.605 108.77 196.605 108.324 cv
196.605 108.324 li
cp
0.882353 0.768627 0 0 cmyk
f
192.331 115.592 mo
197.46 115.592 li
0 0.992157 1 0 cmyk
f
3 lw
2 lc
192.331 115.592 mo
197.46 115.592 li
@
0.74902 0.678431 0.670588 0.901961 cmyk
%ADOBeginSubsetFont: TimesNewRomanPSMT Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /TimesNewRomanPSMT def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 40 /parenleft putdup 41 /parenright putdup 43 /plus putdup 65 /A putdup 67 /C putdup 70 /F putdup 72 /H putdup 97 /a putdup 99 /c putdup 100 /d putdup 101 /e putdup 105 /i putdup 108 /l putdup 109 /m putdup 110 /n putdup 111 /o putdup 112 /p putdup 116 /t putdup 117 /u putdup 121 /y putdef/FontBBox {-568 -307 2000 1007} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings22 dict dup begin/.notdef <1C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72EFEDBB222483BD74F8B> |-/space <1C60D8A8C9B8707C25> |-/parenleft <1C60D8A8C9B81F2C3AC09B674C4ECE2BEF4D70AD3508D915EA9AE12419376F6EEF231ECE8179CA4531F29291ACACE060AEF98AD6F2FFF2BEA533946FFA1C8BC3953D72A31BB8ABD9782D71B2146F964D99646263E2D414F84FA049D36B9B13B7F6C8AA7A4A5EB0> |-/parenright <1C60D8A8C9B81F2C3CA029BC286E27661FD7F18B990CFF4A0AF58404A2F35E11D14FBA406192D392AD203A879E34B8FA3132863211808E5BD63BDAA607B8E04E23E92C61AAA8B57E5E7609689020D20EB927A1EC6CC0BC06B540A016D558248DC4A3E8183F5F> |-/plus <1C60D8A8C9B7E7C1AF20108BE9542537F46D63CC3CA2839958A1F5DF80C8F650E8951850C571859AA14DD682> |-/A <1C60D8A8C9B6079F6D0C3DD1DA701F2FEF50BE2CCF679467EAB463D54C495B1FC98737C4805A67EB9B211579E256E1BCD120087B7083980EFC748D95F15A9738703A6CB4125517112E8D63595864B93D16C7B325AB1759098D24D8A43A63AEECA533864B64013C499C4207455D5210408E58672A172F78CB14D73985071102DFA93B6532> |-/C <1C60D8A8C9B64EDFFBA6F0CF8A2CDA79A069460245F5373797A9E71DEA345031885496623E7C65FDB470FC6BFF7BE37B20FF363C43CAB08BA8E918FCBA9DEB0021B12355971EB2945D0594E78D2EE4D593C49790304E106026BC942097158DDBF12F8B83C9752B02212C28957008FA70A685356583CB4C7D6F55B12AC7399ECFE4B69C91B472A6132E65C9F7B697AE783582C9D65C392064A7C49C83B283409DD22AD16B7DD28B54D5FC454C> |-/F <1C60D8A8C9B7EF322BE6235043C5A7A6ECCDDDC390BE41D3E01CEDAA91CB335118BB7C10CD87A1A789356A0826D033ECDD0352DC64AE55B383C11F3EB18A6F42CD78A260CB051779A3B4D92350DD65D27B671C1609DC36FBFF44C40F44FB014C0462CFF40EA9650CDFB895B99B69FA8BD3EB8152DF452581818551FCC7745E9E79F62FD5E1668E4EFD8B2F33AB5D5ED30AB06AFD78EF98B1A68AA26FC8B4D7DDC1356637FA048F199EDF19A428> |-/H <1C60D8A8C9B6079F62C8472A58E49E4C65298F7DBB13584B0C608B103B8F2B0C72AF215D43C457FE4678B9114F992A1CA0DD95AD962EE67821EBE89C76AF7B7C203022FE3C67E29F7C9AA5921E4D15A2645D93C73845A47B6C4F855F057FBA3B47AC2707354E73F37A88912B11BC586C19F99285C7E09F7C6AE400A135AD2578B2C1702C267512A0254A355FAF242A3E032C2D5773AA8E4D90998616B06DE2126832E624AA95B6CEA6DE0CF980ABC5058497B243E4F1F614D2E3330AC509CE2BF6F280235C57C7347C7DBE389D9DA8C428E4F439ED717BD43889835C90DE66BDF27965E2CAF6D3F8A236> |-/a <1C60D8A8C9B77FE2CEA139CB15A16492F485162FE605BA10F460B6DC550DEC7BA0BCA1B89C8429260417FE96BA758C22F6762386C9F1CAF53456C89D4C6B177AA810FBB608A57F053C4DA17FD8A122DD63CD2EE0563B0FFA48FEF5CBDB333E4EF010579993E238020BE59CA5D3F31F329BD506C436A3A2AAAB6CBD385FDB0E5188BC3D34A31214C941C253FAF1F818F84A3F73340CA7F3B7A85C87022E70BF3FF56918287082AAA1D7B6CDE998BE3D8663592D3F0DEFC69D87A351A29895DE83B0D7478C3C01D85F944C563EFCF85986470E4B8EDEEDC025A0FB3217B737B99EB7B6E2243F66B907475D1C465D1D07EDFEFC5123FE5A4D48A8B15BE3272EF1EF1464C3F0D45D7CBB8749AF571E09> |-/c <1C60D8A8C9B77FE2C180CE42B4078449B9D767742AB4CF5971DFD438ECC54400989182964B065BACA704BA363536AC987FC433F59A23A3DC16CBD969F42A6041BB8327C43B9105FC5DF44A0437E9E26FE545542A602D007FC6A926264F9C2999730E7919239B324086FEA852156F456647AA0692084759C352D6998971799F4BEF3EFB7DE91C98C83C567200278FF2145E16D28EDE7556C59DB204> |-/d <1C60D8A8C9B7A73DB9CAB5EAE520FF5085D357A7F1B1CBAAAB9D3C3D203065B58561B55699E1F852D974E24DCDB3FAC1151DF1DB63800C3FA779DDD3329A86B4E9458DA578ECA7DC82AB1CB5558FB398EDD8AF237A44BB61AD8FF07FB857EAFB03E3B7223E134D0A703B89A6CB54355CD1F1518C86E0EAFDD151579F5CCB01DCDB1BD56096AB78D2E9ADD609F7B156D422E9074A62B38BF35F82A0AAD104E0C2CB94DA5F3F39F8DB246ADB5F008F682AF80FAED0C691E7A618879362783A36815EA1CE5876FAC4F83CDFE1BD4A> |-/e <1C60D8A8C9B77FE2C19119FE019B929F076F8319E8913467AECA41BE2BEAD3EC175346E3F888D3AD76D215AD69034A954DFD661ECBEA3B145468480B6A15F5C865D2083DC0B04744AA76DE4CC9E0C9DBDCC2C59DAA00F28A6A47092C7FFA0397DC47C5CBBA69AD805D3DD20D56411E92B0DE9E3F19C2FDEE1FA501318984A59E1CFFFD06EA629758085868D3F5F7204292> |-/i <1C60D8A8C9B854D0F4318DEB2BF4A8C14C2FAB601E0ED2FF31B9BA2C4F4D9D824A65F9E753CDA6D59F3AE6B969EC176D4AA1F064BFADF6F4B6A5454B78F98C4B41AC403B87C0044C2A2776BF32D7D2C5370D6DB44827DB4719A169BBE365B0C0BED49A30732BB5E35B7101E488713F0203C9161D1F92C48C80A640085090E2C5D79817DC05EB1FC5E4D24EE71772E51241DF9FD4D574115CFC53427DCBCB8CA3E9F85837FAC6> |-/l <1C60D8A8C9B854D0F40B290C0C99C039EA88FDD293C1FEAB15D2F6B8C4304B80428A9C9B5571B0EE47CC29A6D67DEE51ABBBE57F6DDF0C02037EE8B6828D244FB880634A92D947174D08130E6E2CF978B5067AA82A4CABC55E600FCE5527D6441CE02F5A28D63A618F> |-/m <1C60D8A8C9B6FF86F5D75501F5946D14C10E01941D6F8F408CE11167932D24264D7EFCAC2AE86125FDD757A8758D869BC4213413CCB2A6A255440BA1816E9DC45844CC319542821B45F7B81EE7391A0EDD08008613940B7EF538F41747A2556BE4D609FA0E86A3720064373B35B3C09F29E00670FDA88D75DD91439C68FD574D15688B76675600DF49F10BE44872E462D2FA9EDC453EEFA6E997D8F249107C6F71C5B180EF91CFB08123DB5F12D5248BB769BCDBF86D09B3C1EE1D61D18CE6632A82186FF826CE8FF5C9F24094455D2446DAB1258D7CEF6AB64018AE955617323D2765A0C9FC9EE9EFC157214A4EF1A088A6CBE09BD12BF0618C85527D987ABAA0F84BBDB3F467CD6D1AFC5F01D6CD6E91196626F968CD9EC222C872FAFEC679ED97966B06F7D45253DA82AACAAC774A43132A3F4B4FB40FD07B5AFDAE82B335C3B8E42DF7C6FCB1E78E5819FAE1E5B06EBADF2F71F0A59372AEE76B517996> |-/n <1C60D8A8C9B7A73DB913C38909CDA29FD53BC2807766C389AFB9ED86F7BC81642DEC755C464ECEF36210D9B2C516FEA8C1248DF87B00C42E8B7B13BCCD9D4DADECDD469C646397E88CF560CD28B02CAE7D1B9203699A1DE9CF796CD494DF60582CAFD70B7F17C1569B79CFC1B11937F06CBBF98FB3F8ABA83215B280026130687B8B88299FC622B1B9C743E6B4E2D3E657B3D5566E1938323637D7929F2E277006B7F4C91822AAA6911E494E2AD0998CB1FC1434E1920012738BB988F6A0027198438FE663C2EACF82CEB86F7C727594> |-/o <1C60D8A8C9B7A73DB903ADC070A7C49752E736186D1727D7954B8F3DD4416250EFB2715F7FEA4B4F24611BB7B770A0989FFD12258A4EC0D90DD9998BDAF996A44DE027AE6C486FF30337F30EB574748A139900482713C8EF6F8455DA436702294DB22515A99C4ACC57A269598D687C25D5F66128E3441FE6E0D99B55B68D9C19E720D771564C6692898D127FC55C985D08C7E6B95F874FD094> |-/p <1C60D8A8C9B7A73DDE03BEEA75B31F61E78B8C94AAF630ACAE1A607BD40EB48302A40F17E763F71E8B5595B8EEEBB33C0827EEA0DE5370DD4C7A09244048D0DA814D6E79BAC2B8E456D2F119496FF35E5A13F4B8F71ECD895B10E20FBAC666023D0941B5A0FF139CBD18745BC2892DD91EE541EAD2B54AF0839C3327F75904A81A3805CFC7AF83735A7079B305271753A14327F3CB693ACCFE5C9D6A3B8431B357819DFFAD81BD2A60573E4CA4C48EC0A5E07291768D829E6A70067C076E94545FD4D8E2BB7431617263A47DB04F0B8630D6AB06FF2DD1B1F383A59D02DF1C7730E7CC0F462D79552DFA> |-/t <1C60D8A8C9B854D0F414EAB29549463C152A8395E080F8A65050DED29448713A9991EC80B85D2E40BC855D0C9C1C8F48B9F54A9F2AF77E5AE0CF2D93DC43DDEECA57457D57C32A4E7F92D72E19B411BD6A8FD776B503B1ED0E4E775E798B36CAB4543E392F481E83DAF858D3B1A895E3CC06AB3573C04543D9> |-/u <1C60D8A8C9B7A73DB9860E0681DA8AEA1E5FBC1C72A452614FEB33CC58A199CCF544A550BDEE35652D618DE4A02AA9CF0753ADA232102DC8DC25CB958152D1B74BC447B68C074C25C2126470565A20B42A419CDD0C7A1DA63C6A764D555B867A9BE961ADBD0AF5B2007F47FCC9435F8B51D3F3A5D83941DD57A0C4D32E169A6BACC26F8AD3C9372F1114911D1D3F3FB2725FADBF9F529AA2CFB178B79F97520325221F3417C7781EB09765> |-/y <1C60D8A8C9B7A73DDE03E4B644C159EB8B647E016C26B087177A3C5BC5BAF02161182070C8A4222C2E1ED9B95B756DF22232FA7BE5897B7C6D574795119A3B50894B8B0E1A184B7636697D129D88C76A3FD42BABE719D85F7DC372AB50B8B16D988DA863EE6A5B7454A406C9D5E815158A5786509E6DF27377A83F3454DD6905EA3123CBA5BA0D4772C12767864CF2C5FEDE2AFF05D3CC0534D74E6AE9DBF9F3B49677449A761BE771C9C1AB2D4DC994988233EE24B9E175796C6F13518A71BC990F312D4821883A95164BCE1683B85434AFA8> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/SGFHEX+TimesNewRomanPSMT /TimesNewRomanPSMT findfont ct_VMDictPut/SGFHEX+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 21{/.notdef}rp /A /.notdef /C 2{/.notdef}rp /F /.notdef /H 24{/.notdef}rp /a /.notdef /c /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o /p 3{/.notdef}rp /t /u 3{/.notdef}rp /y 134{/.notdef}rp]SGFHEX+TimesNewRomanPSMT nfSGFHEX+TimesNewRomanPSMT*1 [6.84 0 0 -6.84 0 0 ]msf201.269 101.436 mo(Heat Capacity \(Cu Addendum + He\))[4.93945 3.03613 3.03613 1.90039 1.70996 4.5625 3.03613 3.41992 3.03613 3.03613 1.90039 1.90039 3.41992 1.70996 2.27734 4.5625 3.41992 1.33301 4.93945 3.41992 3.41992 3.03613 3.41992 3.41992 3.41992 5.32031 1.70996 3.85742 1.70996 4.93945 3.03613 0 ]xsh201.269 108.656 mo(Heat Capacity \(Cu Addendum only\))[4.93945 3.03613 3.03613 1.90039 1.70996 4.5625 3.03613 3.41992 3.03613 3.03613 1.90039 1.90039 3.41992 1.70996 2.27734 4.5625 3.41992 1.33301 4.93945 3.41992 3.41992 3.03613 3.41992 3.41992 3.41992 5.32031 1.70996 3.41992 3.41992 1.90039 3.41992 0 ]xsh201.269 116.921 mo(Fit to Cu data)[3.80371 1.90039 1.90039 1.70996 1.90039 3.41992 1.70996 4.5625 3.41992 1.70996 3.41992 3.03613 1.90039 0 ]xsh1 lw
0 lc
4 ml
309.306 121.653 mo
184.64 121.653 li
184.64 92.9863 li
309.306 92.9863 li
309.306 121.653 li
cp
@
3.239 ml
218.075 240.463 mo
185.159 195.158 li
0 0 0 1 cmyk
@
218.816 235.357 mo
218.034 240.295 li
@
218.479 240.364 mo
213.097 239.513 li
@
0.74902 0.678431 0.670588 0.901961 cmyk
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginSGFHEX+TimesNewRomanPSMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/equal <1C60D8A8C9B7E7C1C5666C28B48CD4A694178AF152D7001F5F174D4D8F120B3533D4> |-/B <1C60D8A8C9B64EDFFBC13662E45548907DF94CFDD8366168A19798D3F94023374D4D2C86938E32D7DB9C1872F3A204253AB72EA5DE94FC03994C8EF8A3AEA69543654A5C81A183CE8AEAD100B0BA927EF2453AE33B886ED98847317AAC2483A7B07D884E6BA01DCB84EDD0DBB4BCDE82582971377C63466C51717F481B412F62082ABE2DA40B3D1CD64A6F92915DAB718445366AAC40CD207CDC2AEAFBF75F78F4F875F819FE068F712E647D09F9C9585654CB217F940FB0CC4A0399BD16E20306B0AE361121402EB02A27DB6252E098ADE7CC6B62128FF27D9B35E955978F8F1CC87FEE6B14877366567A52B860F7D53BC608D1A75802EE31B412> |-/T <1C60D8A8C9B7D8BE514ED6977CE9F9E5860FEBB6D8EBF5879FDED6C1E48F6AFEEE7B65DB6C9D492058CAA103CB13A7A80B0015E85F272BB9775991CD97556EC3CFB46A4E1606F006216EABEB711074247C72C159202F32CC7F5F403FAE58110685510DDB32C57700D5067C975D7063A496FE85C1E5> |-systemdict /gcheck known {setglobal} if end {end} ifendSGFHEX+TimesNewRomanPSMT /Encoding getdup 61 /equal putdup 66 /B putdup 84 /T putpop%ADOEndSubsetFont
/SGFHEX+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 17{/.notdef}rp /equal 3{/.notdef}rp /A /B /C 2{/.notdef}rp /F /.notdef /H 11{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o /p 3{/.notdef}rp /t /u 3{/.notdef}rp /y 134{/.notdef}rp]SGFHEX+TimesNewRomanPSMT nfSGFHEX+TimesNewRomanPSMT*1 [12 0 0 -12 0 0 ]msf98.3057 159.654 mo(C    \(T\) = AT + BT)[8.00391 3 3 3 3 3.99609 7.33008 3.99609 3 6.76758 2.33789 7.33594 7.11328 3 6.76758 3 8.00391 0 ]xshSGFHEX+TimesNewRomanPSMT*1 [10 0 0 -10 0 0 ]msf105.972 164.32 mo(Cu)[6.66992 0 ]xsh%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginSGFHEX+TimesNewRomanPSMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/three <1C60D8A8C9B7A73D83638F79AE86E17D4CE334FAA90E146D21CDA0FEB71815E9499D6C6A6E581E78F34038D792771470EBF894DABD777E9B4FDE68E7E1544BCF1EFB2DCE59357B716B4D2ADF3EAC3A9FF8BD07EC79AF5536B9B74185F8F7489AD909079119E88D2BB755D6F6AC02C01BDFADB347EC55DAC49C8BB047661CC7AAA3BDC1DB8E01EC56137B53ED31B24F4502353853D049BB0515CA4217D33D10484933F30AD1EAA43CFDF00AFA5462EE9B1772CE60A3392B8D9C1A3598CF2273E36A1FF3A58B2E24B1EACE5E34650257902678998DAAFF235764CCCA143A> |-systemdict /gcheck known {setglobal} if end {end} ifendSGFHEX+TimesNewRomanPSMT /Encoding getdup 51 /three putpop%ADOEndSubsetFont
/SGFHEX+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 7{/.notdef}rp /three 9{/.notdef}rp /equal 3{/.notdef}rp /A /B /C 2{/.notdef}rp /F /.notdef /H 11{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o /p 3{/.notdef}rp /t /u 3{/.notdef}rp /y 134{/.notdef}rp]SGFHEX+TimesNewRomanPSMT nfSGFHEX+TimesNewRomanPSMT*1 [8 0 0 -8 0 0 ]msf190.306 153.653 mo(3)sh%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginSGFHEX+TimesNewRomanPSMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B8707CC95A9B5DFDE3A4AF8C8BB7D0C82C30C322ED94985BC6C2F162CD480F8280AD954FE8DC511B40B423DB4A6012D9C419E4DF4F375C6ADD098717CA70F621> |-/zero <1C60D8A8C9B7A73DAAFDCA97EBBC8D8E35A41D9404C5638B059E1CA50B5366543C3D584AD9E19987218AC5999BB0F2477597AB6F8DD868788C8440CBF4A338EF64ACD9BF2268656755741DB71FD86387D4A7AA1CFD19937BFD209E4FBCD1952717C8CF8C0555CB2D0238DC43B2A6A2DE4D7366DB210D2673870D0B0C58344E6AEF91B916BAAEAEF37B22F065E870AFE6638E56D0B4AE01785D59EE23402242D396440157FC51> |-/one <1C60D8A8C9B7A73DB92A3F8C4B412A6756A4F8D8439622AB29A83C93F589D112DBEAB54F9ACF0D9BFA06C28638F8F8CA9EE7AFD734575522301B5C02720FA00A934493EC3D856AF45EEE1D7462FF2375B7250579D34D9C249B6BEBF8EF41DB28C0847307B8DCBC66> |-/two <1C60D8A8C9B7A73DB6F198797B24E7DF20E340C763AB9A17095FFDDA6B4B0E4D4AC4BE83AF302018AACAF29AB5FCEB98A93FCCD2C9A968B7CB1B433E25003CA8A63287F6BD1729C8188A209A7171C9BFB11D2FACEF2FADF63141D976A0F90EDDE709834FFBF963952A5213F00F39F098C30D0F91D40A57CAEF920CE11EC41D90433CE0F55F0A42A96AF852FD50FA> |-/four <1C60D8A8C9B7A73DB6B62B7A95EE6C20B94EAC94CA9AB50BFD020369D6A63C8EA15A0D9A89B2ED9293078F8D3EE629592E255C65B246> |-/five <1C60D8A8C9B7A73DB97C1FD4849B14157B765BEEE66B9438731A1E1DBF6D904609867EBF49E3E19DC6BA786F7382AB36C8CFA3690DF4F8E7A258691DFDD71792965BBA1DCE407BE309901C1513A762BED3C73A852D4EDA1BE20A2B364C59E2224D36D9C8BEE5DE8D6C54C49D0F66DB7448A8FCE0E63D5DEE7BBBA026A808CDA9AD5556005639017FF42B963FB833B4B64B6445B350600BDCDD563F> |-/nine <1C60D8A8C9B7A73D92CE6A66BA49C70A16072730ADF99EB50B81EC870A54394DDFE38FABEC18FB7B826889153F28664691169009324BD4E9661571BB91EC6E47B44C4894E182CDFFE1F715113C62DB236897358730FEA1D138847386ACC90D129A1077A70DC9DAEA483EA5552EB360DE0397958942F0F1C3FE8C7E6CD3CF99FAB1F16B30CA1A210BFF9DDE43DE5ED76615C174EEED6DAB9E5A77B1C62FBE9CABC1B3A46D497C4D6EFFC96F4CC02C8A01382FD55BD7B4> |-/plusminus <1C60D8A8C9B79676FB1F1C3483630A3E746B8D92259F8E9B8C36D901B78257C6EC5CBED7BFBCAAD6F9FE91B7B7741966EAEA858767D1> |-systemdict /gcheck known {setglobal} if end {end} ifendSGFHEX+TimesNewRomanPSMT /Encoding getdup 46 /period putdup 48 /zero putdup 49 /one putdup 50 /two putdup 52 /four putdup 53 /five putdup 57 /nine putdup 177 /plusminus putpop%ADOEndSubsetFont
/SGFHEX+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 2{/.notdef}rp /period /.notdef /zero /one /two /three /four /five 3{/.notdef}rp /nine 3{/.notdef}rp /equal 3{/.notdef}rp /A /B /C 2{/.notdef}rp /F /.notdef /H 11{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o /p 3{/.notdef}rp /t /u 3{/.notdef}rp /y 55{/.notdef}rp /plusminus 78{/.notdef}rp]SGFHEX+TimesNewRomanPSMT nfSGFHEX+TimesNewRomanPSMT*1 [10 0 0 -10 0 0 ]msf112.64 174.987 mo(A = 0.0159 \261 0.0024 T)[6.66992 2.5 5.63965 2.5 5 2.5 5 5 5 5 2.5 5.48828 2.5 5 2.5 5 5 5 5 2.31934 0 ]xshSGFHEX+TimesNewRomanPSMT*1 [10 0 0 -10 0 0 ]msf112.64 186.987 mo(B = 0.00125 \261 0.00030 T)[6.66992 2.5 5.63965 2.5 5 2.5 5 5 5 5 5 2.5 5.48828 2.5 5 2.5 5 5 5 5 5 2.31934 0 ]xsh%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginSGFHEX+TimesNewRomanPSMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/hyphen <1C60D8A8C9B81F2C797FA61189B8881D0DB497EEC4F8> |-systemdict /gcheck known {setglobal} if end {end} ifendSGFHEX+TimesNewRomanPSMT /Encoding getdup 45 /hyphen putpop%ADOEndSubsetFont
/SGFHEX+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus /.notdef /hyphen /period /.notdef /zero /one /two /three /four /five 3{/.notdef}rp /nine 3{/.notdef}rp /equal 3{/.notdef}rp /A /B /C 2{/.notdef}rp /F /.notdef /H 11{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o /p 3{/.notdef}rp /t /u 3{/.notdef}rp /y 55{/.notdef}rp /plusminus 78{/.notdef}rp]SGFHEX+TimesNewRomanPSMT nfSGFHEX+TimesNewRomanPSMT*1 [8 0 0 -8 0 0 ]msf205.307 170.987 mo(-1)[2.66406 0 ]xshSGFHEX+TimesNewRomanPSMT*1 [8 0 0 -8 0 0 ]msf215.306 182.32 mo(-3)[2.66406 0 ]xsh226.64 191.653 mo
93.9727 191.653 li
93.9727 146.986 li
226.64 146.986 li
226.64 191.653 li
cp
0 0 0 1 cmyk
@
[2 2 2 2 2 2 ] 0 dsh
73.5928 258.277 mo
73.5928 82.2769 li
@
0.74902 0.678431 0.670588 0.901961 cmyk
SGFHEX+TimesNewRomanPSMT*1 [12 0 0 -12 0 0 ]msf79.6387 102.654 mo(T )[7.11328 0 ]xsh%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginSGFHEX+TimesNewRomanPSMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/lambda <1C60D8A8C9B756EDA5D77568A0FA18386A6AD49BD8704311ACC8EC594A8E55D853B735863EADAE5174B8F61AF42D1EBFEF18D11F56095D56D220F8853BB59C9C6F118D0506F2F12650503C7A1EE01EE772A9E0562047AA435C0F6D6801DF0973002B18758FDB64745C73DF334FB7B085B8917A2872C70168A2153CA76CA35980C5485892B4BECBD288F8C11406F3A514A30E53289C742E> |-systemdict /gcheck known {setglobal} if end {end} ifendSGFHEX+TimesNewRomanPSMT /Encoding getdup 33 /lambda putpop%ADOEndSubsetFont
/SGFHEX+TimesNewRomanPSMT*1 [32{/.notdef}rp /space /lambda 6{/.notdef}rp /parenleft /parenright /.notdef /plus /.notdef /hyphen /period /.notdef /zero /one /two /three /four /five 3{/.notdef}rp /nine 3{/.notdef}rp /equal 3{/.notdef}rp /A /B /C 2{/.notdef}rp /F /.notdef /H 11{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o /p 3{/.notdef}rp /t /u 3{/.notdef}rp /y 55{/.notdef}rp /plusminus 78{/.notdef}rp]SGFHEX+TimesNewRomanPSMT nfSGFHEX+TimesNewRomanPSMT*1 [10 0 0 -10 0 0 ]msf86.6392 106.653 mo(!)sh%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginSGFHEX+TimesNewRomanPSMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/K <1C60D8A8C9B6079F6DAD6439E719A5649ADA7D8B9E734C715565956F15B5C4CFBB8891AD82AF5B965DC9DBF0762D43C17265BBD3CD422561D8093800D47C30E7401B7FF953462B20D5841B49861E5477C9C06DC8DEA98C62C73A16DCD10A99A3BB2728EF5C45B4F29723E3FD20A045034CDC5B2823010371DE4EA42A5365F63BDAAE6E06349967F6DD5B6C651FF133F1AC111407BA069118B1E1EF88ECE867D30D2AC6A5EEB5F5B14A4020A8D1688A963E3E2FF5DFE6441AA27FDF0183EE620579E7103491C7EBC49E5703B87C43F0A841871BC2D6A7D289877EB3748B6B80FD93562885CC9F2182E80755BBCE3303DAD528BFBDFEB3202E48EDCFB93BC1> |-/r <1C60D8A8C9B81F2C3A9916C4CB28F21023538C2A69D3E08B0A448624D2CE6C19473DC07A6A4C3E0D8D2DFD7B9589F2461E064A251BFFB4F1472DE500E983E2E667F5383BBA338778795701927E45FB048834AFB7FF5E045C79CAD4F90B53A8A93629365ECF1B64B7916DE5DAB65845D9DB9B71D2B7B722597153CE4BA455AAC1333D36087A511839B6E1301E787D03299ED6FB7E787777CDACC74EC37D8C360275B503E4954E912CD342> |-systemdict /gcheck known {setglobal} if end {end} ifendSGFHEX+TimesNewRomanPSMT /Encoding getdup 75 /K putdup 114 /r putpop%ADOEndSubsetFont
/SGFHEX+TimesNewRomanPSMT*1 [32{/.notdef}rp /space /lambda 6{/.notdef}rp /parenleft /parenright /.notdef /plus /.notdef /hyphen /period /.notdef /zero /one /two /three /four /five 3{/.notdef}rp /nine 3{/.notdef}rp /equal 3{/.notdef}rp /A /B /C 2{/.notdef}rp /F /.notdef /H 2{/.notdef}rp /K 8{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /.notdef /t /u 3{/.notdef}rp /y 55{/.notdef}rp /plusminus 78{/.notdef}rp]SGFHEX+TimesNewRomanPSMT nfSGFHEX+TimesNewRomanPSMT*1 [12 0 0 -12 0 0 ]msf142.64 282.986 mo(Temperature \(K\))[6.49219 5.32617 9.33398 6 5.32617 3.99609 5.32617 3.33398 6 3.99609 5.32617 3 3.99609 8.66602 0 ]xsh%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginSGFHEX+TimesNewRomanPSMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/slash <1C60D8A8C9B854D0F4B64A43F243E3CCF111DDD476299F3B748356> |-/J <1C60D8A8C9B7361F02BE73C4CFD35D33EC00415B3CA6C152F65E48AE8D6C4B6496036675C5C8F5E597063106A19B1BA3F0EE04532306F107DAD9A65C072D06B9FB644D70E38B84756493EFE51AD825A2D0A3C49BF5AC9839A3D4E170FA5A71858A97C57537B2C6868525AE4970995137FD1FB1D499789D521C401B0622ABE206084830544BAB810C8807A7CEA0D0FD4C6EE8D48ABB> |-systemdict /gcheck known {setglobal} if end {end} ifendSGFHEX+TimesNewRomanPSMT /Encoding getdup 47 /slash putdup 74 /J putpop%ADOEndSubsetFont
/SGFHEX+TimesNewRomanPSMT*1 [32{/.notdef}rp /space /lambda 6{/.notdef}rp /parenleft /parenright /.notdef /plus /.notdef /hyphen /period /slash /zero /one /two /three /four /five 3{/.notdef}rp /nine 3{/.notdef}rp /equal 3{/.notdef}rp /A /B /C 2{/.notdef}rp /F /.notdef /H /.notdef /J /K 8{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /.notdef /t /u 3{/.notdef}rp /y 55{/.notdef}rp /plusminus 78{/.notdef}rp]SGFHEX+TimesNewRomanPSMT nfSGFHEX+TimesNewRomanPSMT*1 [0 -12 -12 0 0 0 ]msf9.97266 217.652 mo(Heat Capacity \(J/K\))[-8.66602 -5.32617 -5.32617 -3.33398 -3 -8.00391 -5.32617 -6 -5.32617 -5.32617 -3.33398 -3.33398 -6 -3 -3.99609 -4.66992 -3.33398 -8.66602 0 ]ysh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/SGFHEX+TimesNewRomanPSMT*1 uf/SGFHEX+TimesNewRomanPSMT uf/TimesNewRomanPSMT uf/SGFHEW+Times-Roman*1 uf/SGFHEW+Times-Roman uf/Times-Roman ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.0%%For: (steven schowalter) ()%%Title: (lambdanorm.eps)%%CreationDate: 4/14/09 5:43 PM%AI9_DataStream%Gb!R&LO(G^c2`/tJ9QMh&3<bR.>/0;l+Mk<KS1,`5'riu^Qq$SnI/?Igi`V.ee^YbCs/+j=ct)clRe(X_bP.F;&K8$FULOUc)4M.%7"TL#;fS/U>O,R:VqNn':.U4<0IdF".$YRCR<2=p<D'%[I*`nZc6f<0G<.=9qP2.hlRr0N%c,1M&+la`^@1dmU]7h3rFYqrWDXTC%B;k#oDpY%E/k1KU&A8L7^JDH@_,&?/O0=p#Qh0aWhs5IP=3]>1YE`G/>8^->c']N1#+kA%CLQ)cG>@:Q<d0^La13HX(12(]YG\>Z%BFOC$4K]4LrHY;fL.9PWe-G41'OISAnb:5pCk`LU3lIe2'T_^D=DVO(>Vm2AE!#m,9VpbnO2#XjF;fSLE-s"S]D[d,h2gE72JLH_%UZ$9EJA(4X`r5&$Ml.cEERBGDaCNXFo3Ei&L58Lm]\neqP3sT1*C1ogPtC9?e*Hu\Me8jB)pUq%:GUk7?CP=P5FGgNrendfju@RJ%j2f]-H+uGO*qfTq(f)#Im<I.Fp@4fP\s7^XYe]5t]^eW$>W!lNh&2rk;1B(N`)+N*1_5T.TC-5>[?c)$*I!9?UDqumT$+VWI*0^/%0kZXuGDa_VKd:P"L&O\8J9VJrl4)6ug9fNIR[Grg=/V8=7rOc[3gG#n:3mplr_e>09g3O2UM8j<6[qW3d9(%fmSN1&,,jM+dLM_;%j%BI3l4_RtYh9+H$)h,nksi#=/YM>LQC>-,$r9-P<pTbN0)V+<@<(M'.)KUP$(mUoHkqY4W@5W%;1uEQ#]E.o]WG/+2Q;s86E+K.%r^nN2<&+cVP0$=M[[G6&R7mh-AC*Q>S]O-r9En,*2u&&(`?LNr(85?F#]GSh-r[+\gI`c[K\D[u]WY:**R\HG?d^"tOh?C:oY$'6%$%,&g(__9`.2W^=.<u.CJkmcs,D&].2oPp!$Y+cap^9OoT?n4e'58=R"J7Acp^L#-9E:8aPJDrO0J<-R16i2/U[nRN-TEGT,ZoXo%;Nm'0oUb]GoSl+kT$o]o--/;!"lk52BSjqU))Z\0Adj,U.2X.t@=f4l(WH]Pn/%%DbWgK<T#26:KMjKfpa!1:W.a)o^^#[[#,(.D%Id!;arXl5!.=sL9(G^$ZHg!KS(P,4_VXm5Kd!njr7Rnm@7L-?CW6&6\++-C(6JjI\JeM#u5+rCDcK1me9mMM%N^+`:9kg!C$DfZE%3M@-R$^<=.S.`Juh@Zh&\--`sF#kOfCo$MrMF&\mPPX?'q+#a+30R/pR<*s!dR"-;,P8$U4/q92;JoJoMrI=%I6ubSmM5SNg'S9d%:02%q@Tf*(kRkcZe5ie>qb$`YiKA@U9qLP;5PRsK+trm."S,%X:&`,ljDX-=q<.;m[0?S/IZo8\'_tu/:&_!<jR72Z_G3c(np0dq%q+^i'$KQ-e2u2Y-Q:g4pnsfP-Qc\.-Dt8sQrt0MdEsJ=J?HM*s0Cg'A:P]hIM+X`KpiQ:fB#[m)@_>T1Pu8q'9F-nU4q0_1YN4Fn%5Q=5gQahF>!b3!DAE6e!iP.2$["_T*`S,KMW,(.CKk@s8iU8JlnB&P%Ii(6rdMhs_-;XE$lF1$Hjd"^KUq0H`,d73:/($9>)kOo!%#mHtl/tn=dUYh!if)L_5NoM2!fcC0\aF1&g2.0`=#t_uKJ/e%]s0]UI?FC"6<r61+%'9uO7kr,PkWE6j/.!b>[Z]\hi.jE\1*j]]%Ji$DGALu7hPOo00$Le&Y"uB1$O@X^"L5'K1'BQS,(_Vqa/Yl4hdSfP_W2Jhah?YQT!a$`*0P@6()]0)%LY@%G,bKg(n<As"l#U##%)aC0d5d1P!a9n-QQRNpW<.YA=$]LTH2.\UP&E;*1IZRDUFVW]Q]o`*p/aH7Al+)nmR%ft7Ar,P8\[F7l'hSY:*Vu=t2&6hs*'Gr)%\0.n/fS\.G,JBd\8S*b_J.8gb58?:i1,n\iAr'gqg*Y_@SA>`(DtldMOPn"^?XtJtWff=Uo/@\d:e4U-(n`FqKf9!soRo=OZA$L;%.7\j:op"oe5#mcFUdu;fP?;^2f*!SF?ktKB(TC;u@EOB57JL66$Y@+#?kKV40aY?:>_4-[[61JR@g1S-GmfHqU*qM^L8AKn^/43K%Aff(tkINf.$!J<?F,&Djcs?^[&1m-?0_6B:D6K`ZqhX$ojB?-rcUI`3TT_63Vm]3L8lS.SUKZ.1#aBVQ3*0WB]@LEXK('D,5kGP?%LZp9Z>Goo.[SCL@da2sfM/kp8:MMC1KM9W188`ZEgSHJXj!rI1nu=64,_[T'\M?\?)'ZGbe5T?[QVsb_mq6VLFn2;7Rn@0RSn7\(%P"[D9./J_H1FgZ6HqSKPLRJLOUn/uZ6/U.#K$YE=e"kZ.AN5s-PXd5=b)p4O,HF%oLHnA:IBl2DE/BgTFHhq61+T%e;5Ic%Lg8o%%<4W+\O]DHC*B-),m?/M%$\CL+=#A\S7AH$tYrJ^O,ULp'9HpUsL%56*14W)ELWVsf/mSQmGtIGPd8[&DUan<*!>Xs93"5:Yk44?a%`=-#]fTh5@&e)n9=[eIuF@O*8;s9FG86C_LWJ0G>.$H<Zs'uk?RUDY#VXc3@Ol^+?485NeR+=%ZHn1`&p6"uCX36SBUMWU_a)m7t%698<s?;tSQb8seA&ZjC-BrP%J;b"U8Qq9q6,kFat'g],rkj22q?-sW+g4L7d32\u_jTMTI,e'jLX"fA*NkLM<%+"I6,/rbaBRshh%<.C5ga%1)u9mM<RU^F6PEG2^BVAH&k`'VEh$J;s8j$gs[P(cIM&BuFQCUoZ_'_lE[MK0?$To=0/AUR=AT`WG#?<LCS88gdq,SEI+%-:r]gaRmWXQ$@[=LW1oMT'Z4db=<T[[c`lP'7$b%"eAYe6MZpF$B[s1?3!]`c7Ym.k-;QOkKB=aVMI]9,or,IPU<BRQ0!OTI6&Tf%9pWj9W_^]V?fjbaY+_+\W98Ha)DS!nj]G\0e4T#Q=XQ?Te3`[n]HNMS-lf7*;S4FL!O>-jld9GrL?0i0V)'m71DhAuZFnVcAl!!M%akA5D.I2k2Au/(tEQ6(-9">g+ASG#h>?H;=[H^g/^U(\S[`=?6Uoh2+!FWGTa#b5R[^8"s^P6T+S'dDY$@_Q/-'oBmNo=!<K;7.p%//\`NJDB<J7!ir9?u;"1M^n/HX@+K]7hhIj3/#%8;(\!B4OoRfVMJb=1ZoB8Mt.d^VAhrb-k[>(,C*Hn5qeFe8rP9@JOfqof4=h&%$):7.)!P=l8'Ot]OB+<^ha4-)g]Hn*VFG`?<*!+8,uhN7BbC=gTC<A@P:[R8]:q9IA:d?09mA"*PZtq<Ugm2qQ%_agA5c%Fd+U,>%WXs&F1gai!j+L1uZAsT.+:u3iGb8-R@3n9Xiodg1co9b[,l%hD/AT,4QD=UcnYdFjo_GeGGA/Z94Ad@D.,c:EFq7/+Uh-8lOh]i[%pEY<:`Qj!Mc,o"as&`!G)5jRZaVmsCRB\MmMm4bX$^:^Oj0oXJJSs^%RRT([cO;Epr<(Ok"uoCL[>T`,)UD]G02iAB77lB/P*pjj%PP.CAeK4BA,)fu9'sPuJ-JT"D!\4VL")0rq0u_g'JBSgl,oCE3<fYWMPL]bUBp$mfqBASU5\km_d\B3ueC;nm`MH&hQ\a6[f/JG!%8MDm$!5;iOn.aS$*"$p'-"mq9e$54<22'maN@_35_m9;IjW,'*=FeO-ALs0%LSZ_r_g`9uk*(WW))pdfr(`G]l3sO*OlBPP<\Z)E%J<n8K<0=6cgi<Up,AE)8T\^qC%)NNCH4[36@$OMa.hd>$m1o6V^K;0X7JJ;G1L`d_;+k\<L.G5u99bKKNhc.n5p[:"gI/u($8Z#4%X5O*A&^1CLK6mW1niXO&J3=?Q_G:6:Zihs/I4lj:MsqO1F*S?C;Q?Ca'uj=j1YR$b8cb_]Z&hJ?R`_GKGqfnlQ\E(K&.7r"-;V:)%8tQDXdLQ`oqM&eo\`XTjK$R<J152;9&9K(\:0#Y:-4s$b&<&rg9H[=j/oSBH`6h@EQ-L(!`C(nMaU<VX"br]'LB61o&YL#bT^q:o%<Ct,+l]o,M(SM$)=U)AQ2JtO?6DNU?l$*M_Ei93l"?VTNViuBL0#6+:5N:d(=t$1%W';$4$0lpC@jt,AKmrO&U\N/nq+LhI'T/jf%'T=UiTS9Zo`)AubNER(EDtL,o6*SQ&$>preRZ((a_j_'\Q9jOXUI^IYOkH^uiX(<+=`4bDD'""-7'hWfLrKeS+uk?"W0>FUIYj<5%bB]gDP`%"#;:7QCSgcnH*gPS\4hm-91SqN_%AS-s[q>l&g=U/p6L.EY[:6HaGn"mu6\!m7CKT+FWBi+Qr&pUHIO:e9&1L;#$B!,%%X=.Ns_r&ro5j2HVK.GAsaf@nE*PCGFQJ[VM3edMeqLhsTP)L*RT2"T:OgH7SCT.KjU6;)r^(+K?RP@TGmDWC`8uX5`2mrATPi=47%9E&3g#>6K%HhKDk44#>X)At9o,AAB&,.iQI'1-l2LgQ9hj:n'smkRolf'te]i$UNGnd=63,(9^TDc*T8dQ4esaXG9fQJ0MVWC>D)%9rLPC?S!KLC+5AQS\)Pknur5TJ)jgR1k>AF.1H\JRuI3=&+WKpNo+)bBCiCod3WC65P*:(47*JAqH\:l)>fdXs62k/@4^=#FXQCt%1mXc,f<JesgZeD.buhO0T$P!QP?G*Hl,HJ40j!^FY0eL`R^fb-Ze_+XkC`MXpYT(O.7<AZET:oiGSetR`O_j[Q`8](X7f*U4]8/t%Pj-;$L:DM1CdcF+8D+SRFsNCpOflo"d5`X:=,ORuF1H+bq=2k'`&aiLh/9<Rn/\"D\s#=:@bPZd88>4`n+XH#fXNpB%#dD\W5bJj%m'QTp9+r;>Md#Gbg8"218ak\\(7S$eSaN.2q2US$aP`f1dB(fFO6+QidqQQWrH-/B`r5^Tcl:8q6M1#EmP$PdCEL/(b0f+A8a!dF%Rd(?on9rZR[c`)6K,/-pk7[EZH$9UJm#:p"N-5/;pR;9_'iA&9h<^mDEio*8#Yj_r2a6A;Wk3o2XP\Gu.=Vq'FSl$n(e-\02r!.j%SkMU[+u\[e3AppW)0SiC@bh(aKaAWj(cP(e+Dp,QPiq+9VtWst#Xh.NN:VDlg\[d<B!a[mN,VQIVo\hVJ)TNpZ1f:XYXBN<Ebp]m%N&j3HGchcFCGi"q\V'Yf<-7goRSONP\70`<7*EgK4J@_>gpo1+9q=DMZfG;V$e7hB;c;hDBoe;OPa&[)-*Gp5Y0!^Sbg^agM_VW]%6k#OO$./RF98YU]Qlu`.'977T53KhEk%$[>2s3!8LSJ;P44\;DHEO;(%^SnM^0XOsK5T7gJmOUJF"F32_tFA!#dWl"-:hJYYl>PM%?cCZ,,_5gXJM`0n+DoDP248Zlrf"J7TX-'J3_9C[-g\b'@RV6LH:3LO,[fDT8rTI#lMf"sIIp#bef2=J7\0KdfH2FF(I6E\gB;PL%5?rT)#:Y2!d&bjcGC&`H0f7/Vc4,Sh-_nu"NFZ!![5\8&MjdFS@]+kH8(6kb1Plq]8\i_k5*Lj]a/Hki;D0fi=K1&I2;J<UQe2SK%s*qYuO02]CF&9B-)!gkcc_*/\^W+?5e]8C,`NKR/B8B_6i8&N2L,\AKZi1rXW_Q%TEIIUGEr#<t;60"HCX,-"Kg&uBBtu;`,Cd9r%%J7$Tqkm)Y7@Uu1^pLeU$)B5%\5-=988P'DdKAUcjh*P<=uUQVL)BoH].fXK5M]D9;.&a`qN]i1kqRVojo78ISDagmdilR"+sa.<%(/fT:qk&Lm8fL,_0E7AC0/h2jM"QL/>7Z80HPmHAk5\V\hjeeRqY3k_gBLeicL+C3$8jS7c9Us-qq]F[8Db:e[oVe.O!Xr5D>7gj%peS@`)DdqKT:kl*IG:9Nc'jB$65$VW3!AiZK#Z2G$qY4%bKo=\Mn;(JXPf8.2TWDc*&]0^r*4+P`"/SL,gXsaM*-t@9n:l/7:.<L%/e]7,aH/?BLc,'^Q3ULXBS_m0r.d@l`\8C+^;Wj9K<@<&MI#o[87L&WSGO$!I(3k\($E=.KDmhu?bXm^s1%+WA,#">kO,"@G8IdE%*E$.`^is%$ZoYjph`<H""oCr3;h#*kqCf\0r#N:]mOuE<rt8Sq0>SD''&<7hJt)O.E;u*69)g2_Q2XGI.fG^p<TYsVX3=q6=.-fK%Y;1T!?=j,!]ZU-uH'S1unga6tjAk=qafEYCO]MVYs1,dg6r0<Drp8;>0KlT?rnfT\!sHI:a9noAH/$$p%=4#9*b6TH2NO]nFOof&%B<s5YqcV*kDmdW%i*kOAf<oSq``_&=<fm2E_)\dU)Q5Z>$5SAQ$S5d3nf2pD%!H=Hs,e@tL,9DM)OL:mcNPI2;6M_N2kg`UX+rk%%c,h'`^W!!1G0t1#h>VE#dg7/Vo"K/4=CF$QNs<kn2gN?j8(7!AVCC'^pSR"K8oVi9#dD'"mR>6m\FcR[l;,Kb*Fu;(h>-k_jM#<E%7SN9c>tp5jB^Tk]gmtsQ]tq@BVc3!gD@T8q-aVC&3U+'.E/]YGT&\lE4Qh/@a*XJ6-5]_CT5K!6R^cSHIWO/-^b29.5FF@M=4GjF%DSObm+e1G[m:IFWE/NOGFnNr/@FLoV@S=#1YF;SB(SFB[g`8=K7\-^M"JL/A%f/Qb3eG@,l*]Z[mW8L)D`=qUp6ehGcX+@Bkt6"h%M2&`uO4g/11cp0DE;KE,F#)Q;o'^T'>8uk%s"sUo=r*]*%E].-eB(W4'b(,7a%i[jO*T`%+9s([Z9(.aBX#Jf>C'"3]'L9]_J@Y4%G's6cqn(Uf1H&EW:"-l:k]tY)gR?_8#S]@RD`O$]QP_m_O)7pQU48Sg@<h28F>b'8>tOa:FI8UW5qN7'"GmW#jS8%gJbnq%e<U%u%E9[#n5QAX%nR#m\Btr:!^FkG`6opc1V\7K;0H08,HC``eSJd_#r`p*eUm'2:12/VEcRo>7fbkMVq0.T?gL`nWC5lh=eS0-_BB7i9%4%!5Ro9T\R:G0&B]K^QDpZHIU7M*(C7^V<]Ir.d's,#8JMnR<]I+%HBZY0=7nrFQc^YOT0GLl+'D.qIKA6/';Ak-kJfc_`?Yf8,e%Ei=rZ1C-j#cas/%1ic,cZJFu/h<bfQLB"h.qK>7CH`OTQZcVF#'!Y=*j%4IKSc$rZO8eB=`o%ugBq9Is;7V&&&Y-l,DF'd2N]4kX%-TK8-i*/81:-W=a'_Xc%Pp:3AS,XNRit;g:rBWbKn8c[N)F'e=`i+E5o>sBe9Gi)fgcXjdSR6ps2OcOYdr?%`:AYRe6EfF@b5O9A%-6_AG!hU%`6JArN^jrmFlD3)>[EC-`/!o<s'6-L`i<g0o]A2YqR]To22u=iG)KcS]DV7sGj71rbk3um;r91`<7UnK%rl=&:V`,\O%o)k$JlX?uV(l'l1?>C:D6?/?(mLt>u&2ggbP>8SSj>4FA\76n]RHh2Kd`Q3h5XCc'Y#sgb`eB=a\:MV^i6Ks92D/,ZZgJ-S&lVhu%f[m&:7<8MmV3OR)@Uk'r7%YQ,Fe?(\VVf(,X5=nG#>B\8d.:f%L#0);AP<312fUfl6,]-pEO9aU37,Vh.:J1TN-dN^KT<Z'`'S>u%m867gcjiE"(k`3h/504ZA8+o(V&-3a9dMVZ-fQFq6Tj3/f&NkFG,03pU5a_K+f:;k5E.q6*Xs8TPMrJ$+G&8IoL$\H^r7k*L!),G%^G-?:bN_tcM^q]L2R5knCM]u*8nqLiFU@a\O!dfa<\e8:.+9>D=H[VlaHq4N/]Ut.WJk77f(/?t]'j<C*I$h1]/8dN"5KgiOP9Pg%`kgnjBPVp'>_qd'*dVcK]I6CC2=DL*'ij-,)sg@p"'"$VA!9Z02#2rrG$ZXCq'C=3Ygg&9m!!/JQKA*#krC@Qm^N35;[Ou&*_ssV%MTX.hI9C^@V94k8GB=02U_[O'(=qkTP\Eo_A)f2V%qj9b?Ss.@AZ#&7*L39&Bc?B6"f6.cQYEhW"4f:\1@0H4L$g%hEDOu.3Lo&&%%?iPq*gW#PCdFY+b"Y*i*Cr)O0r/"\o]9M*WYL&#WIMrce\7t'Z;DK9kD_Q`$B3!lO[Xi#aj>$YcJ49QV5\@X^m!%HTjp9&gCae%%FE9F;]AED,%5)3<L"c]!E;6W3QVmKo[tPSQUcESQ:]APle$Gs&q]EYe8#VjGAG"aEGE%FsQ%?$2*];qV5pU&Z,<_(J:o\W!L%_FN%5$_!hnj=-G$Y2R]WOsuVG3Y#JJ@Y[+G,N>#gPqD2PABZ%UG]4[\&:ZXpX!6g)3nB^9\d;A6s7E*$,\WePU2>MbI)E`r]]_pXGVF@%MWsEZSaNlZ0l3j@?ep<YC0Qkma0HgT_PZF`doLBFBU[!^-q_WU(2\0L"WYWkUo)?YR)Pl%:f>m5>B'%nq4]j;J50d/-n+kN7-NfI%nm@59$qar,Jo/[rMa0Gl2ojM'L/cGd6boa>G6g91p@sCoc^99JfsFZ_:"cU,PNP.[,]p",MB\>j%:6.Gl?=98b8rG7/;d/h-o!7&%".Th&k%&4Y>Xa]>gr.8=)hhi8@AE0WV<D*JB#R0dYW-1+:Y!.e;-<7oNNu6]D3WTW2Zm?(4F&"Xbnq74=9FWh;tDG-g/E3m<fKMm%5Ui+7KaTdIoh'\c&OW3_&LfP@E'EKP,Ml6)`C@h[]#l/CIj?7e3]2YN'b0.rCCgE3aZcQZB_JFoN60Q.N&tWadDAoC8C^Rsck;1Y%"M:)9F2d&tqZO"_r+3->:FAb?O?h0-BKu$Q$KZ//0eO5&%Yf"r1D.>-n_Nf<.).a.^Yotj@d[u3.(s8nhmL^e]k6N"]AJt4$DG.k%jJO@ZRD_8IS!U_0l\VD^BhtZJ^%;HahUCu$lj:FM&tVAW]C-'M$9^#MG9=WY':r[k4?aLWa/F'Ums+9mD-nii`H:Yo3I'29]N%G#%>ES5"Dn4S;\*3BX-99Dbn9-oYcI\6Hdo\4%E)_.^gfto=B&!Y,59+V_hgJ(NE_:Y9LW0M+dN$Th:Q"Vk-Vsa6jm'F_>E43\JN'Hi%M(fsc=GGuj:KXRV4eW+1a:jDIhg)k?rWpMFoL'0FGFm1\pL.$;AC-[VYr=i]\'?^)WOHf$3P]u&[%@bEQF`9s]GrtMgm3ucSkJts%cV*La)Oi'gM12N'K8,Mej_K^S\!.8K4r3!MKZhlm5q\,qCe)RnC2[`RH"^]%-MQrgA<;MmoRn)7$j\O&0-SQsIAaH+?j7uSc,Vd^%7X?-0YBkT=Pb<K%X2=f6XbHbUp*HLaGhSSB9qDH`@kJP3oV8ZF6UqfDl@pA>)aZH=.e5r=+u%C,lX\*KB]<:pT'-3/Z0Y0A-I4o_%CCG@uBX*i8BLW,1T[WNbDZmE_cZo'=(oYWi0\5%hhfO3\1tDaiRD22"r2m)Z-U",-L!/lK!HiZ"f];0qHKRGdO5Tg3'3D^oSEl2W%UGC,@:OC+u\j3<cUBUo01o;:/Ec_,^&O/1Bea(=U>;ubYJOT3Kgkst,C`?B4Nte5m$CTH2f"NulZgDVSXN%GAeNO2[#P5(')X-eR%q5/:C!&XSA\F+a_n@Yu5$.,$[eVPHr<:'R(>9E&]P$QOQBW;)jTFe>?WL*D9B-XJ_FLo/8cPljYHj7"eh5WZcq#*?Wa`&U5MV_Go%.NbXlMh,iI#F)8O5?A8D-9&Wq_rIHq-pWp12S!Stm7&12Q-4)irMb-LoZfA43=4nt`33U<gdun^$-P%+[f#c';2t6WQYWB@49,gC%!3LB6PZ(Ljm781W%o!L079V#s;r=.gM\4;KG8u"UkQ@seA.QC$-Ps?Z06ain`0L1/9l;"p01F.dk[T:XHjsoU"$NZ,:ECSZIKc[n%bCI:Z*e"q-^&1!ZjKB'?.X,qjhUMkb&A9^bFld"T:Nrm!j22<nTJs()NL:C*;slPf<)S7@YqTRHpWK`nkKhJc5bCiel\7[>mLu.K%!RR`$U?(KO5GCBnPHXN71m8\tJ\K\[6URL[mq'S8!/4F3jje.Lg`%6u!_o:T2EV5jOYR!,rR!CFr&+-s!H!Yo%F_i"JVQ]NLqsGQ%qu3%1X:=SLR*>`[nA7fhqXrn/%puLOd(RQ<ni$(+8O-q!&=OF.=?U>k%hPCfHbQWuL#L/GHJ\fiUPgn,*haf1c87cu`cc)98HLfj%+%8#\0KbAf]O@Jm<jm7K#.c[[1g<<Ib%X@,a`g7>H4N.kY?(WL^9RnKB_FQg61DmmqfYDo[r1dpWU<[Og@mAFlFk.eEh[`,c4=fO%C4@E2bW@b2MaVL*BCH\]J1jmo9%&mgIW\SXpW58l9)CdM:2A_s5<&!=hkn]afdGnK_X+1Si5M0omIY&_A_Z]k?LU+bp"i;%9HuC<%$&5i,Xjd"b_mcN_m8hKiD7\l1m9WR;`nn1S17HqKU#+(]oTnCUC>ZH008G:#Db;1QA]!1*N88ea0ooc1gS[qmcg^=kpEd5DpK#/`%fBd<Y1T^P',8AE4h[[@Nq_(EW&ZX-#&i.HBh]E3qrB%p+m:#=d@J&.6n^X7``Ye<4o>du9@I6E*\%s#sc$P,G5h6KVM&KIP$dqmb%rAtph%UGW$F4/fPFBA)-lE(uK)nl1YDWTlu1<+Fmk8k+.fsgM@Kk.lK`E/!$Md0olYt3,'DkAo3.^'/tlD!T.CMhA*^lZJ]jh3&>%q/li_;0Z.3KM*+Mpp^J`F%`seM1h#L2(o;9DGE*CmCfh3e]+N"QX(j02oTWM6P=GFR:Zjd`K&EbD.H2oc*=O+i4\U%n2=di]iG-T%[Z*$Z3t]`K07h)-6bC4U\H1(<k2u?Hs/6GbIfH&GeE+YWd3A5%X4@Ol-s([Y\MOEr$YJ-!BEnX)fDYL+Q82LJ`YU6FTH0YC;ZSr8%r9Rb25Xc-.pOBUUnjog0$l$'g!]G#DN`?5s+a?d:"H%%$"/*`$7$b`K_Nba9H*#>H5S8=?EFYYL3G<qPIZ_EtmI7(cFOq0`"5;Bc%"H)jaB&2(!'f;((eZ<pM'Kl@A9gkZLcl&4;_\*0=I$kM"Q7XFBIpU9AVj?EWT+]sOd\;7@q'dCpr)jBm^A/"aSI<FP[pPP!,iRap%4OA%pXLFT,.j+XuJ*..XqC]bu[6G/fNo_&T\;C/XD<hT(@6[\=/0Vj[/-BE[-("]1Ib?6"KTAV9!3AG\k1/<0e/pNS]eLt3EZnns%=,;9J94%GSJlVBl4uuZQ"AjpE/5$i>8]+iJ5!shr^dOe".<^Nm08X1N"D9nU!a30WLC(.#J%3-VP.+J_qTdUD3RDm4FhWi+pGa^?%kIA+_Y>Lg[P4a]p/j.Gf7oi09&#o0=-J'-m[RW,;).TZYiXa9B0$`A9L@tI]ipdW<78V<i98EqS^=O^QZ8[8`Yqt:Y(54Nb1+%_f%+"Ve>1ehBhM&!QS,&8Q8K<c3&6G.51=k0Dl]9kOt3uSK)N?2-?4@YW5GfUliiSEV'JLn4m#qUt*Qa1pH7Erc^m*A/sWBO`&.!JgJ%5T^S$7U5aeQ4^4Q+4QEnR!_H7,>QiZgtbI_)R4/(Q.VS(41+ko]0hcmnfhMTPf;G&eZm6Cn43/m#Q;@jkX[.U7tlAq$d0,<WpX$>%-dDVlZ'Q&eRur[2\\*6p`R#)M"n.gBaDArGq-1Xi3d4X\R&9?iEFj3,]='1u39+$8Etm>Lag<9k13Nug2o_=GB%W>)qeEhQ0(N;S%@a92[>fT_thqY`2S'L+B+26mTnF7?)p)4^f!m*l\q+)C+6=ZGjKb$#6MA(?!2UM4U16?A<oN^f^(sTeM1GkD#<OZW<e^i5`O9]$7%Fraf6_Gml-nuAT5ZoBA&Wmr##.=1&TloR?f>aPqB7QjpCg<ASNZReu>e`m!4!@Kb:g(Vjd[/,u</@D#!6.YQs=a1Cf"C*t1*?'%b%oKqi(R7bMAa[i+HZ'/g5nb>RS^8YRMV=Ua"E9K/Z/0)l@ok`Pi?XoEi_kr7NGLDk)6*]#pB!##kG&M9:39f&DcPeP33a!]Ie.U"\%`l>#$LX]kNE1QA8$R%\#=OE+.IX]e=RUQ\//$ukqZr":0oN90h7`![=b#rUlD-U5Rqq6"%.$NKBKpf$YG"Y3n>:to+q[K/,j29t9%_p86\?C!2!#l9Ee%1<=II^,KArMcBFVs0#\\gnOo^eRD,]&drl0k#Fa&XUKq$lLTn+#S"C5<?"Wad2'LeL_(.d2%H!Be.>Z&YX,c%T_Ykq!"2O2Wl#rb;!Z]:&0D)b;V+i/'T::<VrTII3YDF5e;Xs]4jUc!khLmmW.Rc5,%).]bN%>8*1tF?&Eu_eE8o1L0Tod;[9n(/%'"hMjpe!?Vr!Zc$I:&n'9o`oe;`#j+QP3n4Z+(j\n0$E?2hET9/?V=*R_ctFb]cag@thW=C0=fn8@/"B+e%5kk92SO,ogZ*ZJ+.d%\mu75,_JIl#&dl`>J"Fnd'd4d6PJ>McuRh2@rk&MX;i3?rc##HQBuQ/\@dV1IY?5VUg6o!^&jWFnT;Hdau$rcnGSN!+*i9#Lp?OD%BgdN'^BSY@Zpi)q-r>1-e>i/W>cUIA3m]o$jVUEZAQh5%7p8pH)L&IkbP&u.]']>1`8#KMS$&#g^-EVFiK8:$>`)mokCHXtr!9M'%lK-?C2k"o8I&('Be,s`:bpcql*PCSf.0(V36PJQUXGiO#KoVl2@E`,Y1X]hHFu0SteN/rnOgU+dV%,Da[b:Eb(_q@/LDVjQVs@>2%UAdRJpq4j"ipK]ImAP]C?LNgl;u9c.q8J*''cODh5"h:P9XF::"eITb,u807ca"S!+_di5$[^m/SJ=,GBgoHVM*A@a4*K4=C5En3%I&&LI%\^3t'FP6og@c?r$Gq8"8QittXt/rp&.):R_5l.'BOeT(VM(o.4[)54IW^:O:e?$N3qiB$7%8W1(*qW+4(MEeWT3dja,^dQ%n?],_]*9ZY20d$Y$mcgdA;<6;d$Rag[\tX+?[<.o%F(=cd8o1Re;dgk-@:)ug0%^UTiTaKpPR][faS9)r8>&Kp2OQQS>2Z01CKZ-%3n3@AZ?@CFHI4-/AFhAI`o5Tk)mG7dbPV!o<X_">b_h5":Dp^AnrPieWIW!+4>qkobDqs4'`F]FbaA.nDJWG(<l"hkCRUnC,7.l9%NgXX#fF"rc9'r]$!eFQQ):XC&n(-kc#X#t#%+u11>M`G`XG)h8(If7iY(l.C`4:?#8#.9J2D,D*"RN:G\)qHLc:PCV)W'2pn+G6u%4Wc43[_.&bkOe"/=UUR'`F.9`]!T[^0keV<I]q?1`:^7D)WKV@Y(\L_m?k)3k%gY[_E@cJ\JcBfKs,$Z=9A^i>p12E*IZMb`*oWh%7CBs18f3;V&:0n79F4.aXBeqQ/FMq,d<%6pIam"jgo]<aRCA0g$Dt+0NA2C;Y05HA<6o.*(7uQ4Sk9b?_WX_<:s,8_e*2!H6P4'*%[U_%nObT5RZEPkpUY62^qNHmS-D>D10auCW7]onJql"/I])[#B9C___VX',JKr3@H2sP[.'Msi/'=W.F)XHmS+H3.eW>IZNLm4&1%GHZ0HIF=J`Zel]+h\%=eRP=&lga/F(+Yaf&rh9pZ=jQdTa$X.U6CJ!s2Tl>qbjnBOQAO\A(W`'r.iEF]ms9$<bVSIYN1lMXkk'BT%)0BuhFk%Hmo*dZ/>B&[D3glpg1[((rA[NL=o*dZ/>B&[D3qEb@K5<io3HQFn$p$CQE5`eX6_HDkNn#a_ae:N:TL8GP>&riN1['Y`%@eC^%o*d[apDrABW</5Wnpo#o.k41sfBd)A3o`mV[8g\k,n!LeaZ=B&BL=f#>Zk2RkZ##a)XUVoP&jFf@nFAfgR1+Y4hd*1`O$VV%+KpaoO;LETmBujMP/1O5iPsZ0U>=icCWnmNbA;R+S.Y)23SWRun6@Q+oU+Ge=_9j$Gco9%UrXIK-SLT=B2dBGE@?Xc7U@QqC1\\)%`9"B=$t@h*D!3]fU=@>$n5nF92YDg5&9VKNm']S9LrS:AF2"0b=?T_qNMFY;9!V'41H)3)d%W$BbD*hUNm3Y@[b9/Mism#,LLBY1%4#S\La"$].T$1qMC`'iBA&uORD2HsX8uq>l<B.$+O71_5etKM3$mA9sbLZ4UZ>L;%Nl1>X=Q:_oFg!1X*NN1\CK,&8@2>5p!F_Q)%AuTr6aQ&aOcT!Z#!c(s#^MKp?<lV+Q`^qk1WjGn;r:]"1VNEoaTQlc>bb'"d]^:-2:0$\teB<-HS]@(g=QRIP2Pl:/dknLJL8`N7%B]J5H1(G3YV"eLTAsG+2#\007U/!CSGSl%'`\b4^KtI5<3maj\"7&Z;\a8Rd$U3H:\OcEF@ZL$@N22/)"5b%uR?,4SnA<)`RjiR5%%#mDE*39TZn"XLLfMa`%A.5.YN!+fZ'1r@]8#+/VX"r.9WH(YWOJK^Eo9Q^uoB<LajP!c.^*PfsnbgC;Dm[\t,>2q'<qm1DO<0ah%@n5)3Q&-QMSM#Tdqb&_4PVX1EI_Au.9r<tWpQ!6mdUq+r-HMTG*TN*Wg#eaqZ+;s9/,\h@k4l-k1\Zo)*"nsM\jQ4P8`lDCVh)6+%m?2ueNst<:5s@'hPi0J)A'uZ2AgaXH$(g-W)0Y^8jiA[AZ'*W9hrpe)AoP8c7u#CCU%@mrS`I+/6T\&/0K.C$[^&c&F,u9_]mmQ'%7g:j/2i6sAOG7B),@clg\@P07P0gQRWCm@)5mCNJL*OKFN>Q/dN:#[GXM[;dT%!<O6Y.,f+Q:hm1<HdVbsSn:/;q()d&,chmH,[S%O&h*J:jM$H,."t?;b&^PXPY5!f?V__"gI<r09AA0ls4Xn5'A/@&M+r6$(5;sJn?=r6D&BDYAVnCF[/UJ<i3+/'D0B<O=HQZ%JX!D%Wctmr(+DAP4Km)^k/0geE/H6eB#H]jWADkU>NPc;qtY2C1q(,G3(?\M/Ha6S?IiG9lDjZ!<)6P-`2tdE4kX[u,3[bOi=)HSBUq$B%_oXhTl*0.Co&29eKoA!l[EE8JSBec$+ar\!LGQBXN4*lsY1Je=%h%1H@NnZJ&//c[>M=pj]G[-X7,$`#l*n0[)B_I8.NoETjZK5;%_H+!]ZQ2,Q,aqc@IMgkc)D\kQOUTZA\ST2?:9HBrH`LZ7m6s-Urra,^T!s2k-UP_(bjLrD)r@Z46"A*tI_7Qs6qunc.q:3P%,(-!%Cb%?q>T3oqgT_PH;[1in)DH'L%f9@1YIL.Rfa".sm4c8jW&M^d!ZRZ,AJAaiGU0NTBkYkXiG":&n=gF$P0]FLW-'jnq2I6S:joS;%MA`D<NE7&jUc(#,Ri<qhQ\"O_eD#+VUd"aY-R0A[=[tq2jGU.3OUA4l,9mrWZ$-U5'A$la^NF=<BWCGB,NV+I5X^A:n(-ON,.@PS%*(mqc.\+//fneip4r)B@/Eh5Q_@`r`ZXpX"T*i&l?0O<`:B(`sFf3*ET&-][<&cE.QqdJEhFoXd4X]F.CBKU@&t_>s@o\LaKK%?"%MGXbfaR5&t1mP:hp7Seq)&gtqCq$b]ZZ+!i^!-`:D"N(D><$5mo-.&7/9uPeYL^h?g+GN+*f!*2_WA214=COKg_q![K."nE^*%Ls%oX!8dBtflk47dJ=ZZYcsnlDpeccQKtfljW@PtTr"*\-ncV2+X&+C@cJ*>T%1G-P/**Pj$)QXdTDH2HkZ9-,I'/s_ZC-J=[L>J;/<%o?PeIfe\r,eB)SimF,Rrq5h`C97-rW]:P-^hV"H&Z<J\g#S^XGXbn'!-Utq[g.`fbD^I`MOUM=kcGbt8j3*1SnlW<ADK+.5I&it'%'"&1`fl_:^<2Em!;nt`33s25d]B&,::NHGFPjJ*WP$s+W4>=s_)dQ_e!qeF^T,f/L?1[sgcL6^CQ;8R&L?RG3MEA"rp[R(30?bnT%<s_"g-II+iB"8qY**N"F9#dJA[T\Upc:Bs0l"hV&MCA"U;:_knqq;5(b]dkJjAr=tL5$(_6ta6]H;]*k,?2'W'B=G@I[nA^RAA>8%"fLX(IVF4YX5>2#F@l!TC$l^Yls3f-8T%*QggeHLLno;Y9Zd,NEHPNYa]2r!_:.OQ3/<jA)33&@hD_LY7dQ/]qQ9k2.B#/m)6qpF%bE-Gmr)2os0-[\6mV71O*ObaoRSC8k+3%VFSXpk+GSfPCflYHbm%"Zn<&U;=:Jd(]e&1bA#:iHXFK9%<C:!0s"KuV.flVOR_,/^O%9t/OW+h"`A9OedgQ;+9d:SY8j\mdQ<1T,7GSc6pU.bSoiIMV'nb;Ek[l0"#,4.FO83EL";VUN_b>M'Zr3L`c^0iIp'lcQ*RlOqJ)%=C3tW?7qfF`gh0^e*5+!k*NJfdi%QBXuDiqqG-!lACE,_1$@53-5]rs2P#gYRl+a*km8N(*30g\l1?f.2RduqflVNL0_Zoq.@X(N%\&9s)Id(Z0V?+quT^0h!dn:e3h&0?ERnbW'c=hW/5+>:X)1'$ee["H3Ep<3P\Q6hLdi/i]K?-;,Xf]PBN(?cE40Dq5B1Fluhr7'6%5fGsrAE)(!0!cL3([JZ9c:kiPhgKWjZjV5*RYA0j\5)$.K04.pag>"uCm%'VAn7>&XR;<]Qcqn7@\g\/VplYa%_AI]9L54iFR?A:%QWOXEL4h:tPMrpmM\=%V,0KG2;iO3kDIpg'(Rs_N_/sS<>.j':R@H."^K;j)`jSKWs-c#b$,[k<b#L2;)U-C)JPaqLgt@Q\?MU$O%3K)AQU:Z\o\T?\+>iD-`"coD77<_LIQ#s4?e)nC/??G@Po4WNYL3'N9gbj"pUm/bZMkd\Neic3KgDCra!#l>`047PI/peDa)8mRW%Lpb6ZFK6J#%uGDJ&^>-fMIhO9E=domX>J!P1_)Th&4?`4dCB17.,!sA/\/kZK"SXrbpS*1;`/&C59%aY^ScB9E0T!d&.O>Las%n^%Fu0nJateFiFu0nJb[*]HH!iFoI;?rP>^\+*\$Brm\9@R_[c;>KduE_*>_N8[X[je?7Ad<^7?b59PJgWo>1uZO]j(u75gS#*.NgRV%_F;J5Li1^H42Qq^]*qP^V4c8QIBOti6m0!QcU0$#Fo<38P%hu0#MXoIa\:*RHb<<%K9H,_YTZ2H,r,VpBA+rs-$]ID\c/b(q7*^k%+gkbpe`i`t24P:Eg0+E`C8DXXcYmp9QEs]DCVrPp-$OS9+WWJR0hc+sk^d+3L:bG&9(a3K/*.Gd_%j$.>A`PX3ucoK)K*'K1*>,a%L*ek73P?k[\U5TlS+9Tm_hB&tN6^UqP9496L-'bV]e4NHS_[5h+o?!(UT$MdA"j309rrd>0iW4!?5nc^VD777[;P-eb."06Ic3#F%%__3h=1B:*Emm#1$Fd@-I*Q6ISh4R-Nc?[&%]s`m<+MQ>"P;a<kI9dEG#98LbD'/LG_$=1IZ'%:oP6&8qdu;:j=H.%HgbN`]S[T)%0c=PU=nk`t%ap`MITm]T3bGu6=(_DS\C++be+VYF]-b/\c@uAgZ;+nUSX=!Vg/8=sYJQii1aXT-+`ga0"6Ftp3NfT8C/5RSj"?ka%\@/7mo,65&i6=$o<]lgCKsA$kpNWmpJ2PKO[\LaIVRFdJZ?]ATbYaD$*e2$Eh:b5U=3,AM?*^$oCmO*2H%99H)C^)Z<:tlk\(]\=%l'lmBMhTgBD/$>'GZi1C0!Ft<DkSHQ<]q\<I<SJPNj-43;'HAYG3q'!A*KI4$1B-`_#f%UCuErCq&Zu6q_Qf'V7q^:>C=(BaG1-?%-fIe^DcpBuP;R'!>YmBRO5.X=\d1D;-/h"$J<KM3jkRVUBFM8Zq/C0VFM$CeIMa?hGlfV%a[LDd$0-ECl#t4Ig`ram9hTj<r40k^%!YjOW`ZY'0m..Vte.=$03SHVP!1H:mo>XQuDanGcY9lN8>=i=teaq#j"XqGH'e-+[/%%VqbjH'*\hO>F\?]ARY,GuU$f6[#Dpj>a%oAEs!<]RG+C!%$:d?`kMK%[er(.6d&XK3t:B[$3jXjX1>Qu*kI9$tS)Or$0K@?W[/1D*IP#F,]"-QT>6W9(^t>#V^:))=rY;X:tV%>uKQ/Ctu"aP>gHW2S*G@J**6'**PeCeBir:lM=n*G`k\MQ_6$2#8f8:e"rTH1g=*sc9eR*ZI2Dj1mufemEq,0e'$VCFM-1d$L$[j%IZlBUHFGWDf[%.8Nm_t$\37E6HJjcMIMnQlBh9^VLlGDm/(DiBTNYH_([k%#cBLS2f.E#s[c)je.Bi*nOth,%Ym?&gSW0H*??X'+%o29a\'!5J8@S-=,9h3<C)X^o%>jI`^,L<[C*CGnl\EY6Eb#r^Bo#7]3QGp2i(7MQ"O/[b$FLG;@'cT0>FsKamNAbg`ZHB=/>8S"@%e9n@S9lP:.'ge5.;>@5FL1Js$3UP=&Q2&Zl!5Wl*@TOY6/TKh;[QEMJcKlm@Oe'Fj[H;'_O\@ElBuq?qN1G#"PV*j9^N?Jf^10fQ%>h,ZFNGj34<'WKohcj.Wqt<qhXmWjLSNjg?Skdfs;9(RLi-UG8DOGLkR+X&P0!DV$1onc6(phHJER:njs']a]1YoT`N3PkMae5nm%FCE]0mg<3JG-s^!Y-_cG!#_prblQ=cWo5K:cu'=9U\-4$"_]T>$TW_u&ZQ>H!%i"8UO=kP=b&Q-:,`F)3"FM7(81KO@MGm$1^d+j%T6bOq.*'J:(80J'5TLfs5o--XmMh>lW,!V"OT$ekC=u8UQFW.&q5&JM)6%DdPg@:KYf9?3>W.;UC7"KG>ks;Eo!(95^NV+KE2?.(%eoW>_6kA"r$F[g8nYLUCn#p!e;SE=<!d#o+U-%Dl=JZ4;DtTm7R'#Cb.-"P1*+a/Yh!=.mCoAZKp!Xr8)U=(8hs4qC'f(eJEd"XY%!EDb$qQ5!#P^K[,\MM+fCacpiqH;r^Y2s!)IFDF!e<IWD]mf+++YN50me*oYagJ!Z7@dZ](=nfun+AIYR\B2eiOs\0=a+K@>WKRN%c[8"MFp=]BXa]pC,i"fZC2P+J(7DH\].mq6p\L;!050D3\C]&STk!`"Q1"=?F/=Aehi]?`/_oZ)*]c`5'3;m"cR]G"CuFlek?bn\%jLj6Wf?_9]Hn4"<a0]:kF60&8kDAZI)6(pLoeXq2`R8c9p\Gc)Vf6UUT?B?Bh0+)OB6pVN.dqM6Hi;1^BsKt'h)A'DFk=ICIc^[_%\f%J?h!:l)^ST:$Od<'*lY!>(g<"]G]%>7Tn#pu>+&,8T^X[7ZqtM_FPI#ZZh\,\[l*S=3cgoa/l?iK:<j$b,fJ;0hC[YRoo>"DX%#J8-lIcfg=OF)7R^Xpg0<^1l3>k),boDN9r-j$=@qAH,$``Ld3Mfs_0m+fXj3r>$9pssC9VWg+ap.oU/][tK\<I=u`B"<9e$ln$M%Xa\&=laYPbJ\4skqQ5pGG%YftQD3M4:lP!bD;OSkY3+*TqGm"WgGcgrcgcF294d'7hT'8l*TZ9&4dB`p_L6eAZ>^8Ljl3t&b9t2;%?f*p4oon'*pJsKeAM%_3G,l^08ChdaT6[)nThieh]mchj4()lA3D[Z(qUtIEW\J*EkK2/TFF:9aSd\S9oijfU+RYCQ751XaYB6t?%Ffsphme&A3Lg=,FQb:qr."+drd`:]%`"o*`3NOjf%V50Xr>b)V9A]!45Eg0ka&[Ac!IqELqH:dAY30+Uo>O#/qt:e]kq!>UArFRk%[=6&Lb-?lVQd>K%CDT,iG3t_'hJ:OT&N-h6N8R+o@I<NC=aQ7/C_A/2$3eh>Z>+Ebdr&('kD:O;W%ji:K^#B>/LuUJd,W4`(VBQ>%OlDHujk2]OY=CVQckC1ZNoT-[o<>OXJ'OQk#Q9cN@(Yo,i+a>]q9>OW+mF8eG!tuimD,2^n'kTKhsosW7H3M-r\9[o`nTb<b$FWf%3q4I6ebEA-iqkdg\NEXDIU7.m&jJ>SmebRP4qKAqD-U?dI:rGhGGB'$5Q#e$rHK[p_rQ[;p*@,\-2OZ6n,$V.*ghFp+q6FoHKo,4%eDf9/rTgN-)c&<_Eo7NnIVqKaiq<CS.3')4b'X#IX!W62PK@%K5FJBeldO+FA8@WI4eBcPJ6/GX=QD@i2DQ6"Km2X^R*.RZ5)nL3%\]gqb$rQ,QmQ<=41\pb?(t<?s$:q[&ErO(*KDC/>Ta"X:<A#po#9**U2joJ+*mIg;,Q76n\%?:B2\0!e>Jj%6iY1;no?Da)dt(3@%6^f"[R>8iQ'8T^O*_JGLSp]Ybb0+XE46Yq^8?K1Y2=,sMG#hRiX,OfY)&a-')Ea+N-#<BLDfK*0W-%Lt"e*EnlG['"UtF?[Ls:)R%%q=#5:*m7BI9+'F&76"&LATO#c.u=4QLqO\4#]C2=`P1IT+?@J+I2Krj^>"FR:,pRGaKS3)UnW3mHn\fHuiAADeQq!r?rrYL5B'J%T=CM$bDD/%r"+kW3[9eIQABG-DnI0=NY+`Y#[S\i`*'jZA$o/UUBc-SquEj.Nt_.u0hNrs@[46<S4:cS\54X@SQG`sHCYRbJ%jp&%U)-<#p-iTEP[B+5$^Xq@eHiSE<tVmd9<'MWLp8VQ`=MbJcb-1lINZ8\,cEgmA#Wf3>I=/sQnA:Ln&R/VpjPTE[WTC%P-DpW+r(\r%n441O^A1t#!rb;pg?)T]+i*G)5"Q7l[C9%:8U;OW#io"DgQ=W?$H4-'Bu%3!F[4]le85$[)E/%l[(DfXm1A=oj(2pt#Xm[FrEhuq%N!Y'j_%&``JIV(+69k;Ybb)<#)l9=@k>EHpGuLB72I&,OScp96X6_>'\\)]kn[u+S[oc2FcF1=7kD/\"rc5a'.mJ.$3)%Fq]L'BM%oDI^CfPAKO/p@7=;Y%DV/,0lP\Wfc;[h4QaTlaUo(%=+Nao7Sn.b$90c$%:R?F[p*?4TNp9dJWG/"_-]o;UAKk/p-$a%VP9IN>lC%5+dl5jkIZB@3O!i5`U8u<[`%:X$sJKhO;&N-nq#aitGGqZ3MFB08Tf"^-dQA$?n.%0(usjNV,3TI,\1=0]P-BFBWR3s(!gij#CZ;%/jt3/"#rf;00^JmT@jdMpof,(j"R&4QPX8o$.ZTFi+Wn+,nN'L`J-3VI>NQL>`0K06u&5c+?mfYJN20jTpn8oQlEcM]JBKk#p4hY%hQbSlr<"Tn^f7uA6%;q0ZFkN"Su8^Z6@WKI!@bgL%X1D_.WW\T7:+'r&D`M-<VM)eKI7p*^T<l:W-1_3$:Hf><@,V@Xq8gk][)d(%!mBT)=U#<habPAU1>f8'*_Xdt.3CXS__aRQgP0/+/Sg1f@$u>B[pRhg4]'SPM!.26!Ra=1S.KqTaK?Hr)l\ESM<.jC2)sZ4ai6A-%/_lbG5S];h^$=F9:u3)VY6PcRB;#B,5)T"GH_pCc>1cDW6&E4/`$We:iJ^TjHrPdITTBAp^6U%uhYj8r*n@uSndWlB0K;:bEJ"^l%cuSbVKPZ/Z`rk$\+1#8#(H@E$4?c\a(O`p;$6o2%4C;rALs?UrZHZMX<2LAqKi;.;TU7i]H_<K+#ms2tn0_<574<p^-Je3J2TfZg%$l]r>j4=h^R"<HN_*Y%fZpX6[$aJ4?":\WI&JNnEpdA?h6-7ZnAhCmt5-H&cn64_L!Hfdc.UU:(D^Qn]F6[r5d^LZJ59Oh23X\bP%dG#]^M##k3ne[t+lW[@[WC$`74NR'#K1I#p:=-<EPfL99"9)Qq7_5N'Rs5Y+fGT*ML#QT+j:8pD=]An'k76rZ3UBc@c*@0r'PUkT%.H.Zm7E\)`qosCX#]Jg0:!DL$Sc7W]E'b]#ajJ>4?fID;!h#)SH-%N..rl'Cq.#G3c[M./#7?`+6*?7!\9OT+?%5A)"bV)rMS.Gf%Gq?]974]R,htj:-^.Ieoc-,-"U?%N,q'*_H7'XS;07m2tloDfbK/@&I2e`>XJ)%pN83qb?W3e(TV];c=W;e0a\"hq3pr9RcdS_;m%#,io%-F%l&`HrBXEB]npB,E(+;*,Vri7b[nf58KN&brZ:U8EgWgi#o]aS>U^j!o?VDFZ7R`HTKXn"(Z`-G*'(*Yk/8UO!d`$;dsi%%/%LaJVqPf#0IsX5/g?X3RYpp=DK;H,#o8SY7n+ts0r>Tmu;>DB`D-[<R4Q7gcTh-"$8NWeYi^hl+bcLW8,dN=R_m5q!.1rM>;`h%Ed8^f*`>2?1Pi7TWCg:$jD"DYMts#j.$XS[+tRYZH9h.@r>Rl93`X*S#aSCdmejK':rIk'N^ls*V[G5'2&%?/jppi`2jP-"Q"<c3%,5]Z:[*NF-Ar+__=YfjkCm7$@YB,*aqCZEo/3fg3Z^=$&3X-ch[EDX0V]hQ-Z<7[Y>t3lSc6E5dj^m<^kZ<[\]q"6K`+Bq;JK^^'%:,rCZPP+&.>?!$jjX;1]:o["q!W4!_f_i)fgVV_4q^#h%:F*2h[n@QJ-F/1Cl.J,uSL+()_dgP9&`]"b]GMJ+.pA=i@l5MX52>qS%8TT4F9d=ZgQB3_'hU0N2-.Zj?+XW%h7=,RZfnh/m,e-tS@KnnPkGj^`aY$<k4\O*m@:)*EUtSDY:H^N6<,U]3To"#u)NEA>"0UZ)%Q6qg/;38a1ls<A/,KIr%Mr;q:MlaUQ[hh0`_H)LOdIo.K;2?r$n<LU8YBZBF7\U!P=?gup,CB0rN1G?(,9q6EY!MpVk(c.4T>Z&R%_iVC9]DGWS%6Qu>c,l*jKa;1K#N.kjN/*o;\@XQ,i*qsQ%m=54T+HT]mI[SXfT_E=]MA_gJ(kW'nqiOGKA0cIbuL\DgH&3edD_k-%d<+A8!:^JRWRGdu^;+'=0^"^<VU/*8oGBLP2P<;/lB=./$HDKrUKErNm7[l]O*"SRn`at/>s.Z%NHc347^FVfO(BTLYXf<hc=J7`%OR4X12_5=*NV3JY#GQeOQT+-aot4-I`+',eTKh>f_]r\;kb92dr>niN"IW1R8T$j_g%cgWV%#%>-2L//TjVe.Bn,PJ:uI1+++4t0%0!@SJ\oa%WT$8Ot/d.2F,h/E\)dh22"jr,L*C.O\c:oF+bjkt6AD4t'f5IDbaZ$B["HMYPTarC]))Zpu[N%e.G:D21"5-7NC]^42%^WJ6Lg^Ib0N%rAjBZ-[+qV^os1i](GX[H.W0*e#E!GV#QDA06Il.=s5F5CLT5AXd3S2\8BOI68RP;'4P'%60"2+:'MES,UIY;V>T%5%6LB37]":B^VH?9o+jY50Z"UP&a#kRd#K(c9Cr2X#,D%P0?d[H/EGcMepphgr+<0=t@rHP+0;.M>4uQWtp-c;RspdYEZp0-`^p^%g=Q[/gtk7F\0XeBNDW\_U:R\sJB"T2n]6l\V)23nB31O/fTM:5&ueQ7VSf?$.U&P)87Whk[:FnsM,d_4?<rRm)Se1Ag;K@cNEt:C%WQ8g)15%GOX\alLSR%Ac*8aL,QXX%/9qUAB6K+L`6,@AT!ipG3FY@7lLOCdc)RH3gR!P?d'dT>u?gUL5lpreMHgI->np]5U%aoTR%bHY$FRLMMDa#L",.J.<qlA4qB<n^4O$VX-5QGQeP>K-nnUUde&2,d+1]\OZ=_h7kHl'e@j!3^Xf4@VD6o97f4<M0U(_f0n%cO[.]%69i/OL1WB\2JRQTYFR39d=1T[iq9h%fACL#]n+1BaK8nYWpRH?boi:Xe/AY5c>.;s_c"Fn*OdK:l`ou@g-'[ioO;?MJZUaVS8I%3%aA?LK/KNP@$=OS%KJ;@`qf`]?.5F**q\,]"XIV+N@\aNYh\"Y<WkB@)T]XQPN?0>cGT0ZQJX6'Gq]^9L#;n.W][k)&d5Q@.`UQlS%Q+nie^dE.T`!0-C:l1+OVZ^\%mEKF>qILqji$a&I*JuC1[?V;[@3ZrcP7W\V-K\[MZIn7io`6r=_N?'%U&D=p&SQ7H3$<3VVgO;1%);%K7:TblW1;7hr3#(43gEj3Nh%a=Q/;s?Fh;JjEFhHW'7(dJ/rf92.c..Yp1^X/dA$HSl5))'gU/?F$\\ka_(sTl/G)kp.7p5hJ%&1e7nH9udM/0^-?`4,EYHM9'--74N9<_J2>=S#-"C8uHd&Fo79%a47MEneQb(fA?Hr@ii!j,<_PHj\uDj.R_*::ig/OP>,K30Gne%`1erJ.-/_::KRpj_@bUD<>]NC-`pqfNU%6o2R)&H#dY?86fjCBV3Tg*757LMT&omt)"I39JPcRdp/R>#1d8?.h$mZY9X5bXmH_o4%3BeY\iqE0$k6ZWe?$WkNWJS[i29:=.A]DY\8]3!%EcpfRUr-FS,[sj+@c+fditrn!8iWN,O\/.ka[j*Go>,/3]XtR)U#SG?iO6R2%SPG_4F*j)*<;V]:peD;*asfO;1b&9=$WZ/&pZ,;q88VmVjIW6fS\i@jM&Q:PV@mit7+EquRB.R"[<WDCg\&E0Q3R]P;ag8KS>=7E%&JrrNW"_8q!fHen+W0X\\lg"j("NLVCF'79&_Y./S":13P0!&7epP5c0KDNFpU;,1!']Gg__aR)%#Cg\jQC-#5:q1Ci[L$+@N<%U%-aD!AItic<Lj/.bi[nMDp.4m+,.\$'qa^dZ*`2Y?+UP:@.<dbB`K:/aljKXbYQ3?s$1LFHq.d03+R'#b;?o%?/KRa"NjXdK;""7q%[4#Ei(r\6$^<&@98-\mC&-LUi*m((4;U^a;ni?Iq8Hrl[L9b5&ae6]WU;LXjJse_t&'^\.TP&JI$%FCL!+FGnH-i,<mIT:QZ\%Xp%R\_hR@GUJSnV`Dq=Go9I..TX"_oNI!5p"6rK$jl(E/1W6J.k"([8;*9ApZ>SLL33"MGV)CMBE[*8Di#2M&lf)YUC1e!`I103?5&r%'ah17.g-'a@j7,e636fS%E-+%Kn@5r`::T&oV^8M8n\V>f@$N!c=&C^,rC>Zk*Pb1&fO+=r5fjU@dc/=nV)>OAPEK]+;=+SfJb+\%`b]?]BFG1`8X"[aWIW-U#`*llqkD*>]tpLc;aOtb?p/f6VM)sN5\&2!-#bW3I8_=!nL"pCL]\S'gUU],*/O6a$-A(OK_)KM7"VU2%`^S9V/tWtb&b#^W*Fq#!:;s=dT2F8QJN/MRJ_f?>@6IYESg]]&<spP<o4f!f"3n#+Oq$_s18sd<F_&C9,Qg&ZaB1@a3#RmNmD.\;%,K\k!*9L-o#+T><-lLCER*#UW)%`%*=u)lWs$rt:jsU+t%EX.^R#,W]O(<bUfh=<*a2rif+BUQ)FYZ(=(Rto&&:Baf&G%8Y$)n<S%F$9%Yil@.2\Ci>=jl#MPS6MC]$O@#fJ)!Ot81qTOG`_W]/Tc\HSI>n24houeJ5o9Y9!$plJ15bLV?CloD#:^81en8>j;*)3`R7Kc%7TtP42_*`L*OSc7rp%VsXe4tbVHMj"?Ss=;]n!FKf5=Q$SIAK00K(Cs3>img]WZ?2"O!\c@9S_7+uB_pM%%hVML/>%ZM"DCp(pXo%i'=AQoG]h/Yh&PAp4QmLTQqts[N]l8O@r1M*1_!)!P,"i!T.0uhZ:9`A8lhEZ=2A?!P,#<J],CYE'T/EQOKjMC6o09"&bi-%[Pn=%0[puiHPYqT-PW*PD?3koeqBaB!7I$)EDss`0ipfeG,K4k:T2X@((/[R4Q!lo?jB.:CZA+U/$@pI\B!!>&4*\*_HeW^EAsrP<"a;u%KN(Ar?@+Sfq$lIG$6(KN4[2?(0!&SH0;JtCp]2@qnSoJaH1Lk,UF8.m!-9VMq`rSs"6N2%=Mbmm3B2(]Q6@NJd!$=*SPPmu8AJ`A%-\QU<DLmsqi%TSN8L"\QP!:T`i^@n<ls=Nag#$T(qo_VmJ*2B0]+^ApnZ'S##+o%k%S0Vhp/@ZX%$KHKJE4CakBRX-9Tqkd<ee[C%WDJF'4O:<g;Ik-J;c;73gNglrbK/%TiTf/Z&0Vj"&P-B5)4FUfF4*E(F;Fmt,KiDTI$=c(qQ4)f_X^#0dpL0N8^W5sdeZqfhIj&t%;3%k'LB2'ViR`6i?VfVLXi=XG,7j9\-EW,H%.qbnO0\i6Jq@TG@>ck17*+YXomDKR5ZWkI7Z:^]P</rW7GZ?LKHpGGn@l#AM!(g0%F@lE2mj,&cK2T$t'$FbO)jD9>5g:tUD252;rI?nVDV5I*[=/\;dgtAiFupTD7.%#IK50po<sWod$L1kr0Xi#I]5l^HPT%_2fs=e,%6c-id"Rs.AL'4#f.]<f4B?1e?(LA2m(3_4Xq;#fW!ULV35f<ee5\9Af<=*A^Kk^])c_$`"P<!S5*aIPZ)A$/!k=j6D3h!4mp,414%3$$,4pduJ<2Ooe*XMQG+'"Uh.hg)`7oL:mNB9`o4)bro_\Y:i7HQI=D+b:pON&7DP3g-kK*DEea'jI"*@;%i$O5a=O#fH$8`h2U6%6NY-Bj/g!mF1)2:DbOU:jeBhOrJ`sM"/=MZcJiq'bkilL,:8<D@&,(EhTf&Sr^Q-?SQ.QnD"nrXpMKBlI#V!aHBLSNZWLG]URl#3%R45n]<J`"(GSN'@U#rDX'(r1N)2K*ShM+GkCd:dlK@F"X?-hqq@)h>mC5FNPRg#F/E4->4,bG,=<*NS[hoNmD-+!lg3Wk6+=]T;l%dM[p%:JoLWU`<_:d#U"ukFbGbR[!DBC.BbFI[um,K<<Jh5oHSroAQ=D]IFg,ls0A9]RU3'Lk#t&\BD>R"$+&9nLdS"'H&C5Y`8ch%MfFWEkp`meiBZDsb%j7GOm*9lL1m9EJ:+M#!Q8dg2ISq8m<A:a@?b=Ij_=Rd@M.8H)'RM5KE2/3+o1G\!c?lnr@KkJ)u'u_D(2m`%r\UWOGOg&5>KgIOG(su8(jE<?S&IEgU>P828e73aX&(,aRY\TRqjYa^+pYG[0F>8Slrq(gd_&Xlji?VWUG1\[`Q&4&/3PE@@o6>5%!d[n#SdiO$r7$T0";\WW7V;eU<"e7?K&6ocQK+/LW!Q*H$*`i5e-$OK2'rt#E-AofO'CA]l\%/GLD+Ai5ooYMmU$G=@IPeAJ9n@8%C=Et%`S`3U7`tVn'+%`_0EsBE7eU(H/#?g&#G^9#P?a&)*/n-H,<g>4@$J;2Mo/f>_$D+Go[9uO,QlWUYUe7d=p>I+ik%2%(D(A'%0Zm^;B!9S:_+;k"[d@IU,`o%LX1oNTmES[;7ceHm?'#IJ%7E;PJo]k9&ElNDAH/gq=9g'6((#!o)d`ie>PS^UTZ"Z?gD>:Od/g`q%O(4e,Ip,$.F4mdo7?=1F\:j:H,N#5R4k0:oI#IVDUL-]DO>=@INCugpn1C[/)-LnKK5>38V/o09G8kYt)?PftNCKi3;,I<ib]XrV%,78O5':am\>C-f3YPE&<:5dOk!?!s*_>j%V\FQN'_eK?6*b6=@(\^HXcjE&/)cqF/Tp>T8MSq-HAVd*u"q0:sk==<U$(?bRet`"e%Gu1@ZppGq[H7n!!6BllHWA[-n6o._j/+5cn/%R<N5[/%elAC1I#Y&CI9--B"&$fNP,JX!3=8[l3J`-+%eW4ATL7lJGfaL9Ip-"<O%P4Ik>g!blkG`7`Zg_?jj`mSP]`V`<p<)50o<.k?rpP$E@r#,\A-jc.g&h.$Vo*>I=VmLOSJl)ZfQ,Z'cH``jY+P8O_YWfL;%"_ae%!MCtcK4&C9E!ap]Qu0H9MF"I^+K4a$P>)1u!]s'C/!.)Ke-6!2j3p/jG+I$<0(6BbLEW4%`C6t^_e@$0>>7^8M];[;Z7HJJ<O2&5%q9\lm^(*4h;4$XmJTQRR7MK*PW]!6GXC>rQ7kt\\B.gC.4%qi?d<hhT4*3LU*n":76gp_*rN\o]Tq:`"j]/sK_Yh%'=k\5$)PkAs%#hld?n"FV-K"VGC5ZHq-Ht<?Mf/%@cDfoVg_!LUic:.jN"cRBtG;^)4[%sU!B99_)G_"+,<4NaS.R%d7S@5u4OeA\NhFR-C_h#D,%3k"hA8DW1W86A!0KQn#sn""TZ!k^2[Ri;Y\p<1$9JL"[r2A2*"kd=LK8>,;J;B#os8#!f\<==Gun3iS>Mm;.;`IWF+GsPg-#E(i!%*aE"_&BB*[,?)4H_pu<n)!_CLqDmO>1Jm)kpf(P=cbC##ofRI^<:!j&ag%KM,pEQ!jsHf=LP26^cH&QkO.,1$H[cKji995_j>!Oi%\G(Dl<;r$[1lp9L=]QIIo',(DEaH(SLd_dfLB70XYHqA+m<*&.]=]Z+$u@m3Pka>47jb6Xra1RW<-dCB\-spK:,-i-@%Df?aM_p`%Mo?o.LB5[j2K9Uj>FFrY^<7Xd6WC[I=!9L@QoYXtp@rI8%$8]mltQ\8Vt:?_M&NLHn@l/6T\Nh(g@;(;+#>>\ZPVmtKG@/P+pb;O%5cS6s$s.!4!q-#5!,(.YNho+`=4@S94Gnl?MUT\ZF00t+IC;k'-+*egkM<:tYbY;"PjH1R:h^+#VHp;hF$')I?Efr#^h^:Y7N8gF%,4Hp_JXIq5SCk9_pWukR//t3tEIa4tI\jcfi6fVMO:Y_?^@oo-5&)QS5p20*BQda-.pljF^&fRDM)s&JluCkM7VU7STWPmqlB8:*%"=%j$\QrQnp)F]Xh?(<`JA`fglRf=k$Eu_&['r:H$Jp^dNMr_]S@?;*-jU(=SG+>B"_#)8,O'*=p[$(pFBoP?<PpkCal.F&XXC*Q%%Ij@T/aL4)2S`OuVRD&qDtt(L-;?*4NjAU$'V;3iO30_L/qDs9OcQf8T6U'4UETN"kJPuV\E_!7h)_m#*PV@`3<c_hr.s)23.`"8%G]O]tTKV]'G7IP^c;XSY_\AB*-@YP?7?TI4Sk[/!Tgdo1RbIs\M'qe&bMp7Cga6JAYd:I:#kW!VU\^?PpOH!$5WtnQ-,=^h=X>[Q%1:G(s!pO;gX&+C_hd[3i&;[)"bsOHr/g:)q&h4ZGS^I4C=`mR24qgBSGBprG@3aetNpHRrCa:=e_"`#Ee[(C&N!"+'_KrMM&ftCh%<7/lK@.1=@So\9uirE`D5)koQ3?Ym/7e[kmiK"L;lAlJ]qcd^'P]r>tA*L@ah[:P\eh2nV1:S2?"qVnOrp`6%#LAI]!<`]7++SE'%\uc(j^d:aa<<,;b4(D1DiI)qc_[]N&0%RCFGbGp^9^Ko/$m<@E".1Tg1OoI\&)akdQN@H&qGV(IC.c5W5_-`W(='@BlU8$O"qZls%89?I`,q"6k'OgKXB;i,Qi.!7)&MAuukU.;PiKC_9>oa.`iikb**/<qNrmNFRCR?En]nLQ\!"W-:*XT$&A-/YJ.*2\I\iPj;p=.c\%2[gKBKCO6nMZRqQr9EI5R#;#.0?^.13"cCp'+]ODQ3]d%]8OVHK6+eW\QC%;aTe2YbCs%B37W*'=<_d^&0o6F%W)\-;>#O#>lqWu%6-+RYI[@k<*eBj+Z!-KZ8_R%lh';Ec+c;q4>nDG)+1mJ1T\HL8#]I1Ra1;Vo;/odtgSs9(6CpIs=@Qbs;pe,:P$bcnY^qLl_*#H\%LXuK/"HgC%J\N9moPjN<Hj#Sbp41s)U@8L%6t-$",2N."=7H[&qtoNIJQ;UL8k/(a%Q$MCJ,Rdd$]sSg1b/Q>P(A_qT_S0?)JI?[%MU'KI#It(pT[Joi,6VR0-R>0C#='6KmXb=p?G;_alr>g4nlt[\GVUnrRle$1pM7$9a_Y7)6CGdJf]/#LA"Kf#3oUH/piE$'4*h1i%c91'TkBi9aEi\[!56eSZ_2l_6hn#?Z_E=*V&WL8)ZF`Dr0uE+H69asuE^^%%=711[OlEPd3=M83jd'6?iSlumQ-F8hnS[;f-s\+E%YZ2$#QkdSln%n]0Ai=f5E""kq")LI$6socR<9!\Zo5+W1GH'0?"%^UaXJ1t<'F&q/"nOl]L?m>1bh[j&Y)Gec/cMOj[2K\*kPj,s%.((Feg8CYP']'pJ,.8#,k<`>HfYcGGjEA'j":A^-qfBS(]KR;\^d#=Jb3]HRE82$2ZhXf/fsae?qr(e)D-)m63_MTPYoj"6_N@=O%D0V!BiPcLKHV5JLmt@scJbb#`*)E"@66jPeKKs(,Uri%%SK>0U&4LMM]-=n5E[g]M`RdXLbYN-&YksQd(+X?^K33g0;)2f9U$pGc%P4H4V3"5d7f%[Bpi=<V8*VX)8SsL#0T88H-STUL"Q9%'_posZ^![mtt<nCBREj^8Bb_O5C]9UV&CZFlRdOYb?H@E.lV"df:r3^Zl%0I;:%ZdEWG'Z$2.d0LH^?I>+hhU3SOmK6II'K*EJY]gda&V7'hYXXbL&Ld8kOu8.30EE#A@X9hg,#[hV0fVDoM"[]obkMuN+%.;)%&>*kHcSIf(+b_9d%s%0`K-c"2M6OJL"1aV-h%=)sN]R'98Bq=OF+Dc#Ac]DgLHFM!F!R:_n*%+sFek7LN-RR35[kE`Hoj:3UWN>3%P7sr+'E3q%ki>W4*b=Pt=dB52V0=2s*I2&]KQ\ScJ<UI^lQA)91pAAnhibC"fX.t`GWSK%<Vr,Hmf)n0-'J1taC2[EfcFN!J22-F%Y5:8+QFR6#jUqJSpI'c!N@;:7*\uUQ1#2b1jUR)7&;etIfH=+e4(4mF=5!\oh?RT=MI7iQ)K1Dr_umY&;14;hX;[8;)&aSLYI42B%/JoR5&q>RbqX\JB:9S;]W(oEo\i1MC6nAJpG62I70hfMPC&TMoGT1*+0mDZG<\q10KEAupeM/I?7,cpS:]`61&S*dnqYOrW:)sUY%_+\*W9N2SZh2#2-&:Lb2$s#9jJq@<6,'iXL9ng'Ic7T_^TaXsV5lDB/KC;0"qOn1");(<b[01L?R=P;?I3lqM8I_Ci\B]W=P/\s\%Ce-rfKTNro+;SGb1OMre:_n6cOVI#@*32=EXI?0Y-D'ZCX!P0p\0h&INZ)"OJI!^3?lT=.4S`M.=\b$#+jb^Ql3SV9/!j.,ljBHI%8Nq]=/<ga-S&>F:9IALkc<pU/?e):\M15%(]b#sI,c"bA47gb6c'#[TFT4ciP>,(4&=sf"eZM`Zs-uuT]YsdmWib)A4Q<7baE<%A%Jp[XAM5cNA:U1sE>8FN3&+6#3U=i/cI=mG5^-"Z%)rjp(ETQd@P-@_*lnamo*kAgB[b<pDp-"-?!ts?U>R!f%&G9BN_eIFei0]<E%UVD5p/G."U8Doc(Eo9,H\JYDQ`paAcc#:T)!6ZQa8`Di9-4!1sAKJ'\jGpMJ&[_7q=>+Zu%qL`%ma_d$fQsd&\]tf/P$hQDork^+%fa)p?[B4EXN_[S1`THu>A6cu-#l_(K?Yt1IH97:i3P^c6dN%IjR-B%&7XGa"[6V/H=1Ze0XF\oChkJ-'NZ/B/b-<"JK5a.<LO*oQ%O\+Ys-'%+9"1Mtbb$d\R%)Ut4]l6(9BA9"&ikTPYTC70!aA$9GgHX<m+'(]$\02pa'P`XpnMHBGRRE]f6otiK7,#806CQ`(Qp6$k%aM#-^VYA9?Zsp9M3.`]?.`d)0]cWsPkP9_rb_NMqiN7C7O`_VqaU,/Y:-g:N+p&^\H^78rg_ADoLKgEd@fGaE,PjO=.RMNh!KJ*l%UM6)8_^3E)*2h:;05eu__`/$6LHI1A#A?-PU"AYDP<Jb88'GAb$9<PV@3Y-j(RQ8m]j8PDl.N$/K'J](iI!-CnFS/a$I=dT>lD\,%fggKZ)hhdj^3Um`gSo$LXa3413eaFF)3dG[99K2:d!$)(EfJ-'\jFoanU9'K^">K"&G6%eQ6Ecu\B&P[B4b#+!iEe4]8?mkoDi*Z%Ht7"rK]DClJ]&(\f\Sq:PD9RgJ"[3Op15=$h@?cY#DZibA`W]gMA+^k+=d[.ee1B/>5oWR^cE$!%s:%=:`-J,Bb`3DHVpknJNfBu%jPbGt4UN$Gq5CcPe9_s36/a(c;r24t_Qm9e>u[k8&%oG^FZ.oT4tLKTZ#Ikp>4OlfPU.DFJF/V--d##,e9Q'so&iEumJ2n*3iO/h%+f5!6D3t%VVM,3k1"[6&MtQN,lCtK3I+*/-?r*uc4RiquCr5\D7d!Sr4[qhK4Eo+$Gut8pAW*If$HU:.@\*OfSAi:W2dZ49'&"87%]XlX</5pD`OqiDWkEf^L8%ING.<="l".^kOS<FZDb.4893f)9?hFYpk;=9<B+_(9W$B`bT8"6e@&lMLKnojiuHI`)#`TSeUhM_Sg%\U.%tk-4Ls+G;Re!!o)NATko]RaR"A\EeG580f_U:EtX](]SZA'jY>NOMq1#a2@T8<P:8?HS7iK1n]ICff#d=aY+#/%ZtQ*!7DKJ%^u?q0$Q2&G45dZ\04q!ld^.9hnfXu3^^LGcAA8Sr37sW\XG4$./X;QS&2Wg0BLT]LnW9Q&FW_K-;k+J0KqKE`Zo3WZO;4)*hiEVp%jR8kt$dA*hM&1J+TqAs$8qSQpG.'=7P2D!E>p2SWOY0M(C,H:>X*opddcjqbBB,!qHUiV/$jY[iI-]mH+[.f>(QiE)*M;rR'&H"g%1AM.V_HlUC)&4+fBK6MJOC3O<MM9::26-AV-g#>'8CN'J*%K_8$FXq",f7$oSBOW0&_Icr&%LEV@Q+b_Fm2FIdaO%Ro8W'M7=%!,%ZB7kh,,FA?P7,T2p%TN/$[S]Oa+B>=6-TbQ"kt.:XJj]ueF-]+b[?&<>Uh7+$;HYa?kkJNYt5B/2,A8D=;08U(&S.ole.476uU,0%LD1Am#/_MKb80K>C4oF%+R&;YPm)O7U2WT=97WWK;(oS-`!3J`l)gJU,1TYMYPr>Y_eP8YfRDR,+4HM;]"ghKgVd"n2R;%<V"@m^%'hS@1AMp,=ZBUl%(%H*!Fp$g8D"J>0q!OSRcW2JnK7p?KO*?u.0;9$52YR>$57rs+lQN:2(5<CQ(tA5'`;X`c@c<PQTjeFjk5W9*%/`PfHf9VfT,Z-oLG`N\:NWI0<&2WEQVNpn7rL+0:M(ACFY+AkJb#^F4/%oiCVZ^D$@5r_c7qMV`d3k8_/%(6Z1(8>%kZWhAs/=So%j+ZDMf#e`HK8m8o*4"ZgO?8W[M8d!Bn*:l1A3Qsc>iAMfqr(fR4HH?!0-KX6]_r^7ZZ29RNp(ZR1a/Kha[*Hg3GCEWoV/qq9hh?e%$D5d/."L>"WQ<V7&ld*gac_!4.9Fp;D1`+Rd.]g<-Lj5E+.aYPhJ-%Q9kaO7%M4N1));.O7MahQp].:c\K`(B"8^[:?jA:AJV(%G%g9/6=CbFY`<PcDX+o,8UP:Y8;6!A7LfG**7=t<212'T\AFkdSh7?'P^;3l,bmNrZFN2BRoJP1C`g)jOhg7'7]4G<57"<;S-63'q(%T<Slt:k=pbX'Xa+"uQ^K8B;K<!bc:F83lh?:22NjnAo/>J#dqf[6&,5DtFBa&'G)oCh'qYA#gIU"rh&+JM:m_,_0#W5i=N<QuDHk%o3M6-WN(DI;D5iDn=4Q_LY#2L;Q48nL/u'9l^(<'R9-Kse.6P;-Lf;m@s*7gY2'!6qNIDac]'sJ0)Wj3A/bVWIcBV%]`%Ju]+W#Q%`7BLOUO*VsFn@D3-+5Q-j"&rg`0I4#Qe^t0hl\'RbAZU&%0+]o6@O)jDg6d3$$Q"`lW_DHh=?JRhQC)_Om`7[rP9"Al%(eLDB!]r%=&+*NKmIY!_KC)"X16iaqqqX%S1`^]YK>B@Gh7)A:d0%`hnk!5]X@S-V9OePIC4L]FS!+ohXHlGCqJ_/.WNW^+R.r>?%"Bjnb23r%qb6o:pYbF?WaT6g[l+.4PEt1>IJ-^Whlt`2mA&RG,YNJ"f^&N[r30gnN&@1$lB[sVS=XZarr6VSnQ:S,25&N%i,@/Bic9'eWKZr^%h>Y@Sr$G=H<4Cu?mE[/hjJ%2A?Z`JY\=DiHdqusBjmF'CBqcd0PPR?"X)1D+CJ'rZgG@TW:ik<th7Bk:`/ej+J_!U]Wl0DekL3N!%=]&K`UAPJ4e\D#[rCc=']((+GbFP+eh7J+0eq^HAou:e5e$"26rVH<8Hs5V/o09ZnB<7HWrDMt\:^DZeftEJGSWE4h&'t:Lh$Z8^%q+PQe\;In=na5N*CZU#Zs6XmRd8&3[H^"*_pFNP#X$abEFQ"GT$1C*I:EA&K<6W;PO2lH5LK*UX'(E*$@S4_:<*+c[BZY:C=7f4:%lhRk3o<OeXQ[`eKahrh)mOWI;lQr0pk/6;A/mbI8BA_OIZ`3[?</^MLR]dIp)t1;ehgF[D>OCJ2S!2]W^<ZKEO7d&YqKcHF.fSm$%^%/$onCopFkL0&\^Uj6sX4LRuk-"V4h[VUEr+=u^eB_rK=i$k/h#Anb$b\^om.G;cDDUg\DjG23pZqLuoB3=PfA8`Aot``acX6\:%qfg3QK=eVD9+Sr--V;JQ%IPAg92GO9W-S[3ANg4r3t>>1X^-.\qO_,2OnS1/g8\61#eN/DAZ$aPIm,=!NM'(1P\p#Pa1Ah#*4NNL%c)nTpcfX;..t3!-NMW28Y#F/p7jO`,UqWrcjj!Jre+LZ?9?j<u=E1aNo`"Sco8B6d&'#[!%fZI)/uNPQT5V4i?_>)-Vql5s4hE`S%j5MG-<Q*X_ZaWfUlDfkRkM(2A3%JfHDerS8H.m&e\pEsBAS=#[h1"ags6OR8Mc#GDs';B:+7tn2TIh/82[T7"m;;^hr2\`1]B8B_%S=dLmr8$rTT<7R&bK6(dPHTB,eb*SJb11:b4uL_l$;[j<O6g^VpHH3FH^Cb]e8mG=es(YHo<2deMRVSd(Mc)(qGf0)NS!qEG4Rp^%Gj^\bim)r3m/+CZei!09Dr^#UPmP.<>g`kCKBk0SCED8XqUHDD_5gYl"8^a?h_uMPi$EYjkF/j4m,4o`o&+A?#G6#@Hi(e*$F;nQ%IeAR^W,$h8p[(%@]nkpY36e'JD6rh`rj4h5f<sV(f::`Un%>a35ASk@D6VXG7s$E-]BV>iX]H@(3j=pYUA4H"XjYtUlDT!)mW1M(%'gHAF09^FZ^%4h*p==TJet&]4lQH&@T@s[ancnI:X6B3ImZ%"V?G1XOh@'@+mK.:JqWI?kXh>TRs6+l5gYfhDpu'['j!fBPrKgm/%.&YD&\+X0Xk5P6:msOrjH&dh*J)nOshtPIR]Q2u/f.Oddk>!$J^\d@nCgJ4@MdZLT26S[i^=k?89rQ6fXn]^i2Z#-kRbMemrVFJ&%\c4<Hp".eWIacg`pHnbrlhmb<5+_Q%pF'os[b8i'cY$L!)dRQ`&[n1;ipuRYh.0=sIqefOiX^,VTm!hPHnVca4a6F'i_;(5XgW;M%HJ;f!]mf(X*thZLhcX9Y+LJ]9-VT0jTbW_llU&tUpsfHDBhJt<T)#tS62p!mQ#]%"<1X!4B0l+NMbi1)Tt+TY+`$S^NL0:VRs!))%F+3iZo&$XcqY@TZ^>)2C+'oO$3dJEgdrgAFd/=S6/Dp6;f?Z%ll4,+XJ$-K^ds(O.^A[PjYJ,:$\8q$5F4Y<bEUJGa?[i%/_u'2c%^]2'0DLR*5l0SD%7u-7;f5A7qlCC!_h7S78rlb1o.s-/N0f]6e(8hr,kGH+<a4/@`XLGrmrD2mrGjjcZk)Z_7(7)i'0:oq)m?oPZ%f0neUo9]ISfCf',YJ8a3IK#;lr3JUNpYP]rDgca!r71Tphd/S4G3nS.KO/!bCHhX]$WfQBmJH"_0R#1JoB4/t^\Gd-.mNt-NL/O-%J%T)oJ)S<0[I=,6s81Bb^\r:mYI;4>if+b8c0!:K>grJ?SbY4!0)tmXTB[f9^]*CdkHFgXVmeSD5Q%IOmsV5,pBG2M=)Wb92Qm)G%e+8p?q<iQW4m-bVFlKe\0'ma1lV_Nk(QGK?`m.j4/%bQJg##u!>0h5brhJLTjY[nF*Ou^I)1+/A]d@:5!&!jcgI<C]e<O\B_\<5u%FfJLN^-86aEC=T9fAf:U=FGJbicF\K\]\SY](P</0?Ad4[pJ^SQIO^'/rs>.b_*\1o]aQii3!q1#7$ss(er>c?[gQ7HCrp*Dni/X%s3j\m+)Jj9mCV!2?)G*s\WcY:O!(nrn81Fq0lfpXgR,l5nsqjDobtB5`)Y[)441i3\`Z'CcJ-G7L"lTS=c4@6g<EtG:cdPg4[!*1%=SqWZ.s+FB).Ys\Hg2)lhZ*5r5@4:L^\0SCj/*c:m08sGg[P&0GM+p6mp8)0n(`WSO7@ku`0Ct-^\[WojpsE-^[^5L)T?%YjRST`%OSrKHIe8UF?LJ,dfB62L?ei>("tLV(^NassEU)-4DI0&Eohu.`(Z&uA_M>&Clut7^([goSf)<Ad0>:E9VF?QN9*r(G:1&DkDSH@]%M`&)Z;<-:j1nD7!l)",M\GamOg]-7@GB24=<P%q.RRDU0a0BloY09Wm'uua0qHD\IQM!JcWG#"S9e&cE&cLr3s3/[Ls%YB,c/5_3%.De/JR]rrCo?j=iO$R)tmb'KaDNfdF$.K3&Bidc(rmM?EZk7Z+>ME%Gopm[K'p@Ied\9LM=/,9Vk%%!4Y?nkbo8OR#T3E#FJE]am%T=]F::GkN7gPt`$U,K;YS(9INrfF^ZiXRJ?FRQ6CWj%o/e$hNs-BRcR8+#=#9u$^QTg.IAGLXf3HkFo6]P7(u)smKtMa%9Z3s1'q%MT*cJVtg+JD$G(?_9I`G?i9o/4YP8"k[(dq<\pRqBZ=Ca57T_^DQs&:o+t_YqPGAprmu[np@??`K>P=qd;<N>eB.OOLg8gc^\5qF%%rScm;d99<p*m6Grg1DaIX(7L[i]Deon=2Gk7<8(A*I%7/(a;h];kaU'?@F44Fd'BbnSLU#9VJ$J"d1oJ+pdONU/&S<JGu!r'fL4%bt@iak:U"gq8:DM2D9CM[I$gIWcu0qO"O^cl'(R80J/>2*JEPAD`@YZqJ"Ep:Tem;'R+kNqlT__r)8lLO&\2^SGA=?m%a10?b<^S%I-T90b)\c$Eb_.Or8Qsbs0`*1GakY:8"Jqj(Q73M.g#b$?^_7hp+QBp$=T^M$K9b1K*^GtTL-/9iJ$lqM[8<"'g\\Y>89G.<YS4+%=WtHMgp[e^#a[2d(AcT^Lk%R(,%-[<&[\Ol.3ZA!8?Diho.#Fbn]+H)lZ):LV<?]\`.n65V)S4X^S[1/:J^r\!tiClok3Zb:>qfW%.6cpR'WiN]"QqE(;#Kqa`SZ>XLS0).]gk>Cg)_?T(?I3Anq^ZHLNY[@:q3EpI3LT'G8j=#(qfDU;7nqqrU"DX"L?7^:%tM4A)i4)%Y,P8--FI"Ij.Q2>jnWOd49gDK"SL!j(SAXXl^<N$^PlQY0Y`3KI<>;,BR'3eZh9F*#o&H"%D'@Df4d3gi>8Hf^g6mrD;9Ksc\`im%nsq9H6+mAr,%qVd4\!u-RE)^-pAH"hHF_G,M=R!f]W4icE=KaF:YgKu'oeOT:R=:k)#e)]DMcmiY5-d9S^si3E^.&+mQPbr,hp=%%Q7NK$Yd%OJbjA3(a3jA%C\RO(nZ(<qmo%Hu+.dhLOC<!B7.L-&040&M2I=/pg+5/Uqgo%>VE?17Ch"\)?[R1YaZTQ\+.Q3+)3H!_%`UW3SlB@4KF=R5\4T:^T*SpBC8*%,SOPE:X=FK4G3"a#_nQu.g;jda&og%-Fc'<OGDtCI,BZ;RG4!4&4-K]bt`U!/T\a6`L<HtZX%Q:U=fA:!bQ^F[p<B\<Bh:=AX>CR@Z<FrL(uf@VAe=$?$2_6`jOh.Mf96.>h&=7)bYQhtH;bs(p]eZ\IMR,ZZhWblol?lrYO67W#G%Y$@Ab?c=\gBPR-llC)g)IeBs\dslNtl[8Z-GAH_%(AAVP4^060(S7"3[eQB:po[tLMdGkNk#H9X0A"nd]C'*/Z2KC(*rkds6Q=83%_s<pX]YI0(=(=+VpPi;I\pc]9oBn-d9j_2?n]pYHGMCZ\-`3S`ore;A96agC=%L&uHi=,]m_dtDNU\ZG?e"1Dq4p:OlGe084oNX-%^OGuR^#nI*Vq,(52!REaa.ES&:di4tc'O`k.-s=T*qM>jnnJUE+'oVes)@*:LXV#Reg3OsS)E0_)uD=rhn10+g1O"&PLT%;4T;0j%=.6ht^]4*%eN,j`)hRS-LUZ^Ab#Ou`[+3Q^['[.#m;;Mq(K7NF=)aY(_4.ScbA"\6ID,UQ8(^_L`(0/Pf5$/5cAfG$D+d_!LbAWB%s(N"Ha,>*>2@V1?NDk&edk<q""BSsC8kqqC/=Z[1]3m`t2]nVt^]!Scn"+jp>"o[EL(BifbdK+2o)8b4fD4t:?9bo%Dr#=+m+-eB%m8h-8$Pt_BHhSW\oL#aB5'uDj=5Q-MHgfkd+.dNYqZ"5,^]%NiKCe3_;q_SX6LTACmUE5DE0h&Y+.Tt4fsMb0+5QkWpun49+5D5<%n&'2]o[-le5Ibe+nD&T[I^[dTrbukPB)ZVI]fir+pGY:j./`GeI(6H[pX0#2qe>rjm;qkuS6PR8iACEX-6[#nE[u!,n"#pOGkgL[%>N(S/a$2N0ruC%WXhuN9T+>:0Pjb48Mjn0Xd_Wsdjg+hEZ`l$>b^TGo5s1Fs_;\X,qg$tscd^C`9b:MP\5p(4Y!MY?Xb;ZW>E]M^%nlX'98M3s#rjdKGE_!nL(e@U31IB=d,H?8B0i@-a[0K*h'2W)bOu+([8mk4.QWbjT7b"5gIRL&"M:D`;g?IaE6=8W@qo8p66M"*;%T(NXmTk=P>M3ZILkti.-FG%f3St;-$NSID@X(9)P5m2m`["/9X]FOR:^o3&OM:dN)gHi8["hh-:NE/N>5bN2,2'<@'R&08Lag)MP%@V-M`9cSAg&UcAZ/>=aSpf^Si+Q]T4)g+J8@<OOIV1Fk*OVB,\']Vlqr=&Ef#G'n\M@>VNdeX*Nk)e9mAsF%rN_%5(@qKspa$Q6E%oWu"A]PS)aR1:?/Tu)H!?3A5F-)@@[p.?aZ3Y2ZO#\0o5_S!&V2pnm^%PAN:FMUi(.>JhE__CZae&a/rXt%hMfXYXN*LZ_Xa!?ML%C$5pO/^u<V+Z,7]A7^J*72:s)@YG!@6/@7l%jQp>cc,qtrUhD]=UtU\/d"0AEMR5YLPOfoG^L3R,>*:h.][PcMoJK>Ae8ZR4cG'>%qgh^Tb@i=c<^V7L>BpW\1E9t6.U/d-lYD2/qN:-OV]\_L7CFGOUQ1?^oL@P.&6TT`A5JHQZH1[f`/9o&\C-<q'$:+c955tu0aL@(%_ccRLC:Fb+8B,`qYt$85,I+sqLft+@"m1#(%4ts=%PSo'5oH&p^(P!n#f;'Lm@t#\nY]ZK9-]j=ccQ5#*C:^G%"3Xl]JL6K1"370%MnUD_;,l5iA^QFTD@lXf&7V%Uf33`f$Q]d#gl!X!r\+uL#?FBDJ0DFY@6!cgL^!'2A.Xqnn/,7?#dK%J"=:Q!;4@?Q=K]YJ7WM#t%*)GdW1qA^s"DW3o+WS9C1J^k9-6kd58:k%][?ZTAbgK*uBT";YZSGNSq^>(e%U]`Cc+U#2G+>L`,`-EiU'b-pXG=nq9+hU1^k>c9%KMPPj0ee3\-;E#,[9i9N)(8a54S034)8q/\`k\n<lK$-E'(Uu4p5gU4T=I]/7C/1))\7hlCF'R.K"\ah035/P'6iNWJLQWK">`Xc%5jJ4R'Biq@_SHfLG:\#N$&k?WX!3*%TTY=eAOkg[TAp6KOXA8iIY>?<&B8&+qg][okQkp#@TaiN/AAW]19hda^'\$O89$$M]2c^H%:LWO5TJe@*d6N;<362M#+Sdh<id*a$?C=pRHC_SS"pdd^J0[EL)<`V5:3q`[N(D8M79>#<N1!mRJU(VP(3gmd(,[8<_R'P"2I?%o%pRt;mOhp%Da]'K-%Fc[s5!-.H3-R)M)!F"7CEu6#g12^Ue43>"Bj#^Oe"Y7-L`L(u<I,"qa?g+S/Zi<J1BY`5SL(%d?tB10=i\`$%RW?ia.$KS*PT)(6klPE>]X'.`(DmiA_Ji"XmMI,3>N%-5/f@T>Lq&i91P?L#6lcq<R@"CJV1@-t"pK+RWm2ScZ=L+"2L7pC>2`V#%+tG\>+PYct.8Q,g%p>PrX'-%39aM-V3cS=#ZRf9,If&<2Di\:83Y;T"-&X)!PZ.h+X%dpuQ6Naq.pZU:LerMmYng$7GGZXK5^S;[%4&MD$,nN(63p>Y7dh6@i1@3LkO3S.Zcbr7d.h&tj():!eatrC^a:(&O6=,dj2H+/u8nBn(B5547JO<,_F<ja/64dmb8rZ!7">Boi%LZ,Q/NM8cR]VDD+(9,i(6=o-tk/9..*X>?^oL&2N6s/D@jai6h69:<%PXsu]_Aq$,.%B&86t,Vf:^4Sc6d*,10.V=J=cX^uF_ba&%%["[7m7YY@Uf`%,M$H1:<Z`7hqT*If0U"e-d*OgV;lg&gR1]eI,.P@QOZJCq]C8`hK@L1,I+6L4K[*,PU!qDWKb0YVGod)@a_peb%5)Pu2/;g@gd^7@&\s/WCV6=@^cY=@:CLUo`("1PkGFVJKhq@$P8AK=(:J=gd/`sQb@V-s!A\oZ]5SH^$5YQbLP!o=YTJ5_WkTQZV%\:?&g6(q^!fnou&*Ja]g9r8tH*cVfE1UV4#1M(RFd:ImKp&3*58',ShS9m-uk@XZ07jd:d2X&tV?Ba3dKU[.6TQSD-7Kh<,+`sN5%J^Uc8AcRt],SS<<1N3^HndFVV=]2WD!maCRMp+=>B4s^\-[AST@ceIG"^"*i,n:)H^?^QVISha8M0/nn4MhX\_(Z-jZ@d_P'pStI%#Z`i=U047sCMFSQ+p(+J,#Ss`G9i3[3M+S6Bi.nUo%FeV`CV`q#IGXT,5,ga3j9GYX3p22M_V/!UBbt-XjnnQ(4;E#4F';I+,Nqs%f>^"c">_[!d'd?YTl)(_'VI-5*=&];*3?t=O2g[HQ':T(,fs#]OiZ$.@>^d.0cWq@)3>&M]E2(WN6'F4#2k/,-PjO703Y`f!YoNe%=Eh'FN+/<JkgO'8ERO'qJ93hkEt?*39.M?G']\srMSu_eFZ>+m+*I'<#H8dsN8V="E6nVV;`LJU@SP%_\F5BIBQdRIg<UE\0of1j%_dNt80+d,&L9]<Gd=eLf,to<o@7OuJfO;[:CqYX-</d@pFM\_d#\UFSjTfr368F'=Eil._=KL:O?QrZMPBZ)J3]`kZ)ej@jZ"&Lg%)"J^(4r2]>6cG!I0^4&=lRu@s1c'f\)`1e-91FM(!j_MG.i(m>HmCT[/?u)Y/;gWe+^sT#Y`#YD%'FE>OPdiQ2D^#&U:1CQ=u=p&%af#Xa9>e%[F4AP+K[)uL/@l6I2F(qXqAoDV91Xu_!LJFVkS@</Let'"P4j\9N?cQRLH>b,]`#*c&s^=IWMdlIkUj]g/YI:JIRuHa%Kd%@gA\f6Sb2-0$ChlS_F9"$&'h_'X1@icm85">*/'<,]"Z1ll6GRAQ"aduj)iCJZp%9N,`Y(ft7H0KK+;Jq+%o?fPZQ1=I#nTs;%,*V,>l4`)`RYD+NJJ`uY&d$9T7:JX)Jd2ZC)93JLD/D2Xd=F;5,*bE%)6*')U*].q+o=2P(*,>-8dQ4I0gmP[NW#"a<egPcj5/FK%6o`LU,0j:a?T]_b0kj-q)OTeHD&coYRJOX.G>,!0a>09/:mSb*#q(UffX4X'EZW)A$3:<A8*$V@isD9=-<G?C-n].?9T?.NaU,bg%ik1'i#6RX"Qip"ZWA:p:daqZEbeq4GIH7B*+n*Lr"#K::!eWT)i#iWk+G\!n-;8)@?Pp`d<Wk_j^aOq@V+2dde%SkAZ!#"+&j,CA%GX?%;P:MsiE#-oS(d3_fJ0K;E/8f(7W#&s98c[M3/^*(o"X0lSBU3ArM5+1(R!W#'St40s(Cbs6Tn>sGk>GI#O6\%(),-8,7!?sK%(sn)c9OAuF-H=.*Yg^d8Y:@pAp2LK4QUS!7QUT%C(>u48>@i*3%0e,BAU1S_-4FC&6nC8,B]Sf'Z+_`aM#o_A[Ck.#8jI2;>XHMA%_%r#59M*f;#IP$Mj_<m">%d6MM!VK!Q7^QpPq`s\FP).8LY-_u3#/ljSX:P@70S@=ibH]^N4E.1#5)*m"bQk"VME]1Le@1+"sOH+%>7*2J,:tPN/(=n[W'd'l0%Hp@lB4RrW,!9=&P-QU;@>f'6mAs4,D^4_<]?2Re'IQ;c:!j]cNt(H#!\,F!.Pdi/QF;PCTmtTj\F#Q%[L,K\'i>nQn&0#VP=Nl>$rO'#n=@!!lu9+C(pdD+.^\?#*=\%QE#t"R[9%ncIMJm0?rXtNi-)2\+OM>P7l1L%BWr4cB5r(,0e;i5%:fep[=L$oF>=#]s\u8r-'mS;s6Q,fb&TIaeI"XTik_H&kjqOj)n7!lePqibEU5erZiF,m.=rj3&4[iJ#O.?Hqh-9\956.Ln!K`V[%?"?)S!33SueIOP]=lCql*%?c(d&YBr`J1b8_:s1[B:264Y_f2ueWoQ:M!Q^a-lVIc!(1alPuCcfp8iouZ6'tOAJ*HHTk?$pUct+K%nm4q?ICJYO8[EU=^d/JRD=No)YJ$NM&4Q`K8LG&hbf4.DK1A2a.5)WO&>rPj&jit5Cq&(MAi6&11^T^o`sB(\L`()fa)E:#4Z9U2%;$$%/4X4("CM_-l5H<&1JY3CS-:3uL+YrCdkTQ\*L-YLt'Z/kI6kUYE(3kc"X>H=KV>M$^ABUdSINlSD<A<XZW=_AWJ8iZ&cFMtg%g9@'MOsOL]D&ACnCnNL+oM"VMB1$n+^aZ8dD@6aO0;OE<_a%M[dGI;^?\g@<Ndt8/`M74/U-Fd:/7r+O7d1m*(F<NV6N%q*W`!IN%d(!fVb"\0;f9>KGAiOV[75N?3eDW?kg-g:d.GF!%=O@-Mlp`s0)HDWj;Y6fD[7!_/BT7@^#*A&Q)b80fKZLHfkf#b1KPZM(W5>up%r+HP$=>W4Aci%C,&u%T8pZc9l1cH!0H7#^p9?s]_=`k:l"9MF2Mi8N;<!G6Q0l6Jt8C37$O!\4>6jm*_E?`VXe@9.(!0Q\?eT>3\%ba&Qpm^oqpT:8fU<(*WnFA.pbLf6$+$,j9WZ/PY3&=]a_d_)9Dl:Se<O3DHC=7!X/)f:6p^lf\g;XYqI\i5\^VF_"h@+R1J'34;<%9*=jq9Ua(e0nV7ce6LNTcNjQmZEbW=[9\\rB!=ao)6e$4>m8tDW6&V9+""Bn#o!S:4]Q(o.iYb&o_94saPoK%.##7<FQ=7NZRGaF%6K0.J8.bq(3li6/M2L(#R7A;ZJ7to<[ke,L6$"o_8!\VBfbq!_jOH.F5\b[9d-.&k6jf'@.$2r91^@P""GWKSj/]4^haZU[R+$aa%j!0]pY/uF^Zk),0M"2F95k^b=ZjR-QFQAS6]OtjWOmXV:$hLI+0a4i<o?\RkVqPAX6e!aRY6m!r'P<:b[(H`r3+l=1FVoAU[[hB1%1mGq@f[r!U:0g04)G<X3.Bc8SeuA8:FVStn6H9K7l5*Vm<ef5J8k_=./Sh1k)9H.WX:-6"@;5Mio*Qq*0`j64bna%[)l+n8e2Q/)%"m_t\F4-dlM./3YKI#MG]E-DOkSA*^Lu`$r(2:'_IHgUOLj+U=Uf>N^_q^<k-6XHO5]W-A@Rr#8Ae\>X@\'jN]F6?LAAr[nC'Ac&%qVK3^.j.G/BQT!D3T#Mo;i@OkMC<]I1bfn@dZ2s:Y[e"3eI8Kfg)34]<Vl'^WuVDe^^)($5HDfR.Z1$(he[V+6;Kl"OZ;XgGX>c3%71<!^Mh$BXJU$4l_ubOgW3CJ0'*/lL_NEfYAh"keL;"oO/ZQjRgb^]Rc0u9jm'JtO(""DSGVI(U*D=d0;q#`c[42fB&ljgcT^7IS%olE6h1X[O8Y@JpZf\in%aB0BNB@/Nb%e['I(G0BP2AL%DW5E^boIC9X6tXVp)/$64N<I^\YTTC2'u?jXOraA0mT,F'=Yij+O*2P2%6*VO%%YFtGUImpI*:0ED^C3LaP+U0@MM-<`.]g+J$B^_A4NbZ.;.G_jOOR))d*KQSjH713Z!dJhbQ2l`IiH$dB1_=ACX?JSr'8$;%cm'P,cBo%N&X;NNj;9kG)/*9!D"Ngh0*KIaK5Bi<!(@M;*ctM21+FH,=Z)7-hShLP=#6l\ig!"uH8Z:.QYAk&9W%]`-a*WfB*D\l%V00(-ZJ(["B1k'0Pi2pY(%Ec1SfOM*PQ(7MQ&KihbikjCSU1PFJ7pB8=$O$a1i[*e[TcU]/DH$b/Pq>k?R#"il'D^CH)Ta-1s=AP%FAb@G6'dO/;iW3M!b;PV35fGmkH0u%?'Z$kL4T_6Qlh2iokWb:3:m<X7OZFk]$niBY:@tmK+ILbb_"D`c;T-4qF=N++@k_$F#JfG%qnT58[o%f:<=7l*(_J%?A4RK`.EG'6O_Ong>6tR1UlO_ff9^_s6%mXJVNqF0n0SIH4%mY^0mi2^V1&Qh+p%.gh!*q1=-`!1QuS8?%oK//Nj<Ah`s#SpAJ6?34`GTQq+l*Q-!2Mo\D!K4bROZ@l.iRW*(0-'Hdnj"^@Si-uM@(C'cE*B;Y7[DKoHPm;GaVhJc)(u1MCkdP%7BuqM/PGD)2oiVC7#0c-MeGqB>j/eZYhnB1K>qr`MQemN:okZA6o>i3F[T!Yh@,R`%RqtgH*=O*be`d6p!$=eXl:2qc6cW7:(c+7%>1JnfB!^#\'7eOd4*72@d3BHhJ!n/>"347bUa7Z^F%UOd@@@t>!bTjX&6RU"B1&a6j$T=JL`LNlXMa'J82Lt$9+At^<b)O>M$B^C%]3CZHU)D@QGoh+9QiO?_*Jk[cp17cK?BcaLafP6U*YActJV/9FUsfGNKTW)o9XMkjLpDhQ?qKl[XHR0L\BMmtNd0@l%\5J!Z@9+(%ZoFT:?%C1*o%JD@XBe_blq'$qBQGW<OT&et2`;,H+\F?1$##-C@E4N?3#_-kmC>aJ]7*kZ&IJ4tls;Wk'D`=n2HZ**jTZnH]eH,d%^C\%QYUR%RLm?,=<45J0,3DoH]9=Fh&7sN0?>:*l9;*e)<?FTdW/P66^s:aeP;01?mRO6=0Tq\5i>#A*Bb)A$#E\#p9a*iGW/]h4%5GU(V]u5NK3Y4!_GCUY3VT>ToRT\309"6AipasG,BX%5IKF4nP8iMhmp[%*k$DqRb7$D#96i,ZBU+.[Pba>KhgZKc;BE\R`&7ump%#UM1kR2A2`]*e->F$'[%/r?cCd2GmG^%LFn#jRFL,BP*d#;ZL<V5n!.bID"Ci;&@10m?%2Q3U*V.Y++2@g>fh*bJnRXf,Gkr4HNI%2Kh\4lHC[0p5kF$!.kn7Ju(2\*-;2.<'q3t,a/RDPnTp47Md?!3*ZCt&0-mkSaN4aA&LJZY\^\[N;9mqRJ]HYDs/U?4'#&#(Y45I%%L)):FV0MUq&19i/EX>1dPDLO1J7>d9Aa'/ANLK\Js'N_$p,e^#\f99+dM'm;QfCu]T9WF8Y^oEV-I*H(4rbpoDX.N_++?'!q[q4%(=:XpEc.(7;'H&s4=KiVG*-/ag[O#O1[^AY3jE5t(7j#e#(V*VQON$Kl*PQ7+X#59UaTb!94Sr#Y[u7Dlp1%ll":c2='RO0-L#'f%#RP)h$S0(F)d/j7Q,PH#i[WkE%;;J,:X-^P&hKHEB7j_*&7d@sk_qO$*76i'AIt4u-5)[GUJ_?&!#cH:kt>P:eDu2/]OtgVOm[IN%NiqG-1B8$OU3`JA'TjUmo:AOl1bXd-Fk!TMoO`NkM^-Vc*^In;-,]j.'&l/bZn.:[">Bt4`HI?n,_QNK5I)"L;4g/QZkte2mo_#P%;&TF!A@NV\`21:8IKpuIQ+_qfCV"*HYd4#-ZLb;3oWVoq@<qLL]^rA?o<@#lhN40!7[Z`Xm;.+@Ye9S34F5YcpTS6$Yd3l)ZM1RY%GZYh3/UM*P#nM*_/fKB'LC/olMK^.O`-R,"7f'P3[Y,]@/kT4(5j>FnF_!jDdBm0pgCkUO!%lAZldE+,/HDL`>S)V=P.0D%Boolh%P3GJ;]O?NIPrb!4d"p=J?QrXpgZOUH;)cP/\k%VIi=OfM0HcrWi3P)(,s#Uq/]>aY8iUs6oECFd(;%3[&-n,q1<V%]A1'YYY-\j"%6a,Y.'5IS0HZs44N!AV;kY%6,KpZ$0QqINC\eDjfRi96g:l0/s.TE+XaIO^UDTBm*+s$6sCfmr-.3KoAq3Od"*)a/3_m>O[/@bQK%1a0/lkP,EAW$:Rh;S<>LVAFn,=U?)TS9lT]Q%6(S8n`gX/>K7B7RIT3%Z2\EARIt-NH+icV1A7`-e!bT;s=Q4WF=,u!$^5fCGf`/%JE<u]S#X@R&EI"0fcu>9l]GHc0p3!m)j0TKVujVK0=ttr#H,QCC[L>-Q4I_=GZ=kr+mC;S9GD82K[*"t5mkQ8-ie%KMeOe!@b`.q%m6(*l`KC!,5ap\3b'KId="rX0:5sC#2gAI^SjM8KM0O6tqAE7j`EMr^TKrr,>R!Fa,Dj-I_q9T68'kB8Sju!QK:bC24Yt[88F!'A%n#7K]dtn?0.7kbhC!Y-+,5onLMm1?QW<,t%j@mu+/$1!fd(`])Ak83jb;nBpBG\pOEVu><(]fIhaQfFp0j5'cH>iFkpc3WF8lPu8%!DoIE/0,B))_f,T.P/%$U@B'@//jX^&_dr/N')1^daY;Bh\;nu=_j'B-(iCZHWW-jn?jD?S%aTPhgVh>:&jS]T3fu)$c7]DQFWl7%Sd48\+l3QfV]"3;&V8.M@9F`U+c@uM;d$*WIM81X07=d1`?9or\FXhcDB4PBje`u"["NHN5h8Z9OUnXI=qUU6`ELW,JJsXLcHN"n%/u6I[.@oqo<3OGI#3%1!6k'.V;sBN\<"-?nP_H]G"/26M,@&c3b-X!ZA/%7=\&b"Y:L#ROj/<I9OB8@@S3fMW>8G7]fK+$A'T&I=%WK^JcN[%YKPXMT+qH4%fWAF9^B\0<nea$aZ;$!i.TYl<]Z/'@UZe1TXQ6rYc+>PLC8?pSKAl6UJg4MZ5fU'[EWNgd=6Won#+OXW(%+o"_3j\UHP?#]I&oagGDaUX\Edn[r*oF]`&GUQXtXe!R_eN@;"d!2H&\mYS9!6^@kAsO)!B-YN!$pq*RkfD'm?hffl`'2mB6Daj@%;5f9kO`BHU"-AhS%WeEl"!F+ZZ@eCf:]nd03gB-"OQMV++R'm[TeXubN0]sQ*d<ufk@#Vg=Rt-Y\tMA#E$U<hS3lrUB$nW0"Lhl)%@kc6OcnrX[J3QhQR'O#?IK2n@"!A%);`FWFFW_IRU=RT-/8EpmGsN@lUibiL.)kjD)ot3=(dY\<Nu&ac7miFAOg/PPj=_Y42b[u6%]R>X.Ye(?J`)A.ZBk/J,7OAL?;+URQSQVC4lHWN83fpr>fbm&N^Ju8EB3QG9]qJRd->*Ou-GdN5"^@ifG*^5a/K%GpR0M-UY[BjE%_`q(^4!M#m_2'pDoQ9J1)g]<UPX:&9-NtDecNG"Q_51+5D/756F9"T6's"0N*BE<`9iF>aQ4/mbT`m:#"hsF_d)kc2K*dB9!=LnZ%p35WV>KDd4M;h3^=C->4pJ$((#5#W'g:]-AGnqOQ!>(3t7-?W8]cN&/&nIV:.1DO=^q;F8iF!MC(:-P%nO%anJ<_e0apedO!7Fb!%Q?d)cbqt"^!3Lc*-/77lXMBMI]<E(;iXL#`T#C7JgXtc''\I%l?CM'YdUkj,e[6iZ2Jj51f^VgZ+[?)Ha@dQH8Z;B&U%UIuVEr*L%YQshDWm["G#3p&n1m?F>=Z6OO,*7>IgMc<cdYg^t&p6Mh9;gW/JSN8_V,.@9IN#e+607fVT[7mV:i1qX']A-@GWI(1.RitO<7^%V%!tR\C?nStoj8^/D/CTa&P3>F]Q"e90%j@Jq)P,0b,+gu#<3R2PA;qjFSV0h*)R<+;L^(tu-6WDB)f`7q#U3l@kTrup"iQNk"`SSm%5%8Sr&bo[q1AWF;SGa<dA']qKV6&)l[c;mgKk3;JP_<TnETpU[7FG(23V'2B"f6BcLON1j8-rZTM_;%"Bcj[s2%Y=q?-$V]juZ%`%-6o]^?b.(%_X'ff4YtS3G<RPp7)^#]gYVWXd"9o@<"g*PFEj*4l[X_$B=]RVV54U-Q9@;3W9KCf-'38?)3C?jO(Ld'4,Ojhg($C7%(SteDY*N0-/(Qs>jN>=BC=lP$:b[#*:14fF8Nhn1B_#h%*,p,F9A0mh0MmpPSr?8D.s_P.\<SNT#%NI$!9HtM>ll1#\q/L20?:c+%8:Nq#-PRD>]##BX+Ia)oK5d;H7^)?C4%B9]VT]rQ%!sVBHKjqCPP,#3_1Y9%kCF@_"^&pu\E"V2pOW)/PQj=-TOc%_1XRt1@*>sj%#2ALHbd9$a9S\H24*!ji*)GdW1hl*PUdbG/lk+^-W@2(#M0Rf->XTIIlafQM+eI7IU1=8kR3.bgU7VYV?Mp66&*/#Z!7f]S2`G12%=;8M)-pK=jJASn+!UA@2OI[p-_`4+MO:D+KYAZ;H87!2PkQ%?RDDlTK5ZtZn3cepa8=CQ`*ANS^BetbdZ"tZ\@74iL7((iSX*+:p%8edNbO]^Ks7'-Rp=25Y2%qa'fUFA&Poak<eaA,]Xi\].=H(t]Tplg`>ZNt[r1[S<_5bu;ll(DiN.ngF!7pW<+oS]9*<TMf*>IUM4%DNIq0,$)tXd@pucAf?W).$?E0*@+4D^u.ao)Hc7*(7(+/p9'!;#:O<f1C6a$5Kbk,ABTq7YS7jMkRfE&?q<TtbY1^`OZVjkGX?%;%PA*LTa((`m1ut^bMC/C!8g#af=A.e]Bg#jb3#4nb-,fkK+ga.sh<71"L$@e;5#"mY0Z8j6kNpoV#nQ&o?pr/i1SW9*2,@9V'5jr,%CYHb-GsSL,dQWW$3:=.@)Y4l+c;5cZ85A20=[FlX#MW%kN^oj+l$9(-82A/U$?3Ej%+4FqB(5%GhF1C[Z)dGg@W[4(?Xu"gdj3SV%fSM<T$ma#H@,r5$;P7>cN*jOP,d<Mi6E>ZIY7T,Y(dc_T&#4+iKnF8*-84QV"K1ZfdUSfC+W!`4^ls"fP!q712'[=5W$kaj)"Ch-%A)<>.&'V7DLs</OAkXSH+L7C921k'#$gNp=;^Q=3FfjcUgkl]8kpfe-_N*8G5K=Eu,>CZ&1jb\n830k;-k3@$DuhE*6*V-j3O7`)%HsjF1lMALqkO%I6elt\B*IZ3g^c#ZM.+>c0%;H,/8:cYo`_+41"'M0/#5N7(qQPi<qB><Pc:F(RL]`WVA>00fVXaaDUGFMp+AQNA%O)6(T<+HUe;/"dB:7UrpMG15BC<5)6p<t'kktDK@#>8?!b/JO86DmP;p^dfh9T0"'W>0Puj<mTL5NrgC"[hPk;b0#^0S4-*bWQK6%8D72n48PNd8/58cIRCX>S,-jOaJ;Qj(J&kFcM:5-;F,H:MNmrP&N2.$g_r>Fh`?cIKY'M3<r+Gm=FkU8OW5"WSe2qa?s0e&i><d5%rTT!"qpc<0I,>a:71UQ$l$<t<dL;p\.@M#M01?*k(n/+l+_M-\dGosql-:Xh*<o=X.=H!EK4;F5B"lQU/=F%YK,WCL;;8/=_(]I9%WAlSm+H&C%!EP.MMg;>GB\^1tH)$9QqS:h6\aC=!+\c`t2NC.>;p[Eab-O7UPd/@:%ku-).V,L%4VIl[KD+`7<<^;A9`_N_9=+W5%Au^N]V.YJH"2mN];S"LQaHP&'FL[\AP)^Pgj\9@M?Kqs2)'V*.MC$HQ=?ZGQX:73%l#0\m3U8sGPO;[R:JN,V$T:(hM("79=u4W[%$'s"l"=Q(XV+6_[ak<Z(GXG,-4&Tom7>k]:>B%]-TNafVK3XS4AEK#>Cfit+UcQeSB'6;K['-Q$k"'1"VfgM6EN_"CTd2GA_Zp2L%)kP^=.AB"X]OE-mO_&p,`OQ>lCLBOl?As_q&C13M%UP7t)L4imoYn?`W,\-Ir@:h_,[tUZfA!$FPp;c"21eZNUq2[/]Zm-$9-$P,%B^jjZ\r)6*3)COfbR>WBSXtQCidV<0ksnJegaIfu8R7*!mTC?p1D@Q6PS8AU!>*RM=!^PRb@8.]4#%,g9SjjJofY[l9$DSr6UsgD%6XQ!rK:2t<='lSPoP,%Of@23^SM]8FANbJirMPdrZtEkKOoES]V];_C0IB<9d8U%6(R$XSgu]#nH_/:J/8*LfCeA5SG-4G\kj[4g%oOS=`foaK<0Z/M0Z4l/!@%IX47$Fe=MeFDcNi_GM4Nan-eIS0QP=B8^DZsY`lU^B@TAp6KOX?3&3)&TOjosYr$9ZJYZ)>ZE`7D5I%de45*QU9pVGCg<qGc:nTn<S-/"i>gCj:ugaOEVu4JIuW$(l,GV9H!CBZ=B_amqp2,)aK-(9otW[e1/&<e-Sm^=tM&dNn@2f`tS;a%>$PZ2@*c?uo<E+p$S(kR9b9c@Rfus+(KN?,0-`ac0?m1,BM6s%;%H,$Mh^V"`K7P7h6!8\jk?S6Uq0frj\6RL8iujkEh!52Roh'i%CL_^G<!=jH5R3EiX/rTj>/?CDj?"6q@?4W$nuhQC>Ci;gEI<SHTu4-[]%I<1CR-c,!?ZDAVZI[I%NCY+e`+^Ar_?kP!Y`KQA0"6@%LsoaC?p&lD,'b[NrSV--V1`KN9'j3#8acj]`_d,<&O\00FOe;ZPZUWkYrgb]:[!_DBO5_DoYeVPoH70t9*[iDYitsBTR#q[UI',F%\N"^KXu37!M\Q&[0ZBRDq+0p90L`+*J#oB&/jie(cB"3Mj^?0R4(bd07[H^!r:TG*'cO[QE)e5.m"cYSF$--PdU^cW?Zl]+N-e*9%SHInJ#JLS?,*"\lW6_3`!*HHb[h'-6(*$[8[@B\GE?>D;c92bg8#@AqTk:ft!Rd7<1BqWmd8)5BN$1MmP'OjaPR]k!3bh*S;A;Ys%qdI$eP-cHWeBdZ<c:F.E(g,&l$q'H7GAgVp\J5g"2Zp&[E5\G1%eD+.)q%#(f-:V>1XuPI:J07O)tmd<Kgd_>M%=[9IH_TEHR!@#%WUg7(b5.$A!@<OUZ:0so(O69>Gt7"qTAp6KOX;r<&<@M2?%9@8`qC5L]chDLa9Yq;b5iEW/=JeXNWE*Ml4\!DWag-ZX@(u87q_*(%Tb[^oXD<R$m:1R]-mBugU@),<Tme^lFbZ0-;;!Q;9k]BDdZI[UD"J:eRbU#hF\#ICLBH3oNj@i"cT=Y@?5?*cH.@)3r)2*^dJ%,7%?b._]q??#tRJ11?/U&tL`=BiKSfqi;+PD*=1eHdj9-)n/,!G%\4tmY8R5,4/$<ff!^^Yjhs)fT,h6ShdRf:Hg.8/3^.?Ytl\[@/"%D!/*;\#_r%X:TVM8%b=aB4mfG1'@aFp#osQ(gT2;T4..qJuZ`@76=DU4Tp0\%qK?[KU(iNnKB:G^aG_W4TZCbl(gjjk36k]Ut*Dg%<t&e8[YA;-8>e/P4h8WPT\Sp<A<@F95)W?DFa_SV.9OE74NX&<)S0+PC.>T"PS%3ODn:Q6e[uHoOC0(00HNR3K3eU*?-!A'dbm2E%huY<<"lHgJ%&4SKda16mdS8->gKDHUOL`idnV#1YPOajS(_AMUN:"YQESRB\e-O6JSe(T3>T+o>6lFHUU[4c,CpI+DfRB-/l6oN'%#7^2d97psjPZXqWHgqcJ&k,reF?;s^'eb.DC)'/]!^dbFC/#o#J]+*sN[OHf>)\on6]5s.mu,sn.S$,lj7%@p>mWQ\:mI^4S_4A8%Z:1aEf5`IH?H_\XrQrJb.<.FYh7sZ2!qWH03iCq.HO30[D".`tU>I]"2q9@hVH-P>+u"*^+pA!e8)gJ:isC-r(),++<ak:bOJ94h%[K;Ym)0:r$Xsc;8V)&+nRHnLMjdAdHcrAjC[.kfMdNmOFk:QKTIff,u")ZkSp1O\Wq?KtF8?Wa4o+gO</M$:'$3;%BO<B[I"q&i#%63eVb/\4i0L*FgbC_e]:k*uLJeG5a$:ep6i\TfPR`KKH%M\g4PFiFX7_SV7h:aq>q4W=AZ)2aiX7Bp-o,&4[uYWu[1:=:k)(+G0P%[]-K%]YuR0Qp;i^^;GUTQHl>i_%]I.8>+]6Ni'mC,`_Fnl!UuL$PGANi%O6*0[Ydl!(&8<B'K,1gsnpq^$+.@c;[*(!k<Q#dS&?D%WE&S`Y9GG6;<<fSFZM_]I7NC_SjO&S;#27&3km&9%O@@3"]K5@>-T%qX3_93njS-FQ[lsHA\gI>L9mE_i2LTsOfLuLo4#j16Wj17%g0?#p/.=KRpV$4KES51).>3,oCc",fJb9DUhK"]f+.uES^.bt//.\>Wnq"aGXamd2e_Ft/<2el7c9W,aSSgu*:,;oJQiT(_I*j8_%;-ViW2_l%E`83%u?j%&>XqJ#J(f#@Tj*EPY+Gq+4B1iT5:Bla*1LgkNdW;3/hKE>In5WO_B+[>IrdgVJ["2LOO[8E_1pLaZ,#kGX%aS`9ka`4L2dN(g6!8SMhUI/+08U2?iJ-+!;&lp-8FRT\&X3''&#_JS"j"d9qVkL"kGTHnedlR6i==^RhRPa2GCbU1+F"%861*;gO%Pn@XG_>6K,ObEgq/o7:9?.u/*_%I[[N!piW+'n/r(1d.H@1gX>;+^K5jYMiZ'n`!u;F-lj;>F\DXRW-j@bT!3IFE`aT2OVP3aKd_%g:&&%2)sYK47,RVIrAlYK@6(j(3F9m/l@=UOKF1d(K*ZYEM+rPkjK[jYJ_2(M^&XlP6>[L.)>d,<P-mfPaS[a9#T8)G`7'@#]SE=%N-7tWpV@,V,*:c13kaX-=qH2gT@HW8huRd0(`iJcd3N%0QuH)nr<f&#JQaFlG;JfsF2?@)QpqQH5h/o*bsX6EI2Pj@7/>UcHXrXh%+,lE=39sP-plD`fNV,l59kYeUibUq+eNmRE)S):V4jC8E.*i?rF3b+l#Dd^\;,,EtjIDoo2.25^,9tJf!j,BAF0[G)"A?#JQcN0_%#m7;<ccuN*qK&h6SMLXghAL=p2iXQ>/<;gSM9`1Y3hjZt1,8ifN8//+$fY-`kR%ZlOl^]LBeFQsO89k"U3/(u.-NoqK+#t?#I*`3%YF\P>LH-tEYi6*B\mDq/O@#!4@ai%6=XM-<@jj)g,H0kR&(0^E"#],B!2ML^6hI(=reB6e;:.4rQDr@>NcO`f/m^u-[4&3;Yg/?@%4:bWI)b!'74;'aM$rO'CBult+phT`c'dfb(*'gJFR8J,%/n1k<Je]&?RfgZ%"?MV]p1t/1VS?Y**CLcW#HF_cXEDlP5K`jT&[Rr6%_O;-p0q"(1#p;eq2CQ3nL,rGC".D.3gR`Xh&mE.;CZsHF('6Oi3UOfmHL,Pf$<RRga>>Z8$mQ$;Kgca]2#<=SoVIIJ<$ba8o:D'F%eF]+'`E>d^c4$XBh\%'m?&AtT$HU<a\5c_ue+t^f6-^ALW-'PJBbfJCCMi/YW+)(S$13-Y$!_d'W0MmH*)\V`d[@9!XT>8OQ=E0o%*gt-mb\Ec.'Vt]-)6@o\@1"#E"[qXSPN,tDUcTHfgWRlT4eU2d[j`W:k?KaK-TVZK\RnrMpoG$%K>",;Mh2t@adYn9$HX]FH0:"j%87`ph!i,hsJs>&"SZMJDWpYh([o]=+Eh1bM&6J"]4^^E$qe4+r1?be:\8s0)&saKXmf?-M3;LP^7\B@HMH>g'--i1EN)[[b<Q(Rf%GrIeDi*,+S$E)XA9Nra%^nHdI3f9eGJ[QrK&ja]'coUpf:^[:EUj8clA4@YB6nD.W*un3'-%pm_%J*sCFc^,8NJD)<0,XeEQs^40%HU\39diWKaYreR\5U?R1;B0O'+GcYI9T)iYNJ1:3%Q';,kgKTFq._I[Yd@t*[)WaYe%l)uA1EmSM:@^>-c!PTjd\j2-^>s>+;k\<%N'.QSn=r*<"_V#>KX:gr,?"Ul*sN/o8!T1%U5i#3L+0(geOSK088J^2]pk1hn/8J7,4Cgdm/LY&LPRP!%%G)Q(@&uR=OG2^L$=N%%2\>!R>$]Ga0b"[;PlZuj:--5-,c*mu3@-R8"%-cW$l.CEM/$tNMU(i.AbF.7o8_>1B4_.+%Z;`Kk,GjWB[e\UnXR6'=<Tt0,fCCl%%"9F&h@>LW:+t^4SR:[4.Wp)70k=c/g`i`'R#3`IR6"*A%C=5D+K5?S`(*=s0NfZ2-=Y?;+u'19/;Pc\V.fIPoSE^Hq,ItTp=,?J%rB6tA.llQ3HeHFo0](cj&2#osM8&>>j+]GMb:gD#J!5fME4d5s+ma2N+\qfIP1C!"F,Yl];r_2/),Noo4!OX=8o80J9jW^5O(E&j%1?'3EkbO4^f'QR[Q6g,_[3-AR6upbJ=K\;CmDp=@F$-/&VFd3,AUNCYJqtOf@UGlf@8`M)0dt/6P@"Vj1aUBdglkE81GZneo3/9U%+B$)7<.<9;XC7MGR7C`LSfqhpTnBEHBI$m5^=(0"M2O,8'%8mR"@2;a22XgFnm_6I^$%\>,_eH$"/tH[4pG?\T,l=2.OnWhbHtiQ%GUZHq\_J0PPrX]6)-A$r-8Nn<=%NfUB!&,82PH/tUa[3Gj_4PN.2Gi\bEg_^XA&h>d.S^mm/gps$lqIk),gFSNX%XR=mN.0)Ft?D%M.DGY/,-qV0?:c+.$D_fgL_=9?'1XB^+bpTdcH?09?[HQHC<M7/Glh*#nkem1JLk!!<,[<k5bUS(:KbbP9FBQLbo+7N&c5sHrMlB%'/!ir![Q/n$L='k3(V4<4DSDH:_>)W9r&C$FCE(N@!a*"-B>cKR\k'$2!:iN(6f>6!I8D=)q5NR`(9t^cP-<c!S:'2_'El6@);/f%K'FHn"<*%a$1oOk9;lir9\6U:o`=&IW'.!Hg-nE>;`].`d#]/9Fs>Q>b>JRC!?.8okpdTDi]q551GaR&bC"AIdM`oml#Kr`LK7eY%;A\M7F64Sil\kh^mYQP#0n.:&A4>O(e^/sd!bVtMJs+-gV%s[De&"g";LFZ?*V15_9%RmYSs=$s(CS@'GE!a]m6KdaBP8T$nl411%.sT/Tc19_Z!RLk6KWci5Ma0*68pG%qaYt(`3[OW7,@/BRjI;0T((,YLU.Z$E(a`sCn<tCpL=ju=/JD)*8Ms'>HgnHGXQP-ARDoVs%FK#gr8BV.%];MKDS2;(W#KX.iXOO)_^d&-tBLg,99R\W+8Xsct5*B]l/!6%a_!+%..\@PGi_Gigg>lRXo/B[V\Yf1.1tB=X5[EU;%V`"r,B2fk67gG6o9.5dgL4_ZKYb9*#\3q''h6ZPQU`D^XTHXngjrGg4K_"ojR!08(\3tV<"Lq#9b9U"7nRg+A&]#]YVnG^EjeKar%,kLT^Fh19AL77MI+jMec%Q$5nhC:G7(_?2E!O:7`(t/b^&a2p+'(68!h<[b$G<33!->6:qA<92M<$GgB]p>*n@a[--aIZpNe7TIO%+VWeGL,6NIP[kH<!nu\5!LZ8rN&i5?Q,K?8`jLDY'O5fe5:RPJ_s[m("$>!`pCUO>@5]>n-$`QgBp#>4c,$6-WDo+]W!aH@[J#F)%1j#"[Ng@$sGLY%1K\i^es)i3C]Y"-ONJso^BfW]@h#<cR+5Jp>%rWHciI;?,4b`RueiE1F8TL>nSo$0l0M5a12&J(%_nmH_'!a1t%=o9;i$Biah+8;k@U6H3WXp_<BN[!l'8HnpXmC2Io#`("Q-#7r6&\-1Xk1(DeTd*^01N*G',c2)(f(($H<a92BKO">bF(+4#\@c`+%8cLqd'(lpG5p/iir>Zqf9SIq?abrgOP85nYs/oY`/Kbg2^!i2b7[\)Y-#d2QDsb+N:Cq4hDq`A.m_3IT7$,^-*6tWu6qM;\1!;(q%<e`grpg#uR_GtUi;rkSb^<'D!ZpEqr#VCAZ(%r$/NVFEV061)Wb$eoNjl3g!(LMNjo'*T)rVTh&i-Mc@Q/mZ/g?shk7Tme_\EK1l%*EV$eiENQ.K(eS/RdgTfBW@q,!"hqJi<I?W).Lml'73;GY2`FWmokZbQpeM7i]D4L,aB!K:uF7bI(>JqP4Y1L:6j7:DE=$=rW(S\%!(^-d#($Ees-LmsD*e#X/Md@P+kAok-&l=B2>l#Ui`pBdT$=J8oK1S"mbHFW5!8StggA@/LPqK/++:Y-Hi)Tqq;U`%]\=tdQgC%S%pZFF9Hus:B/:hBp/BgHG5f1erP:_(Sh95)\a5p$ak/^.%^@-tATKEuf.u^71WT==XC#<2_\<f'5-!#J1?&Th<kVr\F[p)^:#]Nmn%_LNkTT7Rf/O9gYNXX-;29Zt.3Ot?qh(d)Z_YgYu)f^9Q2JW94W$`TC-#O-Nh%)a[8)pUlI']=V[fH'^R/[*m0#VE+BQtmGe'ap`%%\cW=6OdanMQ*`RQ3pC0nOh9/nL5:,$ZDq@n)-p5sX3+hq>qJSNQlnHWY"D`n;5#($PoP!?,/l.Np)+Z78\B8unr-b(QS:1Y75/TJ%&kU2a1PS/046/K%'fA?e9QAZge>/uX7-DkMnuT5NUM)e0e7@E8)4;X>)^OEijC#pbP_??C[6u9t.IVQrYuY$D6fMS>8"o0<?>#UL%FOl#!pqlid#dqmV$r4u/hTFuACu^dtRFU9hHS8%h*cHV!3mJqc3=+)r$n/.82WTHl'MSZ2Yl5#^CG(#_ZaO!oE@.b0FgeBqb^+eP%W#W=D$;8d)5c(WG3"\/cjg\A+Bhp&[%eCM>U4,`s%#OGlQ_6+"EN8e?2]f01qp5]*+tt2,;P=[@qj-XQqH5-S6Gq#g&0VWsdmRZD%Qs;S41&]>M#fP)s7O]'Xpg1)@3[Ra&BC1e6'-2e+UI@Vse.-4RmPRGu>IsXZ=UuZK5jAqb60:OnQ&ejQBr(6/7A_IZpG8c%-JR^H%C&gO<]9&@A)?E\EKrQ'lf8hs^8f&=\D$Nft&-]9qA1QDnKL!Ogi=T'*6tAckN*VhKNLjW`>F#cW[7*<dXkHtUaE,p`=F;V\)cM>J%K$2;a6+go4KTdL`Md2.JaWiYD<Y6pDj[;$F:+'MAQB"q/9p7d/lS'>JYfL.uBMkZHKLnA/r5]GF/>L5=UKC=aZVDMi/,Y6\*OKnC%/$*H)oeMoVGc)+i[!F\H;6alS6TE'nM4SkrnA_3c]@QILUR*nk.L94A3jV8,f7cphbdYqs30OQS#%3l*BXUqj8ZR$0_oldm@Zl=T%c'B6fb_po[7M=.tSNuY+<Y5cjFR"$GbAjF.;P"1R1>l:PrQo++=^tUpA:iUA2);c5/,rfiM<T^^+'UU/*c5j\Fh7/h8f]7T="H"U%1'98uk0?X0-Dr2Y]&?&5TgSrmM?^qn-"6uE`8^9`FW?O5A\TDuL@fhjM;np0ONn2g7"17a!4)R3%dSQY!3_JMCIM(!RR"sQ>^Vee%epIVDo(a$M_42^X_S1pbojm:5aFkmn'@TE9XRakR2VO;B7Tno>;@16>c]/EAat[Xq*^r*:O%r)EWRT>L.HWU)WkCDS9@d5^BhYN)%>K[qu_Mh0tqG+i*)D?$Ec:F2]\D:n#DW1=\[7r7)@B,Q\Y%k5"`F<5@ld0^o=@@L!;U9I#$TVh$)X6I@d]X`S:bLiJiRt;(cth5_%.c6\&K&oS(2TN*a3-H2`%0b!URXZ1\KnZ0-eho)0U1eNiM@ntFV;7Q7Md47[o:C`XY2KSjcQ-'@kCI1._PtFqr!S?n9"B`p!>/h*%3,(Emg4?2WhDB*Qb%o1.5[SB"&OD$Tan5qVfEK4W&"V@L]%+]<V]!nuJ)X"aQ)@qi))=ga2+Erim]i:G$%/P+B]>WI.]VBGXe:-`%R)6!b2%t:"R+04C+H0\R"m\ZiGR_hWRZL&\6u<*mR@+308fAK`;qgo1R19rpea-7T*-FX6>'5/7qH>b3,8.4Q89.n9#g:^*\b(?X%!I@3!Xqa1arAYp%/G@l2Fk2M99hC[QciOc@JMHE.8e!k5/D"GO6sk8rPhs<n3tSJ/4+u`,SWLBs-hZLp%o"tm2TDb:C9W[!#Eu7n%Y7ZP/3j5,AdWL$2'Bdk@6qK@\AS\gWe%G!`SkT'WF']u2Sh.2r2IW8P[qJ3lg9o#TR<4rUThMDrPZ?6(l8XaEms5X#5?R/Kj\?c8%;*C^0ZXh84HO!a];c4-9dSdj&;6f^q/'c-:*Q6[;JKSU4-jel(>O@!17q%:!=T'pn0N%ps#%H9e`[9Z"'O&,t9Yos!__nql%Jl?'%@_.%qD!SIKDk^_R8bS))H^u-Pk_Z[Ul>S)me+r8P\5gEY8SWsp"n;q^ZS7.7kqkZNd\b[[$bV9-/A"(]bqu@+2WfTCi+l7,`-pk3%:tLIYI1._t_2q*#2Lm&b+;f-aFW.o2h=Y3#UpuCiP1o0\\5uPV)q'5rFV[GuoPQL6=t;DciLQMq#?e.-^.!C4jDqPfg3deGF66XG%*,ZeZbQ5=Ql>Z',cJ668U>;>B3ch`lnJ@;/m_gZlfta1AG@o,O_JrU9K>Un2'9,(J*)C7'FJc$nBFK1GL*s$EH]o`_8eXHkWJ!*j%*6H60n>kqMR`Mmg%V(GHm(:`V.TJ_^Z9k[//D+b9.m7oc)Y@O+Ti.E&RoE6)cC7dqCRJSOR*r^\CoC2OpqDR,e)&ab&fXt\lsOWJ%Ar2kR>;2Z=4Lg!eUp_%#n&sMe8EBEhSSaqkplif9#8)M`"#90C@l$]FEobYkVjBPu+Rpg'f,7U/ZgHk*L088sm'2jbP28d"aW#AC%4JA[M^#8da.KRW8hSI+Z.7FSM#9-u<$,Pk(<@r;c<>@2=<RnEph,75V"N<(`]C6*,7##&W.a53$I%*%M;AG:4!&>SZpKN5PbE,>>%WQMH_93$^Ve0mHeJ"e$UT<D/7db6563,4>8QZPoOrcIa(<#@KgYn#g$;dknIUcp\o$.Gib0R9]ZY@D&2Hb<\JMD-/@!n\>J:ea$e%+:oq*&j%7:9VE7Hh[EpZG9iTCW6_3`juOA?/#.76R8Er_3ND.b6;=8geR[3)EsC"h3ij7&4I*HFBPH<t@4RQc9akU=j]Z!n/lu1$%HkM=58$>K0oq"%i,4Z.-=odKjM4ID8#QFK%pFjEacre>3;5Cd^fAI9A<f:AQd@7O:I]QH`56.L5!AlCeCcHKaAjI]0(t?J[!ULpD%LR#iW.uRpnd;,H,f9JdRmbi&;^iel(5!93lm]At%hR(\`cG?/]_*j'KJ-ZdmAu;J5GDs6TTV=n6H/>*7+SdF3F&q#"4<a9hW(f;a%Be%kckVE2ac&T]PJ.TtcM"ld2_,dDg)O^7gil0uDd`*Pu<6&O7T$$qj_UK54i4hRRcqOkG9fFR&'$7Si,Q0f)1s'6>C<Xd"_[sFS%1g)%d07E_FU6CP$%k"[M#jl_T*0ith>Pg;UZQ<)NR-?O%ZGMmFH"<3Y`V)"AAkI0V/b>*,luQHnA-C)Y%l<#WB$Kk#Xsd#gKU\+h%\C(!/9eVlsP<fm'N0FblSK]E9=bP8McJlG$_o01&D=%,t:++)qR[WZ-$%\n`1^:pP6Ub4ROH;<g5b'sT:3oH;Jf\oq**NWcM'f$q%L?h^\@j_P/YrtMiQg-K1;uJ>m(^)EG,sC>NKq^au8MXp*%=ec`BT)A:.[ng?$9r]C:U;(#TS:Hn(WW(i87Qte8hSl^?tB2FQju\S%lBgZap-g2J?S9rPcq5_9M@'-X&(>&U-G;e&Tf#t'GAYVb0R3k3g?F2ciEEgp7[R(t&qalH6m:eoN[uE5NhgjLglR2`D3l:.7?&XM%%,lA'ii%js#n>:KW98'kn'"$TUX$3%OlU$GRK`#WK@MH:fK/(l34R+++LN4"0UZ*^^pNI?dr5YH@fMYQdtgRH<1A_=0<.>bBUBnj%M)#DaF-p!o8X*N1Z;H];Xh4!hZ:p?WKC=_%ha0kX-4_6L`F1%6As:YA=oIT`+27L?WN$qsr3HT)).tbB-s+eMap?eLKBmTF4<3qW%!7F28G.:,JK*]'XBMbd.5U8Nkma4;DYORJ4@E:?I(jZJdE,4Q/,^,V9NiF7>/K0\q:o(mjo-hU@\As^qa"EB@XciMq("%aSi%.)U%7jO;lnO+a%'O6<t4omD=dfr0\iAt3RJcoN>2!RtkCgK4HXdC[SBp3j-1*U-Pq*[`abfA3aQIMaD`>&+emo)/[S/Dl%["g&$M*a+/%;T@g7?A`i0$/03,'-t,F$'AK1odH+>r@C=qP;tseBm4W?C1)h4X@oF3mQ8f8kB#lcL26o;+Ydt7!f%)G<2Z3))jtD!,$0/_:j#(B%NljBMogMIm:NW-"0Tq[7efrL9?;*qHp.H*<OtQrbr]&7;-<!%l-acg&f%[..h]Xo4jP79uJdR&5@bU&a=i[q)jZ2S-qgc'lHkoE_%(W-PC!iaS/KOS-)*G4?s;1tmS/E])c[-`/V.;mP\K4j-YeBfk$=5Xf7HpC080IsaMo!MgX+4-+q!IOdd`fd3mL?h^T>q[On$CdFK%01/ms#jBWl:(.btCD!SXr)CbU-Qj'Z\LR3bX-*\m?h1?9Eu(@IW6>c6SK.B=P&K5eL.-Y,OOQH[BuF)2;5,00:RP4f9KK&.=_PjL%QAcBh?t0kXMT/uB<-I*>B5<3qV%B=n!=Q$\5r'<7i'^%S#(okKo,SLGR6t+<(5rp[3H8L'%(j/`hK:2$Q#AO&o@6\[a.7tG]:1]6%SQQ4e+o,RmKSca0IJ;:0,YF^Z9KlTdqiIPZ&SeuD;X2IALHEnCRlX1&80_eJJ8*H0]LA^r;/klRD"0l!XgHO5?nnQc+93gKKp6lt%iC#n?Z;lWqXR$.e!CAis#UgXj#/lo$8d6IeX7Tu^'mI-5I+&TE-k&?cTdQhf$F>gU,k48m_DeEMQIMk7*7%2rmZ#VA&Jd[`T^R(0%Q,mX,Ls1D;4fSX\ANkZ/bE?6K;2VHCa?^og]o(nJJJ^Zufi4?[7c,]3(S,/o:PQ'YiiW]aRnduT',RT2^'VqTIJd3u!i9beUL2L`%f[CU91[B#-W,(,KNc0OVdOJ'BR[HTFHpUYq!/`DVMK%1HIr:R/+=kFFR^$K@JO0r:k"[eS'C$bfH6'FbK*FRJ1i]Yjk/7u@/]AqM%G5I:=='gTF`KZ4@Yk1p(K!KR`M]";G1$0Wj)$&(d!5[;62UV\'q-3;bX];Af[^Jj<G;DjR!)U0H4iBk(>PXH#3Xm'!Q'fmc8N)@M%R3?-De'nOMrD8j$?'IW^nla[Z]jg._q!sl?.kfYd_E,/2Z')\c:ZpC`r7$oR9,Sl%pUMl`&Ps$iYQ3?=Jk?T66D)+4=t+krG%CDq%25-=OPTE7Sd8,?WXAZ$m[8Y:he.a?M1$]mN>?Vjg2DL)/09Z]Fa4A<A<N?8aV>[8ua*)ln.Og3@MP8n"9KHd;UKR5o%WY.L*FMW=%A*bXF2UOFgo$?eMa(6h7)r4W)@d2\S-X,Jn/l[!LAf=06*)C7'^.="eSiA#NOG:GsPtg&1,1d@7H2Sr*N0m7^^sC)[q:j*YWf=rK%<qT.c1E.S?G:75sJR<J%K[GBr^p5A:J=n7F>XWPPPYo'?4?uK#i!!ROAqYGd@g=4b^2@,nV,pP^VK-O]$GCRDWo^`hP^H61/;*X1%`9I_n6a6998fbEoC9,nT]s9,\;\a^Y&'>M#EehT(k\+U%Y-YKdj'EiiM'4r7ke"er6Y+5j0E<C;#tW6Y!e$0@E>DE/XI7-q+32'P%88h.f.\%qU50/D$;WKVb\DQ$#G3K?Dmb.]1W3<jq`E*$l?'@0KWg,VIc=J9c6q87D&Lf9[)SmU9-n(3gW5)#$R^d#Il8IG7/ts:c%.![MjddomJ2Z$6WaU5,mfo72=1`AC=+oPIb>OH[c!ubKoS#+)EI*L$e?/k6uLZ2'h.]C/Kk7R<a!C$(-.KrFPh^NsaF&=gcF,YT[%)$&(d!'pnt0"-[k#&p!IFRsQsLD:7XV^+If3M[c'+Jo8r_$8V7,A.WnVhsH4)U_[5?q-?h%TK^#oT/3tNMjX'FMo[^njPOY\Jm3,%f5e*Gg;_n1Z8i*lDV'X_,-&&FTdWV8au]Xs]k#Sb2`W';-)?)$,^SA_<<=@!,7(nFbVbQ7gE>\FbDU)`JOjuV1\nA[aEUWJjuCIl%gQuRBhN3,0`^N`ClQAM!'!GTJcNBCIH<(E;D"EpjDj:WS$=HFl>FEml)5iUm8?j-)*,fk.DeW!^E,i/pjW=b+LHhc(\9bXXf1H"p%.tb3]jbY1A<CFXhcijJ]P)>8j75U&Ar)`T,X@CS"W>n8#3cPh'Zf2nU?PF4M6pK?;+tN4,2>%QH)7Bh[@9=e$To3`uYfj)%9_!a(%gPEZtUTY@N_MlF=Q'g4[/7RuQm58t?l&*3.CD(na6kgt+O/oq+I'6*o?h:d\0B/6Aed&B@XNZit86`q'C7YbkgpZRRX%7mH\!T!A%N!@S:WbaPCMP,(^0.,C)dTH$s+08;YMTX.tY2Q;f\=&t5QrTI#^"#E3B"_6*-T!,V1,dPBbQ8\tNF&F%Yfd6!(^2E[Q/FXLqn4NE%X'M[c1lZ$>DVq!@eBF,9gnnb0k1E677BCCi6e](]i^t>+IteEW#F/HA1(fp/Kme0=[h";n0W=%llA3rU]-)B2+`%2tRU`Y/7R5g=%Ld#V,XAtDf9gY#M%1a$,>d$hDU;fnWm^n=ANe"'rK_6sV'$#E8g+Z'.dOl<aKrV=qV(SlI<q=1'bh0l9l8*CEfO?-R^)oeF4f,i(%N]UO/rXdk0e5JWOYp,VK+h7.^?hBNiY:GD8OU]DTT*</;>QK'?7<*cT9?nM,VIeZ@@]5Es-DFL5;E$t8KFR@MQo/ABpF8HBEB+Gp%M27sl?rq-3V'!^am^l[\*TKVTekRg;;,9o/_%1PObeiGA]E'Mbr+8O]GI$_KQ3o<4NWIar:L$;]<p$dtGtKUSBKM9bZ(-L8B9OJN%M6dD(dge&e#/qkFXldnEgIMOi!sk1iQ2&^6->_\PQW^<1BX'<Z.PZhu+oWl,HA*>7.#Cn>U&<,l'?GKu^J2FnmkJP?$UM0oYq-%N%*@=PtJHA#%VG(YT/0b1Zhfn8A=X(sV89JCL>*f9@P[kE*aHoJ4_TEcC5J\o'Z%88g4UG`Yf[a429QArqS1Hh'#N$?*\qQ7:ZDpm2%V^_Nel5O:YY<;LKjO5jqH($cg7Jc5-<Etss]u?u&=rb+-7O&X[CLHb*d<Q:WlW#<adg!LedkiI)9nUH-#/W7'GT<L"6Pil75oN#Z%IOK!$%R_4>q\dpe&#u!to`OJoKuCro$adk??7%a]Kn:'q`e?j5,?Nh?Ae`4ilbs^%n;L=[-u'E+\_KMa4gl.II"W%>:]X4t1kZ/k%At077=b.K>AgA!F]g/M_aJsN.?X?Hr%RaZ`\bm+j39GD]8.:O^qPBSU22XlJ2Q:O8.;4Id^/"0h/`KphY2k#+pNEbsi9RE1J7i0&%[E@SAqX5c<0-c_8D>dYT*9=^<pf3r8LO/jd-5aaH9\0[5PqDil%rJslY$%V?>$O(9DtIAJEQ>Wan,MjO_fK$@f3WfKs8E66^ARtL%KhD*bmb`<Zjo,4Unp?G3J,!q25C`*k0\S_KoB!O,<'NQA\&UMeqF(]u6^_'+U6.gVC<WYsR%g^9gLR7G(2YAr$;fjm,IhD;`S$WQ%Q@>aYr?!0Sn3fUH06\jp;QpelYF9G?P\cU2_fY"LI9_Xe>uNSF+tdhNPt^^lME:_;U/"K0lFP&O9\0u\*99Wu=43hF'XBi>^[*3@%F:gZ*a]>,(eoD3Kr(]!05=!H9PDOR)`aH2b,sYPR;[*/;+0Wd)X=9T1qH;]VaV8S<>`_@=[.l`%?2ahDY>6G3KZcoB74h\'eG&@p%H2D.X[XL>GTY')4)u#*rBhp^caa6ap`-9eH"_8cW#+1"8P,,cp7rA=S8cl9*ke[HId)[;uqlMXP,=X6YA4%,W>U4;&8I37,+pG\;%6Rjh+f#b8"G=j04FL?(P"]ET)3q6G9qF:rim`EHriH*tY4[g+oh^,7bOB3&gSTXDKr65PM<73VWl0@=h-"JKuh_*AB@OuOq2Ah"k%@cYnu#!,VDCNr\W&6k&'+D<&*FER0($WA1_?']uY5i\GPU_,6@%2Tb55ccNj"PZn<0B(%EJ-5C@-/_J*er"p>8h<hor:\Y?Nu4Gc%Iq3Z$pNFL#<<9A18?n'\>dcMq)r^oA?*-Q_SV8Pdh_*GD@XRbHOmu"LJlH/0@HXod;(GRZh2URieW11PPts&V5c/_0j1!/&Nu4Aa%YE)EXHAqNZNmVu)Y?>t*,dnV!npR!.;\g0c9naIT=CEm@%F!CfAHl@;@CE&72;"?)ZSd$I_,_83jbIL:[[KH42P.V:C&lq5D%^c&%0u2A&BtURF0N/X+GuIXMQ4$BCD,#^eSGMB'f!I)hB[(CKCb)ofI3+_P_@!UABVK=D0r3i[Vjk+55SdRnFkU"-Y]\O(PH]V+R[AKV%`Cu!=RPFuQ2$(%R?m96!.a6o-VKCWDC)EStjkLP]Z)E#H';U;B0:NiBerqPG<ms&AC?ZuMea+gnojjN07-PsgCFmW[dY#,WQtE"[%R:i1Y:,Gelc8;mLVA`-rSS4[^,jN1ARC^s8Wiia14#,oE8CgY_AF$1jkrR:)PBF!-/0<)[Z/2YJY#OZV?.;6YMeXU!eQR7("PJGE%FYmM0.[r/-4\?U"P2qS#Th-IYfrPeYO>\jo->Csj7<Q98TWXl^?)XTF([>\nKj$D+dX$ho^(Frj0@W>J!b<X!d9>l"@pSMSHBPq6%Q=_ctpL(S+LQe))g_S*=k:V.*mDd%62nq@:qW@Y[pE'<\93j/tk3%%Yi7bg;msTDiGiR(q\9%A]pCA>d?MXSu#@IJ?rU]7#pLfi$%Zt6;LiVqMfGOPRl&QMK=<:/L[^A=;a?(@h'rU3WYO</lBi2ac7='iFW4T9Hrme;e1<?eCd]l*ML.,Y((#HIOrp>>YADWd=U%U2_X%M9-bXIAqS9XYeYuFgkjR>7O!2Y,C"!/?Fl5Rli2H]!Bc/'^O`s`.^I!8d]TRC0=0%4"s"kFLE[D\O![J`3nW.CYc]/K[+4I".\[m%bo;o`dh^u6>PnEt'R_U".R/4A=%bOrbTF4pbe$ER(t7&1@8,H`4kegVc6bHL2SY:J?jNrkqg.rQ6=O@HTG@YVL`fF@)e9GIN38Q9%;1$=s)QgWT^[g'$D,e8bSd.'MT.ut)Q->nS8@Ks`N_P2=HM`*'4"7_ar"^(tb'5!`R6b."`LWihP<db/QCRhUF)\s)g11e_!q`rJ%%%1g;W^OZq3?ZP<21l@H,pqSY0NA;0hDPI?kfgTc'K=f'>63-b1"@5R5hHE7#,h\c!>D8CqLd"[-DN#eHIUd@KKbk;Ct`5tn']WN%!JQ/#q_\+0p$>0&W=O0AV&jeS-+5>l_A_OCBIleQf\LVPr0Bq6M%r.b"9872T-or2IQt,F?P7I9)aBE@V^8LPDm?`e%c)TXWK\mo%fr^Z0EKtJMS'XK8pMFgJb3M;Q0+,:kT]3Bmg@Q\nro6I;UZM20BPncFh<\oP]ZiIF`40qh:C-(350R;[_tMsOU%71YS)_0*jjs^<%2A!:,<88[dD\m&)@>s>MF*9sejpLVp3iaq%A2gF,mVE98Kb/Tg?7ko/D#t98/TgoGqYCZpEam_na`dSX/1(:EAA>j3p`#<c=H<:W%aA,3Whi$jQf:RKoZ4ea!^E;.4Y;U,TZ#6(0$O$.Wl.,%a&lM!ZDC^Dm<o$3h^8*VH7XX2+qZ"=VLG.EF)RHV#41d=$o@fME(tA!+%R+Kjckr3R.,'\"NE;65Oq"od?T+(5JfCp_C_`<qpc?_PL\1'"6NfkJ7r!`5QIHB7<)gB_C[iTpBpYN[R5J2=8gk?.)h#$C9q[`.D%oA0A#kJ$f_hZ(-9\G+oI7<SWcmE+=fL\H;R#ePT]na#ZDVa@g=;Z4Id>Aq9"mf*<4>Vk(~>%AI9_PrivateDataEnd