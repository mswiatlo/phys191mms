%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 87raw_width.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: steven schowalter
%%CreationDate: 5/12/09
%%BoundingBox: 0 0 391 208
%%HiResBoundingBox: 0 0 391 207.6797
%%CropBox: 0 0 391 207.6797
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.0 x406 R agm 4.4378 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 68 8%%BeginData: 6228 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD22FFA8A8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8A8A8%FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8A8A8FFCFFFA8FFA8FFA8FFA8FFA8%A8A8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8A8A8FFA8FFA8FFA8%FFA8FFA8FFA8A8A8FF7DFD22FFA8FD29FF7F85AFFD0DFFA8FD22FFA8FD4B%FF7E474577AEFD2FFFA8FD22FFA8FD27FFA96B8C928CCAFD2FFFA8FD4AFF%CAFCA17DBC94FD2FFFA8FD22FFA8FD27FF709A7D7D7D94CAFD4DFFA8FF7D%A8FD27FFCAB5A1A87DA893C3FD2EFFA8FD1EFF52FF527DA8FD26FFBD93A8%7D7D837E94FD2EFFA8FD1EFF7DA8A8A8FD27FF94CAA8A87DA8A8B6C9FD11%FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FD09FFA8FD22FFA8FD25%FFA895A9A87D7D7DFF77A2FD10FFA8FFA8FFA8527DA87DA8FD04FFA8FFFF%FFA8FFA8FD51FFC39AFFA8A87DA8CFA994FD0FFFA8FFB5C3FFFF52522727%52FD13FFA8FD22FFA8FD25FF94A2AFA87D7D7DFFA971CAFD0EFFA8A8CACA%FFA8FFA8A8A8FD0BFFA8FD08FFA8FD48FF94FFFFA8A87DA8A8FF94CAFD0E%FFA8FD05FFA8FD0BFFA8FD0BFFA8FD22FFA8FD24FFCA71FFA8A87D7D7DFF%FF9C94FD0FFFA8A97FFFA87D7DFD0752277D525227FFA8FD08FFA8FD22FF%A8FD24FF9BA2FFFFA8A87DA8A8FFA29BFD0EFFA8FFA9FFFFFF7D7D527D52%7D7D7D52527DA87D7DFD0AFFA8FD22FFA8FD23FFCF9BA2FFA8A87D7D7DA8%FFFF71CAFD0EFFA8CFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD08%FFA8FD47FF94FFFFFFA8A87DA8A8FFFF9BA8FD2BFFA8FD22FFA8FD23FFC3%9BAFFFFFA87D7D7DA8FFFF789BFD2BFFA8FD46FFA27EFFFFFFA8A87DA8A8%FFFFCB78FD2BFFA8FD22FFA8FD23FF70CBFFFFA8A87D7D7DFFFFFFA994CA%FD70FFCA9BFD04FFA8A852A8A8FFFFFF78CBFD2AFFA8FD18FFA87D7DFD07%FFA8FD22FFC394FFFFFFA8A87D7D7DFD04FFA29AFD2AFFA8FD17FFA87DA8%FFA8FD29FF94A2FD04FFA8A87DA8A8FFFFFFA8B6CFFD29FFA8FD18FF7D52%7DFFFFFF7DFF7DA8A8FD21FFCA78A9FFFFFFA8A87D7D7DA8FD04FF70CBFD%29FFA8FD17FFA87DA8FD04FF7DA8527DFD22FFCA94FD05FFA8A87DA8A8FD%04FFA2C3FD29FFA8FD18FF7DA87DA8FFFF7DA87DA8A8FFFF7D27A87D7D7D%FFFFFF7D7D7DFFFF7D7DFD05FF7D7DA8FFA87D7DFFFFFF9A9CFD05FFA87D%7D7DA8FD04FFA29BFD43FF7DA8FD0AFF7DA8A827527D52FF7D7D27FD057D%FF7D7DA8FF5252A87DA87D7D7DFFFF9BA2FD05FFA8A87DA8A8FD05FF94FD%29FFA8FD18FF7DA87DFD07FFA8FD05FF277D5252A87D7D52A852527D7DFF%525227A852A87D527D7DA87DFFCA8DFD05FFA8A87D7D7DFD06FF9BA1FD28%FFA8FD18FFA87DA8FD0CFFA8FD047DFF7D7D7DFFA8FF7DA8FFA87DA8FF7D%A8FFA8A87DA87DFFBDBDFD06FFA8A87DA8A8FD05FF9BC3FD28FFA8FD18FF%A85252FD07FFA8FD0BFFA8FD11FFA8FFFF9B77A8FD04FFA8A87D7D7DFD05%FF7DA293FD42FF527DFD28FF935252A87DA87D7D527D527D7DA87DA87D7D%5294C3FD27FFA8FD18FFA8527DFD07FFA8FD1FFF9ABD847DFFFFA8FFA8A8%7D7D7DA8A8FFA8FF7DFF9B9BFD27FFA8FD19FF527D7DFD26FF9BA2FD07FF%A8A87DA8A8FD06FFCB94FD27FFA8FD18FFA87D527DFD06FFA8FD1EFFCA93%FD08FFA87D7D7DA8FD07FF94A1FD26FFA8FD18FFA87DA8FD26FF9BBDFD08%FFA8A87DA8A8FD07FFA19BFD26FFA8FD18FF7D5252FD07FFA8FD1DFFCAB5%A2FD07FFA8A87D7D7DFD08FFCF8DCBFD3EFF7D52A8FD25FFC394FD09FFA8%A87DA8A8FD08FFBC9BFD25FFA8FD18FFA8A8A8FD07FFA8FD1DFF8DC4FD08%FFA8A87D7D7DFD09FFC393AFFD24FFA8FD3FFFA1B5FD0AFFA8A87DA8A8FD%09FFB5C3FD24FFA8FD1EFFA8FFA8FFA8FD1CFFB5A1FD09FFA8A87D7D7DA8%FD09FFC98CFD24FFA8FD1DFFA852A87D7DFD1CFFC3B5FD0BFFA8A87DA8A8%FD0AFFB69BFD23FFA8FD1DFFA8527D7D7DA8FD1BFFFCCAFD0BFFA87D7D7D%A8FD0AFFC38DA9FD22FFA8FD1FFFA8FD1DFFB5BCFD0CFFA8A87DA8A8FD0B%FFB594FD22FFA8FD22FFA8FD19FFA1FCCAFD0BFFA8A87D7D7DFD0CFFCF8C%A2FD5DFFCAFCC3FD0DFFA8A87DA8A8FD0CFFC98CCBFD20FFA8FD22FFA8FD%17FFA8FCBCFD0DFFA8A87D7D7DFD0EFFBC8CA9FD1FFFA8FD39FFCAFCBCFD%0FFFA8A87DA8A8FD0EFFBC8CCBFD1EFFA8FD22FFA8FD15FFA1FCBCFD0FFF%A8A87D7D7DA8FD0FFFB58CA9FD1DFFA8FD37FFBCFCC3FD11FFA8A87DA8A8%FD10FFBC8CA1FD1CFFA8FD22FFA8FD12FFCAFCFCC3FD12FFA87D7D7DA8FD%11FFC3FC93A2FD1AFFA8FD33FFCAB6FCBCFD14FFA8A852A8A8FD13FFB5FC%94CBFD18FFA8FD22FFA8FD0DFFCAC3FCFCB5CAFD14FFA8A87D7D7DFD15FF%C3B58CB6A1FFAFFD14FFA8FD2DFFCAC3B5FCFCC3CAFD17FFA8A852A8A8FD%09FFA8FFFFFFA8FD07FFAFCAB5B58CBDC3FD13FFA8FD22FFA8FD05FFCACA%BCBCFCFCFCBCC3FD19FFA8A87D7D7DFD07FFA8FFA8527DA87D52A8FF52A8%7DA87D522EA8A8C3B5B0FCB5BCC3CAFD31FFA8FFC3BCB5FCB5FCB5BCCACA%FD1DFFA8A87DA8A8FFA852A8FF7D52A8FFFF7D27A87DA8A87D7DFF52A852%7D7D52FFFFFFCABCB5FCB5FCB5B5C3C3CACAFD07FFA8FD22FFA8CAFCBCBC%C3CAFD21FFA8A87D7D7DA8FF7D277D52A87DFFA852FD057DA827A87D2752%7D522727FD07FFCAC3BCBCB5B5FCFCFCB5FCB5B5BCC3AFFD4BFFA8A87DA8%A8FFFFFF527DFD04FFA8FFFFFFA8FD09FFA8FD0FFFCAFFC3C3BCC3B5CAAF%FD22FFA8FFA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8FFA8FFA8FFA8%A8A8FFA8A8A8FFA8FFA8FFA8FFA8FD047DA8A8FFA8A8A8FFA8A8A8FFA8FF%A8FFA8FFA8A8A8FFA8A8A8FFA8FFA8FFA8FFA8A8A8FFA8A8A8FFA8A8A8FF%AFAFA8FFA8A8FDADFFA852A87DA8FD12FF7DA87D7DA8FD11FFFD057DFD11%FFA87D7DA87DFD38FF7D7D525252FD12FF7D272752A8FD11FFA8527D277D%FD12FF525227527DFD37FF7D7DA87DA8FD12FF527D7D7DA8FD11FFFD057D%FD12FFFD047DFDD1FFA8FFA8FD0BFFA8FFA8FFA8FD6CFFA852527D52FF7D%7D52A8FFFF52A8A852527DFF7DA8FD6CFF5252527D5252275227FF7DA827%A8527D52277D7DFD6CFF7D527D7DFD0552A8A87D27527D7D5227A87DFD6C%FFA8FFFFFFA8FFA8FFA8FFA87DA8FFA8FFA8FF7DA8FD25FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2009-05-12T02:42:41-04:00</xap:CreateDate>
         <xap:ModifyDate>2009-05-12T12:46:46-04:00</xap:ModifyDate>
         <xap:MetadataDate>2009-05-12T12:46:46-04:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>136</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAiAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FUvvbS2udTtFuIxKiRTOqNuvINEKkdDsT1xVUbRdIYqTZQVQ8l/dr1oR4eBxVz6LpDijWUBAIb+7&#xA;UbqQR0HiMVam0TSJoZIms4QsilCVjQEBhTY0xVf+idK/5YoP+RSf0xVbHoukRoqJZQBUAVR6anYb&#xA;DqMVcmi6QgotlAASW/u1O7Ek9R4nFXLoukKWIsoKueTfu160A8PAYq4aLpAcuLKDkwCk+mvRakdv&#xA;8o4q0dE0gzLL9Th5IrIB6aUoxUmop/k4qknna+0Dyz5cutdubCCSOxo6xiNaszH01VQBuzF+IHic&#xA;uwYfEmI2I31OwA6knuA3LOGOU5CMQZSPIDmXmHkP84v8Q+Y49G1ry9Y2cd3cRx2M0SMAGPCRY3Li&#xA;jMVcFWFAenHcZHLqdJOhhOS/6cQOId4omt72PSjfR3es9nNRgxyyEwmMZqXCbMeXPYd72uTRdIkR&#xA;keygKuCrD01Gx2PQZW6Fd+idK/5YoP8AkUn9MVWx6LpEaKiWUAVAFUemp2Gw6jFWotE0iJCq2cJB&#xA;Zn3jQmrsWPb3xVtdF0hSxFlBVzyb92vWgHh4DFXDRdIDlxZQcmAUn016LUjt/lHFXHRdILhzZQcl&#xA;BUH016NQnt/kjFXNoukMVJsoKoeS/u160I8PA4q1LomkSoFazhADK+0aA1Rgw7e2KtyaLpEiMj2U&#xA;BVwVYemo2Ox6DFV36J0r/lig/wCRSf0xVA6pomkLot3GlnEipbuFKoFYcUNKMPi/HFU4xV2KuxV2&#xA;KuxV2KuxVLr3W4LTWNN0t4pGl1MTmKVePBPq6B2D1Ib4g21AfemKpL5f82ad5gvTPJayafLYXF3Y&#xA;G2vwsc6yoYGVuBNU9SOVXUdSrA9DirK8VdirsVdirsVdirsVdirsVeV/nBM2sa1ovlNAzWqV1bV1&#xA;FQPRjJhgUmhFHkZqgjsMry1KPAQfV9w37uu3c9B2RI6bFk1YIEojgh19UuZG4qh13YlqmjT3tlqc&#xA;Wnxxi+sLyGbSFjFDHJDb27KgA2q1CoHShHzyXhCRAEYyrkJWI/7Eg7fjZxOzO0DizmU5zEMljIRR&#xA;kQef1WD972ryjr8fmHyzputR8P8ATYEkkWMllSSlJE3APwOCprjA2OnwNj4Hq4uv0vgZpY9/SduI&#xA;Ua6WOlhN8k4jsVdirsVdirsVdirsVdirsVQGvvbLot79ZZFiaCQH1CApJQ0HxbYqj8VdirsVdirs&#xA;VdirsVQWoaJpGoz2899ZxXM1pz+rPKoYx+oAH416cgBXFUJZaVpukXlpaaZZJbWxinJjgVUUEtD8&#xA;TbivQDuenbFU4xV2KuxV2KuxV2KuxV2KuxV5Xpg/Sl35z8zOoKy38elWRKlWENhRHIr2aRjX3X6A&#xA;K60L76Il8b5+RHT7Nz2jLw8OLCCfp4yOISjcu6uW3MH9pC+VAB5ju9611OCo8P8AR7bC6ZkP5VxP&#xA;pc3mTysyyiPRdSZrQuwKLa3i+tBHGAfh4pu3arfMC7PjqXEBLhnvZqif4uGv4QdnZ9oZfFjjyEw4&#xA;jDhIjfF6dgZ3/FIfYGe5S6x2KuxVIfMM93bR6hd2tpcalc2trE9vp0E7wGRi8gIBU0rQdaE7ZDJI&#xA;xiSBZ7nJ0eGGXLGE5jHEneR3pLvNkevr5Vhu9EgvI9XlmsjNapM00kUMk8YuxxklVGaOBpCN92Ay&#xA;UTYassRGZAPEAeff5sLsfMX53LeWsN/5JYxrLBFeyxah8Jifh6s6N9aahX4/3fE0qPiahwtb1n9G&#xA;W388/wD0kT/814q79GW388//AEkT/wDNeKqEtpHBd2LRyTfFMysGmldSPRkNCrMQdxXFUxxVB6yx&#xA;XSL5gpciCSirSp+A+JAxVGYq7FXYq7FXYq7FXYq7FUHOZP0tacVBBhn5kkggcoumxriqMxV2KuxV&#xA;2KuxV2KuxV2KpR5v1pdD8r6rqzGMGytZZYxKxVGkCn00qvxVd6KANyTQYCL2sC9rkaG/eegcrRYf&#xA;FzRhUjZ34RxSrrQ67Ma0bQ30P8qtL02QEXEcEUlyG6ied/Wm8f8AdkjZZkiImhsBtzMuXmdyO5Ov&#xA;1Jz55ZLviPcI7dNhsDXPzY95VVh5juiUVA2pQFWXq4+r245N71FPkBkHET2/46N+cthdFoYbbzJp&#xA;slu7SFgXubKRSAlDx5us0YHIdFNN+tssYOMTuIMTwmyeIiVmIiOVAiV9dw7XBM5NJPFUzwS4xQHC&#xA;OkjI/V3V0egZU6p2KuxVKb65MV7dJFd29ndPbwejJcjmm0ktaxiSEtt4OMnjMRL1AmPka+2j9ypV&#xA;5mudVuPK7W+naraNrglt29aGb6mjIlyjzKtXuGTlCGX7RxyGJl6QRHzN/bQ+5WH399+eksl7JZ6t&#xA;5atULhrG3Z2m4oZalGciMkrFQVpu3I/ygQVBTS/nzICf0voXqAmSOl0FjDi3RI6hIUYr6yu7IxYH&#xA;lStAMVXpB+dGpaVYx6v5g0ey1KG9llupdPuHSJ7T0Twh4qY2q0oHxcvhqTv0xVnHlKbV00jR7XX7&#xA;+3vNcW6uDM1vMsw9Mi4MIDBIi3GEoCSta9a9cVZbiqD1kuNIvigDP6ElAx4j7B7gN+rFUZirsVdi&#xA;rsVdirsVdirsVQc4k/S1pxYACGfmCCSRyi6bimKozFXYq7FXYq7FXYq7FXYqwT81mN9b6H5YRnB1&#xA;/UoYrhFQOHtbc+vOCx+zQKG2328K5ZiAMt+Qs7wE4mv4ZXsOLlxdDy3dr2YfDGTN1hDb1mEhKWwl&#xA;Gt5V1j3c2R+bv+OHN/rJ/wASGVuqedeVQB5juqd9SgJ3B/497fw6YqyT82A9lp2j+ZInSJ9A1S2n&#xA;mndPU421y31SccRuQBOHI/ydtxl2KQ4ZAmEQY3chdcPq27pGjEH+lXV2PZgMsvh1OXiAx4YSqz0v&#xA;vAO5vutm8ckcsayRsGjcBkYbggioIykF18okGjzC7FDsVdirsVdirsVdirsVdiqD1kOdIvghCv6E&#xA;lCw5D7B7Ar+vFUZirsVdirsVdirTEhSQCxAqFFKn2FaDFWBeXPMnmG98zGwu9Ys01BIkuLzyw9pw&#xA;kht3KjnHdxXFwrleXXcN4JXZVm8t/ZQ3cFnLPGl3dBzbQMwDyCIAyFFO7cQwrTpiqX2mp6bqt/bX&#xA;Om3sd1BGlzG727pIhdHiDIxHLp12/Viqb4q7FXYq7FXYq7FXYq7FWBhJtW/OMlxWz8taYHTjKWUX&#xA;N+xVSydFb0o5Ae9OJ8MujCccZn6hGfpHq9Mq3lcedg8NE7b9emylkxx0ggOEzlOz6PUANhU/5p32&#xA;7x85J5u/44c3+sn/ABIZS615z5UA/wAR3fwFK6nBViah/wDR7b4l8B2+jFXpXmrRE13yzqujPQDU&#xA;LWa3Vm3CtIhVW/2LUOW4MpxzExzB7r+zr7meKQjIE8gem329Eu/LbXbvXPJOlajeBxetEYrv1FCk&#xA;zwMYZTQE/tofD5DplZjKJIkCD/SjwnyPD0sbuX2lhhjzyGMxMOY4ZcQF71xbXXJkuBwXYq7FXYq7&#xA;FXYq7FXYq7FUHrKltIvlDFCYJKMtKj4D4gjFUZirsVdirsVdiqycQmCQTECEqwkJNBxpvU9tsVee&#xA;eRZ4LG5h8vaHceWINKi3Q6VcGS7uFTdi1qBRWZftOZpD3xVl+r+Xv0jqumakl5LaTaZ6/piJY2D/&#xA;AFhAh5eor9ANqYqk/lfyToPlV7bTbVjNHIrPEbkozA20FpZwKmw3jtrSNa9TQsdycVX6rpv5gz+d&#xA;bW50/Vo7TytHAouLMpE7PP8AvCWIaEyEE+mKLOm1e+KvPPLX50+d59Ot9S1ewtbiL6/Ha3NjZWzW&#xA;920Emm3F96sKz3rxcP3ClJGk+Mc14Ky4qybz1+YfmW2jRvKUVtKEh0i5l+twNPJMuu6gLG1jgj+s&#xA;2CK44yOTJKBsq/DUsqqlB+bU7SweXLj6pZ+bHhja6urq40yK1t3aETytJp/6TbUaRRk1TjUkfaVf&#xA;iCqPvPzPutE0Ly/e69pEslzqkEz35smiVIJIEBp6dxJG49V2ChGNUr8Z2OKoLzP+YnmmfT9Au/J9&#xA;ook1O7vrG9sb6zFzcxTWKy+oOMV9aR/upLWRX4PJyG8fKgDKqd5+b1xqSajYeWEsxremRySyC7ut&#xA;Ou0naJxCtvFbadqE90kk88iRoZFAXlvVqIyrMvLev3V9HqkWorEtzpVyYZJLbk0UkUkMd1C6VLGv&#xA;ozqrb/aBI2IxKYgk0Eh/KOE3en6v5pko0vmPUZ7iJwnpn6rbsbe3BTelfTZ9zX4t8NRERwmJsXYB&#xA;F3vvxdR9PQbfE7btmUo5BhIlHwoiNEiVHmaI6E/joJJ5u/44c3+sn/EhgdQ868qqR5juiSxrqUBH&#xA;KtB/o9uPhqen8a4q9dxVg3kVBpPm7zf5dNFia6j1qwq1GaLUFPrBE6cI54mFR/Nv2rPIOUv539Pi&#xA;JI5mucRyA6bbeW01kvEwYp3ZiDA+jhjGvpHFylIg2erOcg6t2KuxV2KuxV2KuxV2KuxVAa+ls2i3&#xA;v1lUaJYJCfUAKghDQ/FtiqPxV2KuxV2KuxVxAIodweoxV4z5a1CeL88rzSYDAmlWonhis0trG39F&#xA;xBHInp+lG1wwKlvieQfKhoFXs2KoOd1XVrQEGrwzgUBI+1EdyBt9OKoqSOOWNopVDxuCrowBVlIo&#xA;QQeoOKpD/wAq7/L/ANGOD/DOk+jDH6EMX1G24pF6v1j01XhQL637ziNuXxdcVX6x5I8tazqkGoan&#xA;ZRXjQxCFra4jimt5FRi8LPFKrjnCzOY2WhXk29GOKppqWmabqljLYanaQ31jOAJ7S5jWaJwCGAeN&#xA;wytuAdxiqDbyn5VaytbBtGsWsbJZI7O1NtCYoUmRo5FiTjxQPG7KwUbgkHbFXJ5U8rJ+jeGjWK/o&#xA;bl+iKW0I+qc6cvq3w/ueXEV4UxVW1ry/oGu2q2mt6ba6paqwkW3vYI7iMOBQMElVlrv1xVh3nuCP&#xA;y15H1Ky0otLq3mO5+p2rSMVeS7vQIIwDEqKohgQKg+EcUC18a8k4ihLqQOdfaAa99O37F05yZ+Ll&#xA;HFE5JGhKhHf6SRe9bc1D8v8AWfN9rpEukz+W5U/Q8i2EFostvGIYYIkWL947r6xkSkhkUBfi4/sn&#xA;Lpy4iT95v7TzdXkyGcjI8yb22G/l0THzTrfmNtFlD+XJ0XknxG5tT+0PCTIsGA+WdV1pfMFy0ehT&#xA;s51GAspmt1+L0LcAKSwBFAN/HFXqn6e8zf8AUsz/APSVaf8AVTFXnlnrvmaPzlo/mfV9OFpZTXc/&#xA;l2S+HANc207+payMgZlQRTpw5hqPTkuzAYCD0Hv9Iuv6x3AHcOZ86dzoSMumy4STY9cBxSqx9VQA&#xA;IMjHqeQHdb2PC6Z2KuxV2KuxV2KuxV2KuxVB6y4TSL5jUgQSV4gsfsHsKnFUZirsVdirsVdiq2Ry&#xA;kbOFLlQTwX7RoK0FabnFXi1pZaZ5g/M4Sabq2qW88zw6u0BEMtqY4yh5hkuWoPha3DrHxBZkPI1x&#xA;V7XiqDnMn6WtOKggwz8ySQQOUXTY1xVGYq7FXYq7FXYq7FXYqwLUZf8AEH5q2GmIeen+VbdtQvRU&#xA;8DfXI9O3RlOxaOOrqw6V69RkYZSJnhkRtRAJFg/zhVSj8ebu44Rh0BnKIMs0qiSAaENyYm7ib2O2&#xA;4Z7knSJP5u/44c3+sn/EhirzryqWPmO6q/IDUoAo/lH1e326Dvv9OKvXcVY7+YPl0+YPJ+pabGtb&#xA;povVszSpE8X7yOm4oSy8fpyMht0+IEvsOx+Ln9marwc8ZEnhujUjHY89xuPgq+RvMY8x+VNO1Y7T&#xA;zxBbtNhxnj+CVaDp8amnthBBG36P0WPew7Q0pwZ5Yz0O3Pl050U9wuG7FXYq7FXYq7FXYq7FUHrJ&#xA;caRfFAGf0JKBjxH2D3Ab9WKozFXYq7FXYq7FWmUMpU9GFD22PyxVjOhfl5oOiXsF5ZvO00HqGszr&#xA;IXZ0WJWdyvP93CixIoYKFHStTirJi6BlUsAzV4qTuadaYqgXkEurWxhkRlSK4WWnxbh4qrUEcSD4&#xA;4qj8VdirsVdirsVdiqXeY9esdA0O81e9YLb2cZkIJpyboiDru7UUZDJMQFnYOVotJPUZY4oC5SP4&#xA;+THvyr0S8svL0mq6mB+mfMEzanfkKFK+tvHHt2VO3Yk5DADw2eZ3/H6+rse3tRCWfw8ZPhYhwR3v&#xA;lz595/FMyy50iT+bv+OHN/rJ/wASGKvOfKZQ+ZLwKakanAHHgfq1safdTFXr2KuxV535aceVfzF1&#xA;PyxKCmmeYS2q6GQKIs1D9bgFFVQfh5Ko6KBXdsoxyEZGHxH6QPdzod5Jej10DqtHDUjeeL93k7/6&#xA;EjzJv6STW9ADZ6Jl7zjsVdirsVdirsVdirsVQeshzpF8EIV/QkoWHIfYPYFf14qjMVdirsVdirsV&#xA;dirsVYn5m8lXWreZ9H161vkt5dKrSOWIyVq3L92yvGU5/Zk68loMVUfJvkx/LTG0W5A+tzXd+0Vu&#xA;pESNKbcSRp67TylXdGkPJyQWIBCgDFWZYq7FXYq7FXYq7FXm+sXH+OfPMXl63LN5b8tyrc67IOJj&#xA;uLxG/c2jAg1VCCXG9dxsQDmHkPiZOAfTHeX6B+n9r1Olh+Q0Z1Ev7/OOHH3xh/FP48hy79wS9IzM&#xA;eWdiqT+bv+OHN/rJ/wASGKvPPK5c+YrgMVIGowBAvUD0Lc0b3rX6KYq9bxV2KsQ/M7ytea5oKXOl&#xA;uYte0eUX+kSqAx9aLfhQ9eQ7eNMpzCVXG+Ifb3j4u57E1mPFlMMoBw5RwyvpfKXvijPIPnO082+X&#xA;YdTiX0btCYdRtP2obhNnSh3oftLX9kjvlwlGQEo/SfxR8x1cTtHQT0mY4p9OR6SHQjyLI8XBdirs&#xA;VdirsVdirsVQWtxs+kXirI0R9GQ8k4k/YO3xBhiqNxV2KuxV2KuxV2KuxV2KoG5MX6Ysub8W9Kf0&#xA;xyK8m5RbUBHLbtiqOxV2KuxV2KuxV535x86anqmpv5M8kv6utP8ADqmqKf3VhFUBzz/34K9tx/rd&#xA;MTNnJPBDeX+583p+zOyseLGNXq9sI+mPXIe73ef6N2V+UfKml+VtDg0nTlPpx/FNM325ZW+3I/u3&#xA;4dMuw4hjjQdP2l2jk1mY5Z9eQ6AdAE5y1wHYqk/m7/jhzf6yf8SGKvOvKtP8R3VKV/SUFaV/5Z7f&#xA;rX+GKvXcVdirsVeWectB1jyXr8nnvypAZ7Sb/lJdGU8UljG/rooH2l3JbqpNd1LjMWROEmQF4z9Q&#xA;6j+lH9I6/Ijq9Bnx9oYRpc54csf7qZ/3EvLu7vsM98r+adE8zaTHqmkXAmt3+F0O0kUgAJjlX9lh&#xA;X+IqCDmXQoEG4nkRyP4+Y5Hd5zVaXJp8hx5I8M49Px96bYHHdirsVdirsVdiqB10xDRb/wBVuEf1&#xA;eTk3IpT4D+0CKYqjsVdirsVdirsVdirsVdiqDndV1a0BBq8M4FASPtRHcgbfTiqMxV2KuxVjvmb8&#xA;wvJ/ltSNV1KKO4FaWkZ9Wcnw9NKsK9KtQe+UZdTjh9RdroOxNXq/7qBI7+UfmdmIm9/MX8wE4WMT&#xA;+U/KstOd5L/x0bmM7/ulH92rCm/3MwqMxuLLm5eiHf1d34Og7MNzI1OpH8I/u4nz7/xsObOPK3lL&#xA;QvK+mLp2j2wgh+1LIfiklen25HO7H8B2oMy8OGOMVEPPdo9pZtZk8TLKz07h5AfjzTjLXAdirsVS&#xA;fzd/xw5v9ZP+JDFXnXlVWHmO6JRUDalAVZerj6vbjk3vUU+QGKvXcVdirsVd12OKvM/MP5Yappmr&#xA;SeZfy9ul0vU2+K70ptrS6oSSpUnipNaAUoOoKnfMQ4pYyTirzieR/U9Tpe28OfGMGuBnEbRyD64f&#xA;rHz9xVNF/Oayiu10jzrYy+WtZAALTKxtZTULySTfipNT8XwgftnJx1cCaPol3S/XyP2e5r1Pszl4&#xA;fE00hqMXfD6h74878hfweh2t1a3dvHc2syXFvKOUU0TB0YeKspIIzIeclExNEUQq4sXYq7FXYqg9&#xA;ZcJpF8xqQIJK8QWP2D2FTiqMxV2KuxV2KuxV2KuxV2KoC8nWDUYJHVjGtvcNIyivFVaIkkdT0/ZB&#xA;OJLKMTIgDqwg/nDPdxq+g+Udb1ONzSK4NuYYH7VEo9Tb5jMH87f0wkfg9SPZgQNZ9RhxnqOK5D4b&#xA;O/Tv52am4Wy8uafokLg/vtRufrBFem0BDA/NMfE1EuURH3lfyfY+EevNkynuhHh/3X63H8uvPesB&#xA;B5n86XJtiD61jpUSWg36D1loWUV/aj3x/LZJfXM/DZf5c0WD/FtNHi6SyEz/ANj0Pukn3lr8svJP&#xA;l1ll0/TIzdih+uXFZ5uQ/aDyV4H/AFKZdi0mOHIbut1/b+s1W2SZ4f5o9I+Q5/G2UZkOmdirsVdi&#xA;rsVSfzd/xw5v9ZP+JDFXnPlRFXzHdkChbU4CxqDU/V7YV26bDvirLtd/MnS9I832vl2X0D6ttNd3&#xA;l49zHGtrHbqJJRKhq3P0W9VF/aQMdguKqqeeZbvUbFNJ0ubUdJvSg/S0YlWOPlIY5OamI8TEVPIM&#xA;RQ7GmKsP87eevMml+YNetPLmrR61d22mzT3Ghx/UBLpjL6ZjuUSSSKSULHzMwkc/E0fFaEriqL8u&#xA;efdTl1fUBPqSXatpFncQaa8tlIbbU5F4m0m+rJG0U07uvCJpJS+5UrTjirH5/wA2NS0jyHB5ku9c&#xA;/SEFvrUFtHdcbWJdQhksI5p4PhipSG5kljrCnqD06HkwYMqkHmH8xbi51SZtW17SdS8rxa1eRC2u&#xA;LzTmV1h0iS9Szo2nFo4frSrCLkSmX4uPHmQRGcIyFEW36fVZcMuLHKUJd4NMi8g+RtO8zeWbXzV5&#xA;S1O58o3GoHlLZadetqFmvpsQqsxW3Lt05KTRTVeoOYv5Th/u5GPlzHyeij7USyCtVix59qsjhn/p&#xA;hy+AZIY/z40cN6c2leZYiw4+optbgL8l9CIfe2R/wiP82f2H9TK+xc/TLpz/AKaP6ZfcuT8zfOdn&#xA;MIda8h6kgXaWbTiL0E9yoRQtP9niNVMfVCXw3WXYGkyC8OrxHyn6Pv8A1L4vz28lLN6WpQ6jpDd/&#xA;rtoy0+iIyt+GI7Qx9bj7wiXsfrCLxnHl/qzH6aTG3/OT8s5wCmuxCpoPUjmj/wCJouTGuwn+JxJ+&#xA;y3aMeeI/AxP3FM5PNXlzVtLv00nUrXUZktpXaC2nikkC8SKlQ1QK+OXwzQl9JBdZqez9RgF5cc4D&#xA;vMSB82QZY4bsVdirsVdirsVdirsVQ1zbXD3EU8EqRvGjoQ6FwQ5U9mT+TFVjQ6uSpW6gABqw+rua&#xA;ihFP77bffFXPDq5FFuoFNQa/V3OwNSP77uNsVSbWfNWladPLp1/5j0zT78wmX0pqJKkbVUS8GnBo&#xA;DvXFUw0/UjqPr/UNTsrr6rK1vc+jGX9OZPtRvxmNGXuMVRKQ6uEUPdQM4ADN9XcVPc09bFXJDq4F&#xA;GuoGNSa/V3GxNQP77sNsVcsOrgsWuoCCaqPq7igoBT++333xV3pauHZjd2/CgovoPsRWpr63fbFU&#xA;g/xroDQxagvmnSTZNHKyuCpjdY5Y4WcN6/RJJFT5uPEYqmeq6XqepWX1f69BHG5DMy27NUDcU/fe&#xA;NMVSPT/y9u7G+e8h1OMySXMdy4Ns1CY1jTj/AH3dYhiqda35fk1nSr3TL57aS2voXgnBgcErIpQ7&#xA;iYN08DiqrpOjTaTp0GnWEkENpbLwij9GRj1qSzNMWZmJJZiak7nFVPUNU/REFs2ravY2guJUtoZJ&#xA;4zEJZ3+yicp92ah2GKoTR/M+najcfU7DzDp19dt6sixRLycosjKaKJ6lVIK19sVThYdXBYtdQEE1&#xA;UfV3FBQCn99vvvirhDq/Mk3UHAgAL9XfYitTX1u+2KuMOr8wRdQcACCv1d9yaUNfW7b4q5odXJUr&#xA;dQAA1YfV3NRQin99tvviqUXnmTT4rm4sZPMGnQXtm8H1qAgerGZWDRo6evyBlHQeBxVGWGoPrGnm&#xA;60rVLK7tpOSJcwxGWPkNjus1DTFVG78qafeSNJd2Wl3EjfaeWwV2PzLSHKzigeYHycvH2hqICo5J&#xA;xHlIj9KGtPI+nWSyvYWmmWN5NA9s91a2AhYrIBy2SVe4BpjHDCJsAAss/aWpzR4MmSc43dSkT97J&#xA;sscJ2KuxV2KuxV2KuxV2KuxV2KuxVh/m78uLfzNe3Et3qU8Vpc2T2EllHFblQkrq0siu8bSLI4jQ&#xA;V5bcRTFUy8qeTdO8tC9+pyyzfXZfUJmKngi14RLxVfhXkdzVvE4qn2KuxV2KuIqCPHbFXmA/IPQH&#xA;vZNTudX1CfV5Y543vS0I2uJopjxiEfpLxMJUALSjHwXiq9Ks7WGztILSAcYLeNYolJqQiKFUVPsM&#xA;VVcVdirsVSXzX5a/xDYQ2RvZbFI7iK4keFIZDIsTcxGwnSVeJYAnbelDVSQVUg8s/lHoOga5HrNv&#xA;c3ElyhaRoCIorf1mWVPUjhiREiHC5k+BKKSeRHKpKrOcVdirsVdirA/Nf5Q6R5o1mXUtV1C6KkxG&#xA;3tohAiwCOOSNjHII/UDsJnPPlyBpQ/CtFU/8neULDyrpJ02ymlnRnEjzTlS7FYkgQfAqL8MUKLsN&#xA;6V6nFU9xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV5d+dn5bXfmxbC403Tba+vW&#xA;hvNKu5JxHyhtr2ElLlDIyVa3uIo2UA13NO+KsTv/ACZ+ZyaVq1rp3l9bVfMlnG2sw2aaIh9eVLxZ&#xA;YFaU0dV52iSc6jiJDEeRBKqv5J8ufm1pHnm11K70/UTZXLRW2oyyyaNJGtkr3BjhYrL9Y4WwljZe&#xA;FWryFWXiCqvXTfNbfmJNqFloU2pg3OpWPnCRWsBLJYzXfPT7cJfSLziNlHDUBePFmCsHLUVSDRfy&#xA;+/NTyxY6fL5e0jUbfWzo+m6fc6gieWS9sYpJDewRcmj9WMkpIpk5PIVAaQHcKvY/yz9b9E6hRXXT&#xA;vrznTVdg9E9GL6wFZQqMn136xwKAJxpwHGmKsvxV2KuxV2KuxV2KuxV2KuxV/9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:374AEA052240DE11AC91D52DFC338480</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:BA757E203240DE11AC91D52DFC338480</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource"/>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>800.000000</stDim:w>
            <stDim:h>600.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>True</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>TimesNewRomanPS-ItalicMT</stFnt:fontName>
                  <stFnt:fontFamily>Times New Roman</stFnt:fontFamily>
                  <stFnt:fontFace>Italic</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.00.3x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times New Roman Italic.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Times-Roman</stFnt:fontName>
                  <stFnt:fontFamily>Times</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.0d6e5</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>TimesNewRomanPSMT</stFnt:fontName>
                  <stFnt:fontFamily>Times New Roman</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.01.3x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times New Roman.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -207.68 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 207.68 li
391 207.68 li
391 0 li
cp
clp
[1 0 0 1 0 0 ]ct
242.496 176.499 mo
228.996 176.499 li
228.996 5.499 li
242.496 5.499 li
242.496 176.499 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0.262745 0.207843 0.211765 0 cmyk
f
111.385 169.582 mo
111.51 169.519 li
111.063 168.625 li
111.063 169.625 li
111.125 169.625 li
111.25 169.625 li
111.349 169.625 li
111.711 169.553 li
112.287 169.495 li
112.316 169.492 li
113.517 169.302 li
115.957 168.99 li
121.294 168.111 li
126.245 167.233 li
131.081 166.291 li
136.365 165.096 li
141.27 163.775 li
146.624 162.201 li
151.86 160.308 li
156.784 158.288 li
162.092 155.697 li
167.174 152.802 li
167.332 152.645 li
167.395 152.582 li
166.688 151.875 li
167.135 152.769 li
167.26 152.707 li
167.294 152.69 li
167.639 152.482 li
168.264 152.107 li
168.29 152.092 li
169.512 151.256 li
172.024 149.452 li
172.145 149.332 li
172.207 149.27 li
171.5 148.563 li
172.055 149.395 li
172.242 149.27 li
172.278 149.245 li
172.607 148.983 li
173.276 148.496 li
173.284 148.49 li
174.634 147.462 li
177.125 145.274 li
177.135 145.269 li
177.28 145.197 li
177.457 145.02 li
177.527 144.95 li
177.621 144.809 li
177.812 144.656 li
177.835 144.638 li
178.481 144.056 li
178.501 144.038 li
179.717 142.823 li
182.162 140.252 li
181.438 139.563 li
181.885 140.457 li
182.01 140.394 li
182.155 140.322 li
182.332 140.145 li
182.52 139.957 li
182.552 139.925 li
182.878 139.533 li
183.564 138.785 li
184.903 137.191 li
187.6 133.723 li
187.707 133.51 li
186.813 133.063 li
187.26 133.957 li
187.385 133.894 li
187.683 133.745 li
187.922 133.267 li
188.185 132.899 li
188.875 131.957 li
190.208 130.054 li
192.81 125.929 li
192.894 125.76 li
192.917 125.715 li
193.05 125.537 li
193.075 125.504 li
193.41 124.967 li
193.429 124.937 li
194.001 123.857 li
195.251 121.669 li
197.735 116.956 li
197.824 116.691 li
197.851 116.608 li
197.982 116.389 li
198.012 116.341 li
198.34 115.619 li
199.027 114.244 li
200.353 111.339 li
202.999 105.04 li
203.074 104.816 li
203.136 104.629 li
203.254 104.275 li
203.556 103.49 li
204.182 101.925 li
205.44 98.5908 li
207.888 91.5611 li
213.211 74.2135 li
218.404 54.8188 li
223.287 36.0993 li
223.338 35.8486 li
223.428 35.6214 li
223.463 35.5361 li
223.595 34.8744 li
223.962 33.7124 li
224.59 31.2609 li
225.874 26.7383 li
225.957 26.5722 li
226.017 26.4524 li
226.09 26.088 li
226.249 25.6636 li
226.264 25.6224 li
226.587 24.4613 li
227.204 22.3621 li
228.489 18.5087 li
228.582 18.3222 li
228.614 18.2587 li
228.699 18.0037 li
228.706 17.9831 li
228.824 17.5674 li
229.121 16.7965 li
229.754 15.1505 li
229.781 15.0683 li
229.832 14.9922 li
229.906 14.8808 li
230.062 14.4132 li
230.354 13.7118 li
230.965 12.3684 li
231.019 12.2597 li
231.051 12.1962 li
231.101 12.0454 li
231.232 11.827 li
231.241 11.8125 li
231.562 11.2356 li
231.607 11.1544 li
231.676 10.9462 li
231.707 10.8847 li
230.813 10.4375 li
231.612 11.0375 li
231.8 10.7875 li
231.841 10.7328 li
232.187 10.1106 li
232.197 10.0913 li
232.269 9.94721 li
232.332 9.82221 li
232.436 9.61469 li
232.723 9.155 li
231.875 8.625 li
232.322 9.51943 li
232.447 9.45693 li
232.745 9.30786 li
232.929 8.9404 li
233.011 8.81823 li
233.266 8.46103 li
233.27 8.45711 li
233.395 8.33211 li
233.52 8.20711 li
233.634 8.09236 li
233.769 7.82221 li
232.875 7.375 li
233.582 8.08211 li
233.645 8.01961 li
232.938 7.3125 li
233.492 8.14455 li
233.68 8.01955 li
233.901 7.87224 li
234.082 7.50971 li
233.188 7.0625 li
233.895 7.76961 li
233.957 7.70711 li
233.25 7 li
233.805 7.83205 li
233.992 7.70705 li
234.028 7.68292 li
234.375 7.40587 li
234.418 7.37134 li
234.52 7.26961 li
233.813 6.5625 li
233.813 7.5625 li
233.875 7.5625 li
234.289 7.5625 li
234.707 7.14461 li
234 6.4375 li
234.447 7.33193 li
234.572 7.26943 li
234.125 6.375 li
234.125 7.375 li
234.188 7.375 li
234.602 7.375 li
235.02 6.95711 li
234.313 6.25 li
234.313 7.25 li
234.375 7.25 li
234.611 7.25 li
234.947 7.08193 li
234.5 6.1875 li
234.5 7.1875 li
234.563 7.1875 li
234.977 7.1875 li
235.332 6.83211 li
234.625 6.125 li
234.625 7.125 li
234.688 7.125 li
235.102 7.125 li
235.457 6.76961 li
234.75 6.0625 li
234.75 7.0625 li
234.875 7.0625 li
234.938 7.0625 li
235.352 7.0625 li
235.707 6.70711 li
235 6 li
235 7 li
235.063 7 li
235.125 7 li
235.25 7 li
235.313 7 li
235.375 7 li
235.438 7 li
235.852 7 li
236.207 6.64461 li
235.5 5.9375 li
235.053 6.83193 li
235.178 6.89443 li
235.389 7 li
235.688 7 li
235.75 7 li
235.813 7 li
235.938 7 li
236 7 li
236.063 7 li
236.063 6 li
235.355 6.70711 li
235.418 6.76961 li
235.711 7.0625 li
236.188 7.0625 li
236.313 7.0625 li
236.313 6.0625 li
235.605 6.76961 li
235.668 6.83211 li
235.961 7.125 li
236.438 7.125 li
236.438 6.125 li
235.73 6.83211 li
235.793 6.89461 li
236.086 7.1875 li
236.4 7.1875 li
236.434 7.19868 li
236.75 6.25 li
236.043 6.95711 li
236.105 7.01961 li
236.168 7.08211 li
236.335 7.24904 li
236.746 7.38618 li
237.063 6.4375 li
236.355 7.14461 li
236.418 7.20711 li
236.48 7.26961 li
236.595 7.38436 li
236.865 7.51943 li
236.99 7.58193 li
237.438 6.6875 li
236.73 7.39461 li
236.793 7.45711 li
236.98 7.64461 li
237.043 7.70711 li
237.105 7.76961 li
237.293 7.95711 li
237.355 8.01961 li
237.47 8.13436 li
237.74 8.26943 li
238.188 7.375 li
237.355 7.9297 li
237.48 8.1172 li
237.489 8.13058 li
237.811 8.58124 li
237.956 8.78334 li
238.303 8.95693 li
238.75 8.0625 li
237.856 8.50971 li
237.918 8.63471 li
237.958 8.71528 li
238.193 9.02822 li
238.473 9.42024 li
239.09 10.4688 li
239.196 10.6279 li
239.231 10.6972 li
239.248 10.7316 li
239.435 11.0441 li
239.722 11.6181 li
240.373 13.0499 li
240.469 13.1933 li
240.489 13.2537 li
240.511 13.3212 li
240.715 13.729 li
241.009 14.4342 li
241.607 15.9894 li
241.655 16.18 li
241.697 16.3481 li
241.844 16.5683 li
241.926 16.8162 li
241.93 16.8264 li
242.246 17.7113 li
242.864 19.4436 li
244.043 23.1669 li
246.491 31.5146 li
246.6 31.7862 li
246.644 32.0086 li
246.654 32.0548 li
246.85 32.7088 li
247.16 33.887 li
247.847 36.3244 li
249.157 41.376 li
251.782 51.5641 li
256.975 71.1455 li
261.848 87.5139 li
261.905 87.7425 li
261.931 87.849 li
262.056 88.0991 li
262.155 88.4925 li
262.162 88.5209 li
262.487 89.5617 li
263.178 91.5719 li
264.494 95.4578 li
267.105 102.545 li
267.155 102.743 li
267.197 102.911 li
267.344 103.131 li
267.426 103.379 li
267.433 103.4 li
267.754 104.234 li
267.759 104.247 li
268.387 105.753 li
269.579 108.766 li
272.097 114.306 li
272.136 114.384 li
272.176 114.504 li
272.186 114.532 li
272.322 114.871 li
272.337 114.91 li
272.668 115.572 li
273.293 116.822 li
274.489 119.215 li
276.927 123.652 li
276.981 123.76 li
277.043 123.885 li
277.06 123.919 li
277.259 124.25 li
277.563 124.798 li
277.569 124.808 li
278.206 125.891 li
279.533 128.04 li
282.223 132.075 li
282.355 132.207 li
282.41 132.262 li
282.48 132.367 li
282.49 132.381 li
282.811 132.831 li
283.445 133.718 li
284.651 135.306 li
287.131 138.358 li
287.23 138.457 li
287.285 138.512 li
287.355 138.617 li
287.41 138.7 li
287.823 139.112 li
288.419 139.828 li
288.441 139.853 li
289.785 141.262 li
292.48 143.957 li
292.543 144.02 li
292.605 144.082 li
292.675 144.152 li
292.816 144.246 li
292.969 144.437 li
293.02 144.501 li
293.706 145.118 li
293.717 145.128 li
294.982 146.203 li
297.452 148.241 li
297.48 148.27 li
297.543 148.332 li
297.668 148.457 li
297.755 148.544 li
298.115 148.76 li
298.688 149.218 li
298.703 149.23 li
299.919 150.126 li
302.368 151.822 li
302.938 151 li
302.23 151.707 li
302.293 151.77 li
302.586 152.063 li
303.063 152.063 li
303.063 151.063 li
302.508 151.895 li
302.659 151.995 li
302.938 152.218 li
303.006 152.273 li
303.747 152.677 li
305.051 153.485 li
307.711 155.005 li
312.634 157.529 li
318.005 159.867 li
323.24 161.759 li
328.153 163.334 li
333.439 164.781 li
338.406 165.976 li
343.248 166.982 li
348.517 167.923 li
353.41 168.738 li
358.805 169.5 li
358.938 169.5 li
360 169.5 li
360 167.5 li
358.938 167.5 li
358.875 167.5 li
358.875 168.5 li
359.015 167.51 li
353.715 166.762 li
348.858 165.952 li
343.627 165.018 li
338.844 164.024 li
333.936 162.844 li
328.722 161.416 li
323.885 159.866 li
318.745 158.008 li
313.491 155.721 li
308.664 153.245 li
306.074 151.765 li
304.753 150.948 li
304.119 150.602 li
303.875 150.407 li
303.841 150.38 li
303.617 150.23 li
303.365 150.063 li
303 150.063 li
303 151.063 li
303.707 150.355 li
303.645 150.293 li
303.581 150.229 li
301.081 148.499 li
299.922 147.645 li
299.312 147.157 li
299.26 147.115 li
298.995 146.956 li
298.957 146.918 li
298.895 146.855 li
298.832 146.793 li
298.798 146.759 li
296.268 144.671 li
295.034 143.622 li
294.48 143.124 li
294.281 142.875 li
294.184 142.754 li
293.867 142.543 li
293.313 143.375 li
294.02 142.668 li
293.957 142.605 li
293.895 142.543 li
291.216 139.864 li
289.934 138.521 li
289.331 137.797 li
289.302 137.763 li
288.965 137.425 li
288.895 137.32 li
288.84 137.238 li
288.645 137.043 li
288.618 137.017 li
286.224 134.07 li
285.055 132.532 li
284.439 131.669 li
284.135 131.244 li
284.02 131.07 li
283.965 130.988 li
283.77 130.793 li
283.707 130.73 li
283 131.438 li
283.832 130.883 li
281.216 126.959 li
279.919 124.859 li
279.306 123.817 li
278.999 123.264 li
278.991 123.25 li
278.815 122.956 li
278.769 122.865 li
278.707 122.74 li
278.698 122.723 li
276.261 118.285 li
275.082 115.928 li
274.457 114.678 li
274.163 114.09 li
274.064 113.844 li
274.011 113.684 li
273.989 113.616 li
273.902 113.444 li
271.421 107.984 li
270.238 104.997 li
269.616 103.503 li
269.317 102.725 li
269.199 102.371 li
269.156 102.244 li
269.053 102.089 li
269.033 102.007 li
269.02 101.955 li
266.38 94.792 li
265.072 90.9292 li
264.388 88.9381 li
264.088 87.9791 li
263.97 87.5075 li
263.943 87.4009 li
263.818 87.1509 li
263.783 87.0075 li
263.777 86.9861 li
258.9 70.605 li
253.718 51.0604 li
251.096 40.8855 li
249.778 35.8011 li
249.09 33.3631 li
248.775 32.1666 li
248.596 31.5703 li
248.543 31.3039 li
248.525 31.2139 li
248.384 30.8606 li
245.957 22.5834 li
244.76 18.8063 li
244.129 17.0387 li
243.82 16.1739 li
243.699 15.8088 li
243.656 15.6817 li
243.553 15.5269 li
243.533 15.445 li
243.518 15.3856 li
242.866 13.6906 li
242.548 12.9279 li
242.535 12.8957 li
242.364 12.5539 li
242.324 12.4338 li
242.281 12.3067 li
242.127 12.075 li
241.527 10.7564 li
241.207 10.1153 li
241.19 10.0809 li
241.002 9.76847 li
240.957 9.67779 li
240.929 9.62221 li
240.785 9.4061 li
240.152 8.3296 li
239.814 7.85626 li
239.807 7.84664 li
239.667 7.6597 li
239.644 7.61529 li
239.495 7.31714 li
239.294 7.21664 li
239.135 6.9941 li
239.02 6.8203 li
238.872 6.59934 li
238.51 6.41807 li
238.063 7.3125 li
238.77 6.60539 li
238.707 6.54289 li
238.52 6.35539 li
238.457 6.29289 li
238.395 6.23039 li
238.207 6.04289 li
238.145 5.98039 li
238.03 5.86565 li
237.76 5.73057 li
237.635 5.66807 li
237.188 6.5625 li
237.895 5.85539 li
237.832 5.79289 li
237.77 5.73039 li
237.603 5.56347 li
237.191 5.42632 li
236.875 6.375 li
237.582 5.66789 li
237.52 5.60539 li
237.457 5.54289 li
237.29 5.37596 li
236.879 5.23882 li
236.725 5.1875 li
236.5 5.1875 li
236.5 6.1875 li
237.207 5.48039 li
237.145 5.41789 li
236.852 5.125 li
236.375 5.125 li
236.375 6.125 li
237.082 5.41789 li
237.02 5.35539 li
236.727 5.0625 li
236.188 5.0625 li
236.125 5.0625 li
236.125 6.0625 li
236.832 5.35539 li
236.77 5.29289 li
236.477 5 li
236 5 li
235.938 5 li
235.813 5 li
235.75 5 li
235.688 5 li
235.625 5 li
235.625 6 li
236.072 5.10557 li
235.947 5.04307 li
235.303 4.72075 li
234.73 5.29289 li
235.438 6 li
235.438 5 li
235.375 5 li
235.313 5 li
235.25 5 li
235.125 5 li
235.063 5 li
235 5 li
234.586 5 li
234.23 5.35539 li
234.938 6.0625 li
234.938 5.0625 li
234.875 5.0625 li
234.75 5.0625 li
234.336 5.0625 li
233.98 5.41789 li
234.688 6.125 li
234.688 5.125 li
234.625 5.125 li
234.211 5.125 li
233.855 5.48039 li
234.563 6.1875 li
234.563 5.1875 li
234.5 5.1875 li
234.264 5.1875 li
233.928 5.35557 li
234.375 6.25 li
234.375 5.25 li
234.313 5.25 li
233.898 5.25 li
233.48 5.66789 li
234.188 6.375 li
234.188 5.375 li
234.125 5.375 li
233.889 5.375 li
233.553 5.54307 li
233.408 5.61565 li
233.168 5.85539 li
233.875 6.5625 li
233.875 5.5625 li
233.813 5.5625 li
233.398 5.5625 li
233.082 5.87873 li
232.847 6.06709 li
232.695 6.16795 li
232.613 6.22285 li
232.48 6.35539 li
232.366 6.47017 li
232.231 6.74029 li
233.125 7.1875 li
232.57 6.35545 li
232.383 6.48045 li
232.3 6.53542 li
232.168 6.66789 li
232.053 6.78267 li
231.991 6.90769 li
231.98 6.91789 li
231.855 7.04289 li
231.793 7.10539 li
231.734 7.16393 li
231.374 7.66876 li
231.364 7.68184 li
231.23 7.8828 li
231.196 7.93459 li
231.106 8.11529 li
232 8.5625 li
231.553 7.66807 li
231.428 7.73057 li
231.176 7.8564 li
230.714 8.595 li
230.689 8.63538 li
230.543 8.92779 li
230.481 9.05279 li
230.428 9.15825 li
230.159 9.64214 li
230.012 9.8375 li
229.958 9.90969 li
229.856 10.1153 li
229.824 10.1788 li
229.768 10.3456 li
229.509 10.812 li
229.33 11.1105 li
229.273 11.2047 li
229.199 11.4288 li
229.168 11.4903 li
229.16 11.5065 li
228.521 12.9131 li
228.202 13.6779 li
228.188 13.7115 li
228.094 13.9942 li
228.043 14.0703 li
227.969 14.1817 li
227.871 14.4747 li
227.254 16.0785 li
226.942 16.891 li
226.926 16.9326 li
226.794 17.3923 li
226.761 17.4913 li
226.668 17.6778 li
226.636 17.7414 li
225.296 21.7633 li
224.663 23.9131 li
224.361 25.0025 li
224.189 25.4614 li
224.16 25.5371 li
224.108 25.7976 li
224.043 25.9278 li
224.001 26.0117 li
222.66 30.7391 li
222.038 33.1631 li
221.655 34.3757 li
221.537 34.964 li
221.447 35.1911 li
221.412 35.2764 li
221.337 35.651 li
216.47 54.3078 li
211.289 73.6616 li
205.987 90.9385 li
203.56 97.9091 li
202.318 101.2 li
201.694 102.76 li
201.379 103.579 li
201.371 103.6 li
201.239 103.996 li
201.176 104.184 li
201.126 104.335 li
198.521 110.536 li
197.223 113.381 li
196.535 114.757 li
196.238 115.409 li
196.08 115.673 li
196.024 115.767 li
195.926 116.059 li
195.89 116.169 li
193.498 120.706 li
192.249 122.893 li
191.696 123.938 li
191.425 124.371 li
191.262 124.587 li
191.208 124.66 li
191.106 124.865 li
191.065 124.946 li
188.542 128.946 li
187.249 130.794 li
186.564 131.727 li
186.249 132.169 li
186.203 132.233 li
186.043 132.553 li
186.938 133 li
186.49 132.106 li
186.365 132.168 li
186.067 132.317 li
185.9 132.652 li
183.347 135.933 li
182.061 137.465 li
181.372 138.217 li
181.073 138.575 li
180.918 138.73 li
180.855 138.793 li
181.563 139.5 li
181.115 138.606 li
180.99 138.668 li
180.834 138.746 li
178.283 141.427 li
177.124 142.587 li
176.54 143.112 li
176.25 143.344 li
176.129 143.441 li
175.918 143.758 li
176.75 144.313 li
176.043 143.605 li
175.98 143.668 li
176.688 144.375 li
176.24 143.481 li
176.115 143.543 li
176 143.601 li
173.366 145.913 li
172.09 146.885 li
171.412 147.379 li
171.393 147.392 li
171.097 147.63 li
170.945 147.73 li
170.863 147.785 li
170.73 147.918 li
170.726 147.923 li
168.364 149.618 li
167.21 150.408 li
166.611 150.768 li
166.331 150.935 li
166.24 150.981 li
166.095 151.053 li
165.918 151.23 li
165.855 151.293 li
166.563 152 li
166.068 151.131 li
161.158 153.928 li
155.966 156.462 li
151.14 158.442 li
146.001 160.299 li
140.729 161.85 li
135.885 163.154 li
130.669 164.334 li
125.88 165.267 li
120.956 166.139 li
115.667 167.01 li
113.232 167.323 li
112.06 167.508 li
111.463 167.567 li
111.414 167.572 li
111.151 167.625 li
111.125 167.625 li
111.063 167.625 li
110.826 167.625 li
109.596 168.24 li
110.49 170.029 li
cp
0.882353 0.768627 0 0 cmyk
f
112.438 169.25 mo
112.438 168.875 112.25 168.5 112 168.188 cv
111.688 167.938 111.313 167.75 110.938 167.75 cv
110.563 167.75 110.188 167.938 109.875 168.188 cv
109.625 168.5 109.438 168.875 109.438 169.25 cv
109.438 169.625 109.625 170 109.875 170.313 cv
110.188 170.563 110.563 170.75 110.938 170.75 cv
111.313 170.75 111.688 170.563 112 170.313 cv
112.25 170 112.438 169.625 112.438 169.25 cv
cp
0 0.992157 1 0 cmyk
f
113.813 168.375 mo
113.813 168 113.625 167.625 113.375 167.313 cv
113.063 167.063 112.688 166.875 112.313 166.875 cv
111.938 166.875 111.563 167.063 111.25 167.313 cv
111 167.625 110.813 168 110.813 168.375 cv
110.813 168.75 111 169.125 111.25 169.438 cv
111.563 169.688 111.938 169.875 112.313 169.875 cv
112.688 169.875 113.063 169.688 113.375 169.438 cv
113.625 169.125 113.813 168.75 113.813 168.375 cv
cp
f
115.25 168.125 mo
115.25 167.75 115.063 167.375 114.813 167.063 cv
114.5 166.813 114.125 166.625 113.75 166.625 cv
113.375 166.625 113 166.813 112.688 167.063 cv
112.438 167.375 112.25 167.75 112.25 168.125 cv
112.25 168.5 112.438 168.875 112.688 169.188 cv
113 169.438 113.375 169.625 113.75 169.625 cv
114.125 169.625 114.5 169.438 114.813 169.188 cv
115.063 168.875 115.25 168.5 115.25 168.125 cv
cp
f
116.625 167.875 mo
116.625 167.5 116.438 167.125 116.188 166.813 cv
115.875 166.563 115.5 166.375 115.125 166.375 cv
114.75 166.375 114.375 166.563 114.063 166.813 cv
113.813 167.125 113.625 167.5 113.625 167.875 cv
113.625 168.25 113.813 168.625 114.063 168.938 cv
114.375 169.188 114.75 169.375 115.125 169.375 cv
115.5 169.375 115.875 169.188 116.188 168.938 cv
116.438 168.625 116.625 168.25 116.625 167.875 cv
cp
f
118 168 mo
118 167.625 117.813 167.25 117.563 166.938 cv
117.25 166.688 116.875 166.5 116.5 166.5 cv
116.125 166.5 115.75 166.688 115.438 166.938 cv
115.188 167.25 115 167.625 115 168 cv
115 168.375 115.188 168.75 115.438 169.063 cv
115.75 169.313 116.125 169.5 116.5 169.5 cv
116.875 169.5 117.25 169.313 117.563 169.063 cv
117.813 168.75 118 168.375 118 168 cv
cp
f
119.375 167.438 mo
119.375 167.063 119.188 166.688 118.938 166.375 cv
118.625 166.125 118.25 165.938 117.875 165.938 cv
117.5 165.938 117.125 166.125 116.813 166.375 cv
116.563 166.688 116.375 167.063 116.375 167.438 cv
116.375 167.813 116.563 168.188 116.813 168.5 cv
117.125 168.75 117.5 168.938 117.875 168.938 cv
118.25 168.938 118.625 168.75 118.938 168.5 cv
119.188 168.188 119.375 167.813 119.375 167.438 cv
cp
f
120.75 167.5 mo
120.75 167.125 120.563 166.75 120.313 166.438 cv
120 166.188 119.625 166 119.25 166 cv
118.875 166 118.5 166.188 118.188 166.438 cv
117.938 166.75 117.75 167.125 117.75 167.5 cv
117.75 167.875 117.938 168.25 118.188 168.563 cv
118.5 168.813 118.875 169 119.25 169 cv
119.625 169 120 168.813 120.313 168.563 cv
120.563 168.25 120.75 167.875 120.75 167.5 cv
cp
f
122.125 167.25 mo
122.125 166.875 121.938 166.5 121.688 166.188 cv
121.375 165.938 121 165.75 120.625 165.75 cv
120.25 165.75 119.875 165.938 119.563 166.188 cv
119.313 166.5 119.125 166.875 119.125 167.25 cv
119.125 167.625 119.313 168 119.563 168.313 cv
119.875 168.563 120.25 168.75 120.625 168.75 cv
121 168.75 121.375 168.563 121.688 168.313 cv
121.938 168 122.125 167.625 122.125 167.25 cv
cp
f
123.5 166.875 mo
123.5 166.5 123.313 166.125 123.063 165.813 cv
122.75 165.563 122.375 165.375 122 165.375 cv
121.625 165.375 121.25 165.563 120.938 165.813 cv
120.688 166.125 120.5 166.5 120.5 166.875 cv
120.5 167.25 120.688 167.625 120.938 167.938 cv
121.25 168.188 121.625 168.375 122 168.375 cv
122.375 168.375 122.75 168.188 123.063 167.938 cv
123.313 167.625 123.5 167.25 123.5 166.875 cv
cp
f
124.875 166.875 mo
124.875 166.5 124.688 166.125 124.438 165.813 cv
124.125 165.563 123.75 165.375 123.375 165.375 cv
123 165.375 122.625 165.563 122.313 165.813 cv
122.063 166.125 121.875 166.5 121.875 166.875 cv
121.875 167.25 122.063 167.625 122.313 167.938 cv
122.625 168.188 123 168.375 123.375 168.375 cv
123.75 168.375 124.125 168.188 124.438 167.938 cv
124.688 167.625 124.875 167.25 124.875 166.875 cv
cp
f
126.25 166.25 mo
126.25 165.875 126.063 165.5 125.813 165.188 cv
125.5 164.938 125.125 164.75 124.75 164.75 cv
124.375 164.75 124 164.938 123.688 165.188 cv
123.438 165.5 123.25 165.875 123.25 166.25 cv
123.25 166.625 123.438 167 123.688 167.313 cv
124 167.563 124.375 167.75 124.75 167.75 cv
125.125 167.75 125.5 167.563 125.813 167.313 cv
126.063 167 126.25 166.625 126.25 166.25 cv
cp
f
127.625 166.438 mo
127.625 166.063 127.438 165.688 127.188 165.375 cv
126.875 165.125 126.5 164.938 126.125 164.938 cv
125.75 164.938 125.375 165.125 125.063 165.375 cv
124.813 165.688 124.625 166.063 124.625 166.438 cv
124.625 166.813 124.813 167.188 125.063 167.5 cv
125.375 167.75 125.75 167.938 126.125 167.938 cv
126.5 167.938 126.875 167.75 127.188 167.5 cv
127.438 167.188 127.625 166.813 127.625 166.438 cv
cp
f
129 165.813 mo
129 165.438 128.813 165.063 128.563 164.75 cv
128.25 164.5 127.875 164.313 127.5 164.313 cv
127.125 164.313 126.75 164.5 126.438 164.75 cv
126.188 165.063 126 165.438 126 165.813 cv
126 166.188 126.188 166.563 126.438 166.875 cv
126.75 167.125 127.125 167.313 127.5 167.313 cv
127.875 167.313 128.25 167.125 128.563 166.875 cv
128.813 166.563 129 166.188 129 165.813 cv
cp
f
130.375 165.875 mo
130.375 165.5 130.188 165.125 129.938 164.813 cv
129.625 164.563 129.25 164.375 128.875 164.375 cv
128.5 164.375 128.125 164.563 127.813 164.813 cv
127.563 165.125 127.375 165.5 127.375 165.875 cv
127.375 166.25 127.563 166.625 127.813 166.938 cv
128.125 167.188 128.5 167.375 128.875 167.375 cv
129.25 167.375 129.625 167.188 129.938 166.938 cv
130.188 166.625 130.375 166.25 130.375 165.875 cv
cp
f
131.75 165.25 mo
131.75 164.875 131.563 164.5 131.313 164.188 cv
131 163.938 130.625 163.75 130.25 163.75 cv
129.875 163.75 129.5 163.938 129.188 164.188 cv
128.938 164.5 128.75 164.875 128.75 165.25 cv
128.75 165.625 128.938 166 129.188 166.313 cv
129.5 166.563 129.875 166.75 130.25 166.75 cv
130.625 166.75 131 166.563 131.313 166.313 cv
131.563 166 131.75 165.625 131.75 165.25 cv
cp
f
133.125 165.313 mo
133.125 164.938 132.938 164.563 132.688 164.25 cv
132.375 164 132 163.813 131.625 163.813 cv
131.25 163.813 130.875 164 130.563 164.25 cv
130.313 164.563 130.125 164.938 130.125 165.313 cv
130.125 165.688 130.313 166.063 130.563 166.375 cv
130.875 166.625 131.25 166.813 131.625 166.813 cv
132 166.813 132.375 166.625 132.688 166.375 cv
132.938 166.063 133.125 165.688 133.125 165.313 cv
cp
f
134.5 164.813 mo
134.5 164.438 134.313 164.063 134.063 163.75 cv
133.75 163.5 133.375 163.313 133 163.313 cv
132.625 163.313 132.25 163.5 131.938 163.75 cv
131.688 164.063 131.5 164.438 131.5 164.813 cv
131.5 165.188 131.688 165.563 131.938 165.875 cv
132.25 166.125 132.625 166.313 133 166.313 cv
133.375 166.313 133.75 166.125 134.063 165.875 cv
134.313 165.563 134.5 165.188 134.5 164.813 cv
cp
f
135.875 164.438 mo
135.875 164.063 135.688 163.688 135.438 163.375 cv
135.125 163.125 134.75 162.938 134.375 162.938 cv
134 162.938 133.625 163.125 133.313 163.375 cv
133.063 163.688 132.875 164.063 132.875 164.438 cv
132.875 164.813 133.063 165.188 133.313 165.5 cv
133.625 165.75 134 165.938 134.375 165.938 cv
134.75 165.938 135.125 165.75 135.438 165.5 cv
135.688 165.188 135.875 164.813 135.875 164.438 cv
cp
f
137.25 164.188 mo
137.25 163.813 137.063 163.438 136.813 163.125 cv
136.5 162.875 136.125 162.688 135.75 162.688 cv
135.375 162.688 135 162.875 134.688 163.125 cv
134.438 163.438 134.25 163.813 134.25 164.188 cv
134.25 164.563 134.438 164.938 134.688 165.25 cv
135 165.5 135.375 165.688 135.75 165.688 cv
136.125 165.688 136.5 165.5 136.813 165.25 cv
137.063 164.938 137.25 164.563 137.25 164.188 cv
cp
f
138.625 163.625 mo
138.625 163.25 138.438 162.875 138.188 162.563 cv
137.875 162.313 137.5 162.125 137.125 162.125 cv
136.75 162.125 136.375 162.313 136.063 162.563 cv
135.813 162.875 135.625 163.25 135.625 163.625 cv
135.625 164 135.813 164.375 136.063 164.688 cv
136.375 164.938 136.75 165.125 137.125 165.125 cv
137.5 165.125 137.875 164.938 138.188 164.688 cv
138.438 164.375 138.625 164 138.625 163.625 cv
cp
f
140 163.563 mo
140 163.188 139.813 162.813 139.563 162.5 cv
139.25 162.25 138.875 162.063 138.5 162.063 cv
138.125 162.063 137.75 162.25 137.438 162.5 cv
137.188 162.813 137 163.188 137 163.563 cv
137 163.938 137.188 164.313 137.438 164.625 cv
137.75 164.875 138.125 165.063 138.5 165.063 cv
138.875 165.063 139.25 164.875 139.563 164.625 cv
139.813 164.313 140 163.938 140 163.563 cv
cp
f
141.375 163.125 mo
141.375 162.75 141.188 162.375 140.938 162.063 cv
140.625 161.813 140.25 161.625 139.875 161.625 cv
139.5 161.625 139.125 161.813 138.813 162.063 cv
138.563 162.375 138.375 162.75 138.375 163.125 cv
138.375 163.5 138.563 163.875 138.813 164.188 cv
139.125 164.438 139.5 164.625 139.875 164.625 cv
140.25 164.625 140.625 164.438 140.938 164.188 cv
141.188 163.875 141.375 163.5 141.375 163.125 cv
cp
f
142.75 163.313 mo
142.75 162.938 142.563 162.563 142.313 162.25 cv
142 162 141.625 161.813 141.25 161.813 cv
140.875 161.813 140.5 162 140.188 162.25 cv
139.938 162.563 139.75 162.938 139.75 163.313 cv
139.75 163.688 139.938 164.063 140.188 164.375 cv
140.5 164.625 140.875 164.813 141.25 164.813 cv
141.625 164.813 142 164.625 142.313 164.375 cv
142.563 164.063 142.75 163.688 142.75 163.313 cv
cp
f
144.188 162.438 mo
144.188 162.063 144 161.688 143.75 161.375 cv
143.438 161.125 143.063 160.938 142.688 160.938 cv
142.313 160.938 141.938 161.125 141.625 161.375 cv
141.375 161.688 141.188 162.063 141.188 162.438 cv
141.188 162.813 141.375 163.188 141.625 163.5 cv
141.938 163.75 142.313 163.938 142.688 163.938 cv
143.063 163.938 143.438 163.75 143.75 163.5 cv
144 163.188 144.188 162.813 144.188 162.438 cv
cp
f
145.563 161.813 mo
145.563 161.438 145.375 161.063 145.125 160.75 cv
144.813 160.5 144.438 160.313 144.063 160.313 cv
143.688 160.313 143.313 160.5 143 160.75 cv
142.75 161.063 142.563 161.438 142.563 161.813 cv
142.563 162.188 142.75 162.563 143 162.875 cv
143.313 163.125 143.688 163.313 144.063 163.313 cv
144.438 163.313 144.813 163.125 145.125 162.875 cv
145.375 162.563 145.563 162.188 145.563 161.813 cv
cp
f
146.938 161.625 mo
146.938 161.25 146.75 160.875 146.5 160.563 cv
146.188 160.313 145.813 160.125 145.438 160.125 cv
145.063 160.125 144.688 160.313 144.375 160.563 cv
144.125 160.875 143.938 161.25 143.938 161.625 cv
143.938 162 144.125 162.375 144.375 162.688 cv
144.688 162.938 145.063 163.125 145.438 163.125 cv
145.813 163.125 146.188 162.938 146.5 162.688 cv
146.75 162.375 146.938 162 146.938 161.625 cv
cp
f
148.313 161.125 mo
148.313 160.75 148.125 160.375 147.875 160.063 cv
147.563 159.813 147.188 159.625 146.813 159.625 cv
146.438 159.625 146.063 159.813 145.75 160.063 cv
145.5 160.375 145.313 160.75 145.313 161.125 cv
145.313 161.5 145.5 161.875 145.75 162.188 cv
146.063 162.438 146.438 162.625 146.813 162.625 cv
147.188 162.625 147.563 162.438 147.875 162.188 cv
148.125 161.875 148.313 161.5 148.313 161.125 cv
cp
f
149.688 160.813 mo
149.688 160.438 149.5 160.063 149.25 159.75 cv
148.938 159.5 148.563 159.313 148.188 159.313 cv
147.813 159.313 147.438 159.5 147.125 159.75 cv
146.875 160.063 146.688 160.438 146.688 160.813 cv
146.688 161.188 146.875 161.563 147.125 161.875 cv
147.438 162.125 147.813 162.313 148.188 162.313 cv
148.563 162.313 148.938 162.125 149.25 161.875 cv
149.5 161.563 149.688 161.188 149.688 160.813 cv
cp
f
151.063 159.938 mo
151.063 159.563 150.875 159.188 150.625 158.875 cv
150.313 158.625 149.938 158.438 149.563 158.438 cv
149.188 158.438 148.813 158.625 148.5 158.875 cv
148.25 159.188 148.063 159.563 148.063 159.938 cv
148.063 160.313 148.25 160.688 148.5 161 cv
148.813 161.25 149.188 161.438 149.563 161.438 cv
149.938 161.438 150.313 161.25 150.625 161 cv
150.875 160.688 151.063 160.313 151.063 159.938 cv
cp
f
152.438 160 mo
152.438 159.625 152.25 159.25 152 158.938 cv
151.688 158.688 151.313 158.5 150.938 158.5 cv
150.563 158.5 150.188 158.688 149.875 158.938 cv
149.625 159.25 149.438 159.625 149.438 160 cv
149.438 160.375 149.625 160.75 149.875 161.063 cv
150.188 161.313 150.563 161.5 150.938 161.5 cv
151.313 161.5 151.688 161.313 152 161.063 cv
152.25 160.75 152.438 160.375 152.438 160 cv
cp
f
153.813 159.313 mo
153.813 158.938 153.625 158.563 153.375 158.25 cv
153.063 158 152.688 157.813 152.313 157.813 cv
151.938 157.813 151.563 158 151.25 158.25 cv
151 158.563 150.813 158.938 150.813 159.313 cv
150.813 159.688 151 160.063 151.25 160.375 cv
151.563 160.625 151.938 160.813 152.313 160.813 cv
152.688 160.813 153.063 160.625 153.375 160.375 cv
153.625 160.063 153.813 159.688 153.813 159.313 cv
cp
f
155.188 158.563 mo
155.188 158.188 155 157.813 154.75 157.5 cv
154.438 157.25 154.063 157.063 153.688 157.063 cv
153.313 157.063 152.938 157.25 152.625 157.5 cv
152.375 157.813 152.188 158.188 152.188 158.563 cv
152.188 158.938 152.375 159.313 152.625 159.625 cv
152.938 159.875 153.313 160.063 153.688 160.063 cv
154.063 160.063 154.438 159.875 154.75 159.625 cv
155 159.313 155.188 158.938 155.188 158.563 cv
cp
f
156.563 158.25 mo
156.563 157.875 156.375 157.5 156.125 157.188 cv
155.813 156.938 155.438 156.75 155.063 156.75 cv
154.688 156.75 154.313 156.938 154 157.188 cv
153.75 157.5 153.563 157.875 153.563 158.25 cv
153.563 158.625 153.75 159 154 159.313 cv
154.313 159.563 154.688 159.75 155.063 159.75 cv
155.438 159.75 155.813 159.563 156.125 159.313 cv
156.375 159 156.563 158.625 156.563 158.25 cv
cp
f
157.938 157.75 mo
157.938 157.375 157.75 157 157.5 156.688 cv
157.188 156.438 156.813 156.25 156.438 156.25 cv
156.063 156.25 155.688 156.438 155.375 156.688 cv
155.125 157 154.938 157.375 154.938 157.75 cv
154.938 158.125 155.125 158.5 155.375 158.813 cv
155.688 159.063 156.063 159.25 156.438 159.25 cv
156.813 159.25 157.188 159.063 157.5 158.813 cv
157.75 158.5 157.938 158.125 157.938 157.75 cv
cp
f
159.313 156.938 mo
159.313 156.563 159.125 156.188 158.875 155.875 cv
158.563 155.625 158.188 155.438 157.813 155.438 cv
157.438 155.438 157.063 155.625 156.75 155.875 cv
156.5 156.188 156.313 156.563 156.313 156.938 cv
156.313 157.313 156.5 157.688 156.75 158 cv
157.063 158.25 157.438 158.438 157.813 158.438 cv
158.188 158.438 158.563 158.25 158.875 158 cv
159.125 157.688 159.313 157.313 159.313 156.938 cv
cp
f
160.688 156.75 mo
160.688 156.375 160.5 156 160.25 155.688 cv
159.938 155.438 159.563 155.25 159.188 155.25 cv
158.813 155.25 158.438 155.438 158.125 155.688 cv
157.875 156 157.688 156.375 157.688 156.75 cv
157.688 157.125 157.875 157.5 158.125 157.813 cv
158.438 158.063 158.813 158.25 159.188 158.25 cv
159.563 158.25 159.938 158.063 160.25 157.813 cv
160.5 157.5 160.688 157.125 160.688 156.75 cv
cp
f
162.063 155.375 mo
162.063 155 161.875 154.625 161.625 154.313 cv
161.313 154.063 160.938 153.875 160.563 153.875 cv
160.188 153.875 159.813 154.063 159.5 154.313 cv
159.25 154.625 159.063 155 159.063 155.375 cv
159.063 155.75 159.25 156.125 159.5 156.438 cv
159.813 156.688 160.188 156.875 160.563 156.875 cv
160.938 156.875 161.313 156.688 161.625 156.438 cv
161.875 156.125 162.063 155.75 162.063 155.375 cv
cp
f
163.438 155.188 mo
163.438 154.813 163.25 154.438 163 154.125 cv
162.688 153.875 162.313 153.688 161.938 153.688 cv
161.563 153.688 161.188 153.875 160.875 154.125 cv
160.625 154.438 160.438 154.813 160.438 155.188 cv
160.438 155.563 160.625 155.938 160.875 156.25 cv
161.188 156.5 161.563 156.688 161.938 156.688 cv
162.313 156.688 162.688 156.5 163 156.25 cv
163.25 155.938 163.438 155.563 163.438 155.188 cv
cp
f
164.813 154.125 mo
164.813 153.75 164.625 153.375 164.375 153.063 cv
164.063 152.813 163.688 152.625 163.313 152.625 cv
162.938 152.625 162.563 152.813 162.25 153.063 cv
162 153.375 161.813 153.75 161.813 154.125 cv
161.813 154.5 162 154.875 162.25 155.188 cv
162.563 155.438 162.938 155.625 163.313 155.625 cv
163.688 155.625 164.063 155.438 164.375 155.188 cv
164.625 154.875 164.813 154.5 164.813 154.125 cv
cp
f
166.188 153.313 mo
166.188 152.938 166 152.563 165.75 152.25 cv
165.438 152 165.063 151.813 164.688 151.813 cv
164.313 151.813 163.938 152 163.625 152.25 cv
163.375 152.563 163.188 152.938 163.188 153.313 cv
163.188 153.688 163.375 154.063 163.625 154.375 cv
163.938 154.625 164.313 154.813 164.688 154.813 cv
165.063 154.813 165.438 154.625 165.75 154.375 cv
166 154.063 166.188 153.688 166.188 153.313 cv
cp
f
167.563 152.688 mo
167.563 152.313 167.375 151.938 167.125 151.625 cv
166.813 151.375 166.438 151.188 166.063 151.188 cv
165.688 151.188 165.313 151.375 165 151.625 cv
164.75 151.938 164.563 152.313 164.563 152.688 cv
164.563 153.063 164.75 153.438 165 153.75 cv
165.313 154 165.688 154.188 166.063 154.188 cv
166.438 154.188 166.813 154 167.125 153.75 cv
167.375 153.438 167.563 153.063 167.563 152.688 cv
cp
f
168.938 152 mo
168.938 151.625 168.75 151.25 168.5 150.938 cv
168.188 150.688 167.813 150.5 167.438 150.5 cv
167.063 150.5 166.688 150.688 166.375 150.938 cv
166.125 151.25 165.938 151.625 165.938 152 cv
165.938 152.375 166.125 152.75 166.375 153.063 cv
166.688 153.313 167.063 153.5 167.438 153.5 cv
167.813 153.5 168.188 153.313 168.5 153.063 cv
168.75 152.75 168.938 152.375 168.938 152 cv
cp
f
170.313 150.938 mo
170.313 150.563 170.125 150.188 169.875 149.875 cv
169.563 149.625 169.188 149.438 168.813 149.438 cv
168.438 149.438 168.063 149.625 167.75 149.875 cv
167.5 150.188 167.313 150.563 167.313 150.938 cv
167.313 151.313 167.5 151.688 167.75 152 cv
168.063 152.25 168.438 152.438 168.813 152.438 cv
169.188 152.438 169.563 152.25 169.875 152 cv
170.125 151.688 170.313 151.313 170.313 150.938 cv
cp
f
171.688 149.875 mo
171.688 149.5 171.5 149.125 171.25 148.813 cv
170.938 148.563 170.563 148.375 170.188 148.375 cv
169.813 148.375 169.438 148.563 169.125 148.813 cv
168.875 149.125 168.688 149.5 168.688 149.875 cv
168.688 150.25 168.875 150.625 169.125 150.938 cv
169.438 151.188 169.813 151.375 170.188 151.375 cv
170.563 151.375 170.938 151.188 171.25 150.938 cv
171.5 150.625 171.688 150.25 171.688 149.875 cv
cp
f
173.125 148.813 mo
173.125 148.438 172.938 148.063 172.688 147.75 cv
172.375 147.5 172 147.313 171.625 147.313 cv
171.25 147.313 170.875 147.5 170.563 147.75 cv
170.313 148.063 170.125 148.438 170.125 148.813 cv
170.125 149.188 170.313 149.563 170.563 149.875 cv
170.875 150.125 171.25 150.313 171.625 150.313 cv
172 150.313 172.375 150.125 172.688 149.875 cv
172.938 149.563 173.125 149.188 173.125 148.813 cv
cp
f
174.5 147.875 mo
174.5 147.5 174.313 147.125 174.063 146.813 cv
173.75 146.563 173.375 146.375 173 146.375 cv
172.625 146.375 172.25 146.563 171.938 146.813 cv
171.688 147.125 171.5 147.5 171.5 147.875 cv
171.5 148.25 171.688 148.625 171.938 148.938 cv
172.25 149.188 172.625 149.375 173 149.375 cv
173.375 149.375 173.75 149.188 174.063 148.938 cv
174.313 148.625 174.5 148.25 174.5 147.875 cv
cp
f
175.875 147 mo
175.875 146.625 175.688 146.25 175.438 145.938 cv
175.125 145.688 174.75 145.5 174.375 145.5 cv
174 145.5 173.625 145.688 173.313 145.938 cv
173.063 146.25 172.875 146.625 172.875 147 cv
172.875 147.375 173.063 147.75 173.313 148.063 cv
173.625 148.313 174 148.5 174.375 148.5 cv
174.75 148.5 175.125 148.313 175.438 148.063 cv
175.688 147.75 175.875 147.375 175.875 147 cv
cp
f
177.25 145.563 mo
177.25 145.188 177.063 144.813 176.813 144.5 cv
176.5 144.25 176.125 144.063 175.75 144.063 cv
175.375 144.063 175 144.25 174.688 144.5 cv
174.438 144.813 174.25 145.188 174.25 145.563 cv
174.25 145.938 174.438 146.313 174.688 146.625 cv
175 146.875 175.375 147.063 175.75 147.063 cv
176.125 147.063 176.5 146.875 176.813 146.625 cv
177.063 146.313 177.25 145.938 177.25 145.563 cv
cp
f
178.625 144.688 mo
178.625 144.313 178.438 143.938 178.188 143.625 cv
177.875 143.375 177.5 143.188 177.125 143.188 cv
176.75 143.188 176.375 143.375 176.063 143.625 cv
175.813 143.938 175.625 144.313 175.625 144.688 cv
175.625 145.063 175.813 145.438 176.063 145.75 cv
176.375 146 176.75 146.188 177.125 146.188 cv
177.5 146.188 177.875 146 178.188 145.75 cv
178.438 145.438 178.625 145.063 178.625 144.688 cv
cp
f
180 143.063 mo
180 142.688 179.813 142.313 179.563 142 cv
179.25 141.75 178.875 141.563 178.5 141.563 cv
178.125 141.563 177.75 141.75 177.438 142 cv
177.188 142.313 177 142.688 177 143.063 cv
177 143.438 177.188 143.813 177.438 144.125 cv
177.75 144.375 178.125 144.563 178.5 144.563 cv
178.875 144.563 179.25 144.375 179.563 144.125 cv
179.813 143.813 180 143.438 180 143.063 cv
cp
f
181.375 142.125 mo
181.375 141.75 181.188 141.375 180.938 141.063 cv
180.625 140.813 180.25 140.625 179.875 140.625 cv
179.5 140.625 179.125 140.813 178.813 141.063 cv
178.563 141.375 178.375 141.75 178.375 142.125 cv
178.375 142.5 178.563 142.875 178.813 143.188 cv
179.125 143.438 179.5 143.625 179.875 143.625 cv
180.25 143.625 180.625 143.438 180.938 143.188 cv
181.188 142.875 181.375 142.5 181.375 142.125 cv
cp
f
182.75 140.438 mo
182.75 140.063 182.563 139.688 182.313 139.375 cv
182 139.125 181.625 138.938 181.25 138.938 cv
180.875 138.938 180.5 139.125 180.188 139.375 cv
179.938 139.688 179.75 140.063 179.75 140.438 cv
179.75 140.813 179.938 141.188 180.188 141.5 cv
180.5 141.75 180.875 141.938 181.25 141.938 cv
181.625 141.938 182 141.75 182.313 141.5 cv
182.563 141.188 182.75 140.813 182.75 140.438 cv
cp
f
184.125 139 mo
184.125 138.625 183.938 138.25 183.688 137.938 cv
183.375 137.688 183 137.5 182.625 137.5 cv
182.25 137.5 181.875 137.688 181.563 137.938 cv
181.313 138.25 181.125 138.625 181.125 139 cv
181.125 139.375 181.313 139.75 181.563 140.063 cv
181.875 140.313 182.25 140.5 182.625 140.5 cv
183 140.5 183.375 140.313 183.688 140.063 cv
183.938 139.75 184.125 139.375 184.125 139 cv
cp
f
185.5 137.188 mo
185.5 136.813 185.313 136.438 185.063 136.125 cv
184.75 135.875 184.375 135.688 184 135.688 cv
183.625 135.688 183.25 135.875 182.938 136.125 cv
182.688 136.438 182.5 136.813 182.5 137.188 cv
182.5 137.563 182.688 137.938 182.938 138.25 cv
183.25 138.5 183.625 138.688 184 138.688 cv
184.375 138.688 184.75 138.5 185.063 138.25 cv
185.313 137.938 185.5 137.563 185.5 137.188 cv
cp
f
186.875 135.688 mo
186.875 135.313 186.688 134.938 186.438 134.625 cv
186.125 134.375 185.75 134.188 185.375 134.188 cv
185 134.188 184.625 134.375 184.313 134.625 cv
184.063 134.938 183.875 135.313 183.875 135.688 cv
183.875 136.063 184.063 136.438 184.313 136.75 cv
184.625 137 185 137.188 185.375 137.188 cv
185.75 137.188 186.125 137 186.438 136.75 cv
186.688 136.438 186.875 136.063 186.875 135.688 cv
cp
f
188.25 133.813 mo
188.25 133.438 188.063 133.063 187.813 132.75 cv
187.5 132.5 187.125 132.313 186.75 132.313 cv
186.375 132.313 186 132.5 185.688 132.75 cv
185.438 133.063 185.25 133.438 185.25 133.813 cv
185.25 134.188 185.438 134.563 185.688 134.875 cv
186 135.125 186.375 135.313 186.75 135.313 cv
187.125 135.313 187.5 135.125 187.813 134.875 cv
188.063 134.563 188.25 134.188 188.25 133.813 cv
cp
f
189.625 132.125 mo
189.625 131.75 189.438 131.375 189.188 131.063 cv
188.875 130.813 188.5 130.625 188.125 130.625 cv
187.75 130.625 187.375 130.813 187.063 131.063 cv
186.813 131.375 186.625 131.75 186.625 132.125 cv
186.625 132.5 186.813 132.875 187.063 133.188 cv
187.375 133.438 187.75 133.625 188.125 133.625 cv
188.5 133.625 188.875 133.438 189.188 133.188 cv
189.438 132.875 189.625 132.5 189.625 132.125 cv
cp
f
191 129.938 mo
191 129.563 190.813 129.188 190.563 128.875 cv
190.25 128.625 189.875 128.438 189.5 128.438 cv
189.125 128.438 188.75 128.625 188.438 128.875 cv
188.188 129.188 188 129.563 188 129.938 cv
188 130.313 188.188 130.688 188.438 131 cv
188.75 131.25 189.125 131.438 189.5 131.438 cv
189.875 131.438 190.25 131.25 190.563 131 cv
190.813 130.688 191 130.313 191 129.938 cv
cp
f
192.375 127.438 mo
192.375 127.063 192.188 126.688 191.938 126.375 cv
191.625 126.125 191.25 125.938 190.875 125.938 cv
190.5 125.938 190.125 126.125 189.813 126.375 cv
189.563 126.688 189.375 127.063 189.375 127.438 cv
189.375 127.813 189.563 128.188 189.813 128.5 cv
190.125 128.75 190.5 128.938 190.875 128.938 cv
191.25 128.938 191.625 128.75 191.938 128.5 cv
192.188 128.188 192.375 127.813 192.375 127.438 cv
cp
f
193.75 125.438 mo
193.75 125.063 193.563 124.688 193.313 124.375 cv
193 124.125 192.625 123.938 192.25 123.938 cv
191.875 123.938 191.5 124.125 191.188 124.375 cv
190.938 124.688 190.75 125.063 190.75 125.438 cv
190.75 125.813 190.938 126.188 191.188 126.5 cv
191.5 126.75 191.875 126.938 192.25 126.938 cv
192.625 126.938 193 126.75 193.313 126.5 cv
193.563 126.188 193.75 125.813 193.75 125.438 cv
cp
f
195.125 122.375 mo
195.125 122 194.938 121.625 194.688 121.313 cv
194.375 121.063 194 120.875 193.625 120.875 cv
193.25 120.875 192.875 121.063 192.563 121.313 cv
192.313 121.625 192.125 122 192.125 122.375 cv
192.125 122.75 192.313 123.125 192.563 123.438 cv
192.875 123.688 193.25 123.875 193.625 123.875 cv
194 123.875 194.375 123.688 194.688 123.438 cv
194.938 123.125 195.125 122.75 195.125 122.375 cv
cp
f
196.5 120.375 mo
196.5 120 196.313 119.625 196.063 119.313 cv
195.75 119.063 195.375 118.875 195 118.875 cv
194.625 118.875 194.25 119.063 193.938 119.313 cv
193.688 119.625 193.5 120 193.5 120.375 cv
193.5 120.75 193.688 121.125 193.938 121.438 cv
194.25 121.688 194.625 121.875 195 121.875 cv
195.375 121.875 195.75 121.688 196.063 121.438 cv
196.313 121.125 196.5 120.75 196.5 120.375 cv
cp
f
197.875 117.375 mo
197.875 117 197.688 116.625 197.438 116.313 cv
197.125 116.063 196.75 115.875 196.375 115.875 cv
196 115.875 195.625 116.063 195.313 116.313 cv
195.063 116.625 194.875 117 194.875 117.375 cv
194.875 117.75 195.063 118.125 195.313 118.438 cv
195.625 118.688 196 118.875 196.375 118.875 cv
196.75 118.875 197.125 118.688 197.438 118.438 cv
197.688 118.125 197.875 117.75 197.875 117.375 cv
cp
f
199.25 114.563 mo
199.25 114.188 199.063 113.813 198.813 113.5 cv
198.5 113.25 198.125 113.063 197.75 113.063 cv
197.375 113.063 197 113.25 196.688 113.5 cv
196.438 113.813 196.25 114.188 196.25 114.563 cv
196.25 114.938 196.438 115.313 196.688 115.625 cv
197 115.875 197.375 116.063 197.75 116.063 cv
198.125 116.063 198.5 115.875 198.813 115.625 cv
199.063 115.313 199.25 114.938 199.25 114.563 cv
cp
f
200.625 111.063 mo
200.625 110.688 200.438 110.313 200.188 110 cv
199.875 109.75 199.5 109.563 199.125 109.563 cv
198.75 109.563 198.375 109.75 198.063 110 cv
197.813 110.313 197.625 110.688 197.625 111.063 cv
197.625 111.438 197.813 111.813 198.063 112.125 cv
198.375 112.375 198.75 112.563 199.125 112.563 cv
199.5 112.563 199.875 112.375 200.188 112.125 cv
200.438 111.813 200.625 111.438 200.625 111.063 cv
cp
f
202.063 108.25 mo
202.063 107.875 201.875 107.5 201.625 107.188 cv
201.313 106.938 200.938 106.75 200.563 106.75 cv
200.188 106.75 199.813 106.938 199.5 107.188 cv
199.25 107.5 199.063 107.875 199.063 108.25 cv
199.063 108.625 199.25 109 199.5 109.313 cv
199.813 109.563 200.188 109.75 200.563 109.75 cv
200.938 109.75 201.313 109.563 201.625 109.313 cv
201.875 109 202.063 108.625 202.063 108.25 cv
cp
f
203.438 104.5 mo
203.438 104.125 203.25 103.75 203 103.438 cv
202.688 103.188 202.313 103 201.938 103 cv
201.563 103 201.188 103.188 200.875 103.438 cv
200.625 103.75 200.438 104.125 200.438 104.5 cv
200.438 104.875 200.625 105.25 200.875 105.563 cv
201.188 105.813 201.563 106 201.938 106 cv
202.313 106 202.688 105.813 203 105.563 cv
203.25 105.25 203.438 104.875 203.438 104.5 cv
cp
f
204.813 100.813 mo
204.813 100.438 204.625 100.063 204.375 99.75 cv
204.063 99.5 203.688 99.3125 203.313 99.3125 cv
202.938 99.3125 202.563 99.5 202.25 99.75 cv
202 100.063 201.813 100.438 201.813 100.813 cv
201.813 101.188 202 101.563 202.25 101.875 cv
202.563 102.125 202.938 102.313 203.313 102.313 cv
203.688 102.313 204.063 102.125 204.375 101.875 cv
204.625 101.563 204.813 101.188 204.813 100.813 cv
cp
f
206.188 96.25 mo
206.188 95.875 206 95.5 205.75 95.1875 cv
205.438 94.9375 205.063 94.75 204.688 94.75 cv
204.313 94.75 203.938 94.9375 203.625 95.1875 cv
203.375 95.5 203.188 95.875 203.188 96.25 cv
203.188 96.625 203.375 97 203.625 97.3125 cv
203.938 97.5625 204.313 97.75 204.688 97.75 cv
205.063 97.75 205.438 97.5625 205.75 97.3125 cv
206 97 206.188 96.625 206.188 96.25 cv
cp
f
207.563 92.5625 mo
207.563 92.1875 207.375 91.8125 207.125 91.5 cv
206.813 91.25 206.438 91.0625 206.063 91.0625 cv
205.688 91.0625 205.313 91.25 205 91.5 cv
204.75 91.8125 204.563 92.1875 204.563 92.5625 cv
204.563 92.9375 204.75 93.3125 205 93.625 cv
205.313 93.875 205.688 94.0625 206.063 94.0625 cv
206.438 94.0625 206.813 93.875 207.125 93.625 cv
207.375 93.3125 207.563 92.9375 207.563 92.5625 cv
cp
f
208.938 87.875 mo
208.938 87.5 208.75 87.125 208.5 86.8125 cv
208.188 86.5625 207.813 86.375 207.438 86.375 cv
207.063 86.375 206.688 86.5625 206.375 86.8125 cv
206.125 87.125 205.938 87.5 205.938 87.875 cv
205.938 88.25 206.125 88.625 206.375 88.9375 cv
206.688 89.1875 207.063 89.375 207.438 89.375 cv
207.813 89.375 208.188 89.1875 208.5 88.9375 cv
208.75 88.625 208.938 88.25 208.938 87.875 cv
cp
f
210.313 83.8125 mo
210.313 83.4375 210.125 83.0625 209.875 82.75 cv
209.563 82.5 209.188 82.3125 208.813 82.3125 cv
208.438 82.3125 208.063 82.5 207.75 82.75 cv
207.5 83.0625 207.313 83.4375 207.313 83.8125 cv
207.313 84.1875 207.5 84.5625 207.75 84.875 cv
208.063 85.125 208.438 85.3125 208.813 85.3125 cv
209.188 85.3125 209.563 85.125 209.875 84.875 cv
210.125 84.5625 210.313 84.1875 210.313 83.8125 cv
cp
f
211.688 78.75 mo
211.688 78.375 211.5 78 211.25 77.6875 cv
210.938 77.4375 210.563 77.25 210.188 77.25 cv
209.813 77.25 209.438 77.4375 209.125 77.6875 cv
208.875 78 208.688 78.375 208.688 78.75 cv
208.688 79.125 208.875 79.5 209.125 79.8125 cv
209.438 80.0625 209.813 80.25 210.188 80.25 cv
210.563 80.25 210.938 80.0625 211.25 79.8125 cv
211.5 79.5 211.688 79.125 211.688 78.75 cv
cp
f
213.063 74.375 mo
213.063 74 212.875 73.625 212.625 73.3125 cv
212.313 73.0625 211.938 72.875 211.563 72.875 cv
211.188 72.875 210.813 73.0625 210.5 73.3125 cv
210.25 73.625 210.063 74 210.063 74.375 cv
210.063 74.75 210.25 75.125 210.5 75.4375 cv
210.813 75.6875 211.188 75.875 211.563 75.875 cv
211.938 75.875 212.313 75.6875 212.625 75.4375 cv
212.875 75.125 213.063 74.75 213.063 74.375 cv
cp
f
214.438 68.4375 mo
214.438 68.0625 214.25 67.6875 214 67.375 cv
213.688 67.125 213.313 66.9375 212.938 66.9375 cv
212.563 66.9375 212.188 67.125 211.875 67.375 cv
211.625 67.6875 211.438 68.0625 211.438 68.4375 cv
211.438 68.8125 211.625 69.1875 211.875 69.5 cv
212.188 69.75 212.563 69.9375 212.938 69.9375 cv
213.313 69.9375 213.688 69.75 214 69.5 cv
214.25 69.1875 214.438 68.8125 214.438 68.4375 cv
cp
f
215.813 63.9375 mo
215.813 63.5625 215.625 63.1875 215.375 62.875 cv
215.063 62.625 214.688 62.4375 214.313 62.4375 cv
213.938 62.4375 213.563 62.625 213.25 62.875 cv
213 63.1875 212.813 63.5625 212.813 63.9375 cv
212.813 64.3125 213 64.6875 213.25 65 cv
213.563 65.25 213.938 65.4375 214.313 65.4375 cv
214.688 65.4375 215.063 65.25 215.375 65 cv
215.625 64.6875 215.813 64.3125 215.813 63.9375 cv
cp
f
217.188 58.6875 mo
217.188 58.3125 217 57.9375 216.75 57.625 cv
216.438 57.375 216.063 57.1875 215.688 57.1875 cv
215.313 57.1875 214.938 57.375 214.625 57.625 cv
214.375 57.9375 214.188 58.3125 214.188 58.6875 cv
214.188 59.0625 214.375 59.4375 214.625 59.75 cv
214.938 60 215.313 60.1875 215.688 60.1875 cv
216.063 60.1875 216.438 60 216.75 59.75 cv
217 59.4375 217.188 59.0625 217.188 58.6875 cv
cp
f
218.563 53.4375 mo
218.563 53.0625 218.375 52.6875 218.125 52.375 cv
217.813 52.125 217.438 51.9375 217.063 51.9375 cv
216.688 51.9375 216.313 52.125 216 52.375 cv
215.75 52.6875 215.563 53.0625 215.563 53.4375 cv
215.563 53.8125 215.75 54.1875 216 54.5 cv
216.313 54.75 216.688 54.9375 217.063 54.9375 cv
217.438 54.9375 217.813 54.75 218.125 54.5 cv
218.375 54.1875 218.563 53.8125 218.563 53.4375 cv
cp
f
219.938 48.8125 mo
219.938 48.4375 219.75 48.0625 219.5 47.75 cv
219.188 47.5 218.813 47.3125 218.438 47.3125 cv
218.063 47.3125 217.688 47.5 217.375 47.75 cv
217.125 48.0625 216.938 48.4375 216.938 48.8125 cv
216.938 49.1875 217.125 49.5625 217.375 49.875 cv
217.688 50.125 218.063 50.3125 218.438 50.3125 cv
218.813 50.3125 219.188 50.125 219.5 49.875 cv
219.75 49.5625 219.938 49.1875 219.938 48.8125 cv
cp
f
221.313 43.375 mo
221.313 43 221.125 42.625 220.875 42.3125 cv
220.563 42.0625 220.188 41.875 219.813 41.875 cv
219.438 41.875 219.063 42.0625 218.75 42.3125 cv
218.5 42.625 218.313 43 218.313 43.375 cv
218.313 43.75 218.5 44.125 218.75 44.4375 cv
219.063 44.6875 219.438 44.875 219.813 44.875 cv
220.188 44.875 220.563 44.6875 220.875 44.4375 cv
221.125 44.125 221.313 43.75 221.313 43.375 cv
cp
f
222.688 38.6875 mo
222.688 38.3125 222.5 37.9375 222.25 37.625 cv
221.938 37.375 221.563 37.1875 221.188 37.1875 cv
220.813 37.1875 220.438 37.375 220.125 37.625 cv
219.875 37.9375 219.688 38.3125 219.688 38.6875 cv
219.688 39.0625 219.875 39.4375 220.125 39.75 cv
220.438 40 220.813 40.1875 221.188 40.1875 cv
221.563 40.1875 221.938 40 222.25 39.75 cv
222.5 39.4375 222.688 39.0625 222.688 38.6875 cv
cp
f
224.063 34.3125 mo
224.063 33.9375 223.875 33.5625 223.625 33.25 cv
223.313 33 222.938 32.8125 222.563 32.8125 cv
222.188 32.8125 221.813 33 221.5 33.25 cv
221.25 33.5625 221.063 33.9375 221.063 34.3125 cv
221.063 34.6875 221.25 35.0625 221.5 35.375 cv
221.813 35.625 222.188 35.8125 222.563 35.8125 cv
222.938 35.8125 223.313 35.625 223.625 35.375 cv
223.875 35.0625 224.063 34.6875 224.063 34.3125 cv
cp
f
225.438 30.0625 mo
225.438 29.6875 225.25 29.3125 225 29 cv
224.688 28.75 224.313 28.5625 223.938 28.5625 cv
223.563 28.5625 223.188 28.75 222.875 29 cv
222.625 29.3125 222.438 29.6875 222.438 30.0625 cv
222.438 30.4375 222.625 30.8125 222.875 31.125 cv
223.188 31.375 223.563 31.5625 223.938 31.5625 cv
224.313 31.5625 224.688 31.375 225 31.125 cv
225.25 30.8125 225.438 30.4375 225.438 30.0625 cv
cp
f
226.813 25.375 mo
226.813 25 226.625 24.625 226.375 24.3125 cv
226.063 24.0625 225.688 23.875 225.313 23.875 cv
224.938 23.875 224.563 24.0625 224.25 24.3125 cv
224 24.625 223.813 25 223.813 25.375 cv
223.813 25.75 224 26.125 224.25 26.4375 cv
224.563 26.6875 224.938 26.875 225.313 26.875 cv
225.688 26.875 226.063 26.6875 226.375 26.4375 cv
226.625 26.125 226.813 25.75 226.813 25.375 cv
cp
f
228.188 22.0625 mo
228.188 21.6875 228 21.3125 227.75 21 cv
227.438 20.75 227.063 20.5625 226.688 20.5625 cv
226.313 20.5625 225.938 20.75 225.625 21 cv
225.375 21.3125 225.188 21.6875 225.188 22.0625 cv
225.188 22.4375 225.375 22.8125 225.625 23.125 cv
225.938 23.375 226.313 23.5625 226.688 23.5625 cv
227.063 23.5625 227.438 23.375 227.75 23.125 cv
228 22.8125 228.188 22.4375 228.188 22.0625 cv
cp
f
229.625 19.125 mo
229.625 18.75 229.438 18.375 229.188 18.0625 cv
228.875 17.8125 228.5 17.625 228.125 17.625 cv
227.75 17.625 227.375 17.8125 227.063 18.0625 cv
226.813 18.375 226.625 18.75 226.625 19.125 cv
226.625 19.5 226.813 19.875 227.063 20.1875 cv
227.375 20.4375 227.75 20.625 228.125 20.625 cv
228.5 20.625 228.875 20.4375 229.188 20.1875 cv
229.438 19.875 229.625 19.5 229.625 19.125 cv
cp
f
231 15.375 mo
231 15 230.813 14.625 230.563 14.3125 cv
230.25 14.0625 229.875 13.875 229.5 13.875 cv
229.125 13.875 228.75 14.0625 228.438 14.3125 cv
228.188 14.625 228 15 228 15.375 cv
228 15.75 228.188 16.125 228.438 16.4375 cv
228.75 16.6875 229.125 16.875 229.5 16.875 cv
229.875 16.875 230.25 16.6875 230.563 16.4375 cv
230.813 16.125 231 15.75 231 15.375 cv
cp
f
232.375 13 mo
232.375 12.625 232.188 12.25 231.938 11.9375 cv
231.625 11.6875 231.25 11.5 230.875 11.5 cv
230.5 11.5 230.125 11.6875 229.813 11.9375 cv
229.563 12.25 229.375 12.625 229.375 13 cv
229.375 13.375 229.563 13.75 229.813 14.0625 cv
230.125 14.3125 230.5 14.5 230.875 14.5 cv
231.25 14.5 231.625 14.3125 231.938 14.0625 cv
232.188 13.75 232.375 13.375 232.375 13 cv
cp
f
233.75 12 mo
233.75 11.625 233.563 11.25 233.313 10.9375 cv
233 10.6875 232.625 10.5 232.25 10.5 cv
231.875 10.5 231.5 10.6875 231.188 10.9375 cv
230.938 11.25 230.75 11.625 230.75 12 cv
230.75 12.375 230.938 12.75 231.188 13.0625 cv
231.5 13.3125 231.875 13.5 232.25 13.5 cv
232.625 13.5 233 13.3125 233.313 13.0625 cv
233.563 12.75 233.75 12.375 233.75 12 cv
cp
f
235.125 9.625 mo
235.125 9.25 234.938 8.875 234.688 8.5625 cv
234.375 8.3125 234 8.125 233.625 8.125 cv
233.25 8.125 232.875 8.3125 232.563 8.5625 cv
232.313 8.875 232.125 9.25 232.125 9.625 cv
232.125 10 232.313 10.375 232.563 10.6875 cv
232.875 10.9375 233.25 11.125 233.625 11.125 cv
234 11.125 234.375 10.9375 234.688 10.6875 cv
234.938 10.375 235.125 10 235.125 9.625 cv
cp
f
236.5 9.4375 mo
236.5 9.0625 236.313 8.6875 236.063 8.375 cv
235.75 8.125 235.375 7.9375 235 7.9375 cv
234.625 7.9375 234.25 8.125 233.938 8.375 cv
233.688 8.6875 233.5 9.0625 233.5 9.4375 cv
233.5 9.8125 233.688 10.1875 233.938 10.5 cv
234.25 10.75 234.625 10.9375 235 10.9375 cv
235.375 10.9375 235.75 10.75 236.063 10.5 cv
236.313 10.1875 236.5 9.8125 236.5 9.4375 cv
cp
f
237.875 8.9375 mo
237.875 8.5625 237.688 8.1875 237.438 7.875 cv
237.125 7.625 236.75 7.4375 236.375 7.4375 cv
236 7.4375 235.625 7.625 235.313 7.875 cv
235.063 8.1875 234.875 8.5625 234.875 8.9375 cv
234.875 9.3125 235.063 9.6875 235.313 10 cv
235.625 10.25 236 10.4375 236.375 10.4375 cv
236.75 10.4375 237.125 10.25 237.438 10 cv
237.688 9.6875 237.875 9.3125 237.875 8.9375 cv
cp
f
239.25 9.9375 mo
239.25 9.5625 239.063 9.1875 238.813 8.875 cv
238.5 8.625 238.125 8.4375 237.75 8.4375 cv
237.375 8.4375 237 8.625 236.688 8.875 cv
236.438 9.1875 236.25 9.5625 236.25 9.9375 cv
236.25 10.3125 236.438 10.6875 236.688 11 cv
237 11.25 237.375 11.4375 237.75 11.4375 cv
238.125 11.4375 238.5 11.25 238.813 11 cv
239.063 10.6875 239.25 10.3125 239.25 9.9375 cv
cp
f
240.625 10 mo
240.625 9.625 240.438 9.25 240.188 8.9375 cv
239.875 8.6875 239.5 8.5 239.125 8.5 cv
238.75 8.5 238.375 8.6875 238.063 8.9375 cv
237.813 9.25 237.625 9.625 237.625 10 cv
237.625 10.375 237.813 10.75 238.063 11.0625 cv
238.375 11.3125 238.75 11.5 239.125 11.5 cv
239.5 11.5 239.875 11.3125 240.188 11.0625 cv
240.438 10.75 240.625 10.375 240.625 10 cv
cp
f
242 12 mo
242 11.625 241.813 11.25 241.563 10.9375 cv
241.25 10.6875 240.875 10.5 240.5 10.5 cv
240.125 10.5 239.75 10.6875 239.438 10.9375 cv
239.188 11.25 239 11.625 239 12 cv
239 12.375 239.188 12.75 239.438 13.0625 cv
239.75 13.3125 240.125 13.5 240.5 13.5 cv
240.875 13.5 241.25 13.3125 241.563 13.0625 cv
241.813 12.75 242 12.375 242 12 cv
cp
f
243.375 13.8125 mo
243.375 13.4375 243.188 13.0625 242.938 12.75 cv
242.625 12.5 242.25 12.3125 241.875 12.3125 cv
241.5 12.3125 241.125 12.5 240.813 12.75 cv
240.563 13.0625 240.375 13.4375 240.375 13.8125 cv
240.375 14.1875 240.563 14.5625 240.813 14.875 cv
241.125 15.125 241.5 15.3125 241.875 15.3125 cv
242.25 15.3125 242.625 15.125 242.938 14.875 cv
243.188 14.5625 243.375 14.1875 243.375 13.8125 cv
cp
f
244.75 18.25 mo
244.75 17.875 244.563 17.5 244.313 17.1875 cv
244 16.9375 243.625 16.75 243.25 16.75 cv
242.875 16.75 242.5 16.9375 242.188 17.1875 cv
241.938 17.5 241.75 17.875 241.75 18.25 cv
241.75 18.625 241.938 19 242.188 19.3125 cv
242.5 19.5625 242.875 19.75 243.25 19.75 cv
243.625 19.75 244 19.5625 244.313 19.3125 cv
244.563 19 244.75 18.625 244.75 18.25 cv
cp
f
246.125 19.375 mo
246.125 19 245.938 18.625 245.688 18.3125 cv
245.375 18.0625 245 17.875 244.625 17.875 cv
244.25 17.875 243.875 18.0625 243.563 18.3125 cv
243.313 18.625 243.125 19 243.125 19.375 cv
243.125 19.75 243.313 20.125 243.563 20.4375 cv
243.875 20.6875 244.25 20.875 244.625 20.875 cv
245 20.875 245.375 20.6875 245.688 20.4375 cv
245.938 20.125 246.125 19.75 246.125 19.375 cv
cp
f
247.5 23.875 mo
247.5 23.5 247.313 23.125 247.063 22.8125 cv
246.75 22.5625 246.375 22.375 246 22.375 cv
245.625 22.375 245.25 22.5625 244.938 22.8125 cv
244.688 23.125 244.5 23.5 244.5 23.875 cv
244.5 24.25 244.688 24.625 244.938 24.9375 cv
245.25 25.1875 245.625 25.375 246 25.375 cv
246.375 25.375 246.75 25.1875 247.063 24.9375 cv
247.313 24.625 247.5 24.25 247.5 23.875 cv
cp
f
248.875 27.8125 mo
248.875 27.4375 248.688 27.0625 248.438 26.75 cv
248.125 26.5 247.75 26.3125 247.375 26.3125 cv
247 26.3125 246.625 26.5 246.313 26.75 cv
246.063 27.0625 245.875 27.4375 245.875 27.8125 cv
245.875 28.1875 246.063 28.5625 246.313 28.875 cv
246.625 29.125 247 29.3125 247.375 29.3125 cv
247.75 29.3125 248.125 29.125 248.438 28.875 cv
248.688 28.5625 248.875 28.1875 248.875 27.8125 cv
cp
f
250.25 33 mo
250.25 32.625 250.063 32.25 249.813 31.9375 cv
249.5 31.6875 249.125 31.5 248.75 31.5 cv
248.375 31.5 248 31.6875 247.688 31.9375 cv
247.438 32.25 247.25 32.625 247.25 33 cv
247.25 33.375 247.438 33.75 247.688 34.0625 cv
248 34.3125 248.375 34.5 248.75 34.5 cv
249.125 34.5 249.5 34.3125 249.813 34.0625 cv
250.063 33.75 250.25 33.375 250.25 33 cv
cp
f
251.625 38.4375 mo
251.625 38.0625 251.438 37.6875 251.188 37.375 cv
250.875 37.125 250.5 36.9375 250.125 36.9375 cv
249.75 36.9375 249.375 37.125 249.063 37.375 cv
248.813 37.6875 248.625 38.0625 248.625 38.4375 cv
248.625 38.8125 248.813 39.1875 249.063 39.5 cv
249.375 39.75 249.75 39.9375 250.125 39.9375 cv
250.5 39.9375 250.875 39.75 251.188 39.5 cv
251.438 39.1875 251.625 38.8125 251.625 38.4375 cv
cp
f
253 42.8125 mo
253 42.4375 252.813 42.0625 252.563 41.75 cv
252.25 41.5 251.875 41.3125 251.5 41.3125 cv
251.125 41.3125 250.75 41.5 250.438 41.75 cv
250.188 42.0625 250 42.4375 250 42.8125 cv
250 43.1875 250.188 43.5625 250.438 43.875 cv
250.75 44.125 251.125 44.3125 251.5 44.3125 cv
251.875 44.3125 252.25 44.125 252.563 43.875 cv
252.813 43.5625 253 43.1875 253 42.8125 cv
cp
f
254.375 48.5625 mo
254.375 48.1875 254.188 47.8125 253.938 47.5 cv
253.625 47.25 253.25 47.0625 252.875 47.0625 cv
252.5 47.0625 252.125 47.25 251.813 47.5 cv
251.563 47.8125 251.375 48.1875 251.375 48.5625 cv
251.375 48.9375 251.563 49.3125 251.813 49.625 cv
252.125 49.875 252.5 50.0625 252.875 50.0625 cv
253.25 50.0625 253.625 49.875 253.938 49.625 cv
254.188 49.3125 254.375 48.9375 254.375 48.5625 cv
cp
f
255.75 54.25 mo
255.75 53.875 255.563 53.5 255.313 53.1875 cv
255 52.9375 254.625 52.75 254.25 52.75 cv
253.875 52.75 253.5 52.9375 253.188 53.1875 cv
252.938 53.5 252.75 53.875 252.75 54.25 cv
252.75 54.625 252.938 55 253.188 55.3125 cv
253.5 55.5625 253.875 55.75 254.25 55.75 cv
254.625 55.75 255 55.5625 255.313 55.3125 cv
255.563 55 255.75 54.625 255.75 54.25 cv
cp
f
257.125 60.125 mo
257.125 59.75 256.938 59.375 256.688 59.0625 cv
256.375 58.8125 256 58.625 255.625 58.625 cv
255.25 58.625 254.875 58.8125 254.563 59.0625 cv
254.313 59.375 254.125 59.75 254.125 60.125 cv
254.125 60.5 254.313 60.875 254.563 61.1875 cv
254.875 61.4375 255.25 61.625 255.625 61.625 cv
256 61.625 256.375 61.4375 256.688 61.1875 cv
256.938 60.875 257.125 60.5 257.125 60.125 cv
cp
f
258.563 66.0625 mo
258.563 65.6875 258.375 65.3125 258.125 65 cv
257.813 64.75 257.438 64.5625 257.063 64.5625 cv
256.688 64.5625 256.313 64.75 256 65 cv
255.75 65.3125 255.563 65.6875 255.563 66.0625 cv
255.563 66.4375 255.75 66.8125 256 67.125 cv
256.313 67.375 256.688 67.5625 257.063 67.5625 cv
257.438 67.5625 257.813 67.375 258.125 67.125 cv
258.375 66.8125 258.563 66.4375 258.563 66.0625 cv
cp
f
259.938 70.1875 mo
259.938 69.8125 259.75 69.4375 259.5 69.125 cv
259.188 68.875 258.813 68.6875 258.438 68.6875 cv
258.063 68.6875 257.688 68.875 257.375 69.125 cv
257.125 69.4375 256.938 69.8125 256.938 70.1875 cv
256.938 70.5625 257.125 70.9375 257.375 71.25 cv
257.688 71.5 258.063 71.6875 258.438 71.6875 cv
258.813 71.6875 259.188 71.5 259.5 71.25 cv
259.75 70.9375 259.938 70.5625 259.938 70.1875 cv
cp
f
261.313 75.5625 mo
261.313 75.1875 261.125 74.8125 260.875 74.5 cv
260.563 74.25 260.188 74.0625 259.813 74.0625 cv
259.438 74.0625 259.063 74.25 258.75 74.5 cv
258.5 74.8125 258.313 75.1875 258.313 75.5625 cv
258.313 75.9375 258.5 76.3125 258.75 76.625 cv
259.063 76.875 259.438 77.0625 259.813 77.0625 cv
260.188 77.0625 260.563 76.875 260.875 76.625 cv
261.125 76.3125 261.313 75.9375 261.313 75.5625 cv
cp
f
262.688 80.5 mo
262.688 80.125 262.5 79.75 262.25 79.4375 cv
261.938 79.1875 261.563 79 261.188 79 cv
260.813 79 260.438 79.1875 260.125 79.4375 cv
259.875 79.75 259.688 80.125 259.688 80.5 cv
259.688 80.875 259.875 81.25 260.125 81.5625 cv
260.438 81.8125 260.813 82 261.188 82 cv
261.563 82 261.938 81.8125 262.25 81.5625 cv
262.5 81.25 262.688 80.875 262.688 80.5 cv
cp
f
264.063 85.875 mo
264.063 85.5 263.875 85.125 263.625 84.8125 cv
263.313 84.5625 262.938 84.375 262.563 84.375 cv
262.188 84.375 261.813 84.5625 261.5 84.8125 cv
261.25 85.125 261.063 85.5 261.063 85.875 cv
261.063 86.25 261.25 86.625 261.5 86.9375 cv
261.813 87.1875 262.188 87.375 262.563 87.375 cv
262.938 87.375 263.313 87.1875 263.625 86.9375 cv
263.875 86.625 264.063 86.25 264.063 85.875 cv
cp
f
265.438 90.4375 mo
265.438 90.0625 265.25 89.6875 265 89.375 cv
264.688 89.125 264.313 88.9375 263.938 88.9375 cv
263.563 88.9375 263.188 89.125 262.875 89.375 cv
262.625 89.6875 262.438 90.0625 262.438 90.4375 cv
262.438 90.8125 262.625 91.1875 262.875 91.5 cv
263.188 91.75 263.563 91.9375 263.938 91.9375 cv
264.313 91.9375 264.688 91.75 265 91.5 cv
265.25 91.1875 265.438 90.8125 265.438 90.4375 cv
cp
f
266.813 94.125 mo
266.813 93.75 266.625 93.375 266.375 93.0625 cv
266.063 92.8125 265.688 92.625 265.313 92.625 cv
264.938 92.625 264.563 92.8125 264.25 93.0625 cv
264 93.375 263.813 93.75 263.813 94.125 cv
263.813 94.5 264 94.875 264.25 95.1875 cv
264.563 95.4375 264.938 95.625 265.313 95.625 cv
265.688 95.625 266.063 95.4375 266.375 95.1875 cv
266.625 94.875 266.813 94.5 266.813 94.125 cv
cp
f
268.188 98.375 mo
268.188 98 268 97.625 267.75 97.3125 cv
267.438 97.0625 267.063 96.875 266.688 96.875 cv
266.313 96.875 265.938 97.0625 265.625 97.3125 cv
265.375 97.625 265.188 98 265.188 98.375 cv
265.188 98.75 265.375 99.125 265.625 99.4375 cv
265.938 99.6875 266.313 99.875 266.688 99.875 cv
267.063 99.875 267.438 99.6875 267.75 99.4375 cv
268 99.125 268.188 98.75 268.188 98.375 cv
cp
f
269.563 102.563 mo
269.563 102.188 269.375 101.813 269.125 101.5 cv
268.813 101.25 268.438 101.063 268.063 101.063 cv
267.688 101.063 267.313 101.25 267 101.5 cv
266.75 101.813 266.563 102.188 266.563 102.563 cv
266.563 102.938 266.75 103.313 267 103.625 cv
267.313 103.875 267.688 104.063 268.063 104.063 cv
268.438 104.063 268.813 103.875 269.125 103.625 cv
269.375 103.313 269.563 102.938 269.563 102.563 cv
cp
f
270.938 106.25 mo
270.938 105.875 270.75 105.5 270.5 105.188 cv
270.188 104.938 269.813 104.75 269.438 104.75 cv
269.063 104.75 268.688 104.938 268.375 105.188 cv
268.125 105.5 267.938 105.875 267.938 106.25 cv
267.938 106.625 268.125 107 268.375 107.313 cv
268.688 107.563 269.063 107.75 269.438 107.75 cv
269.813 107.75 270.188 107.563 270.5 107.313 cv
270.75 107 270.938 106.625 270.938 106.25 cv
cp
f
272.313 109.938 mo
272.313 109.563 272.125 109.188 271.875 108.875 cv
271.563 108.625 271.188 108.438 270.813 108.438 cv
270.438 108.438 270.063 108.625 269.75 108.875 cv
269.5 109.188 269.313 109.563 269.313 109.938 cv
269.313 110.313 269.5 110.688 269.75 111 cv
270.063 111.25 270.438 111.438 270.813 111.438 cv
271.188 111.438 271.563 111.25 271.875 111 cv
272.125 110.688 272.313 110.313 272.313 109.938 cv
cp
f
273.688 113.188 mo
273.688 112.813 273.5 112.438 273.25 112.125 cv
272.938 111.875 272.563 111.688 272.188 111.688 cv
271.813 111.688 271.438 111.875 271.125 112.125 cv
270.875 112.438 270.688 112.813 270.688 113.188 cv
270.688 113.563 270.875 113.938 271.125 114.25 cv
271.438 114.5 271.813 114.688 272.188 114.688 cv
272.563 114.688 272.938 114.5 273.25 114.25 cv
273.5 113.938 273.688 113.563 273.688 113.188 cv
cp
f
275.063 116.438 mo
275.063 116.063 274.875 115.688 274.625 115.375 cv
274.313 115.125 273.938 114.938 273.563 114.938 cv
273.188 114.938 272.813 115.125 272.5 115.375 cv
272.25 115.688 272.063 116.063 272.063 116.438 cv
272.063 116.813 272.25 117.188 272.5 117.5 cv
272.813 117.75 273.188 117.938 273.563 117.938 cv
273.938 117.938 274.313 117.75 274.625 117.5 cv
274.875 117.188 275.063 116.813 275.063 116.438 cv
cp
f
276.438 119.313 mo
276.438 118.938 276.25 118.563 276 118.25 cv
275.688 118 275.313 117.813 274.938 117.813 cv
274.563 117.813 274.188 118 273.875 118.25 cv
273.625 118.563 273.438 118.938 273.438 119.313 cv
273.438 119.688 273.625 120.063 273.875 120.375 cv
274.188 120.625 274.563 120.813 274.938 120.813 cv
275.313 120.813 275.688 120.625 276 120.375 cv
276.25 120.063 276.438 119.688 276.438 119.313 cv
cp
f
277.813 121.5 mo
277.813 121.125 277.625 120.75 277.375 120.438 cv
277.063 120.188 276.688 120 276.313 120 cv
275.938 120 275.563 120.188 275.25 120.438 cv
275 120.75 274.813 121.125 274.813 121.5 cv
274.813 121.875 275 122.25 275.25 122.563 cv
275.563 122.813 275.938 123 276.313 123 cv
276.688 123 277.063 122.813 277.375 122.563 cv
277.625 122.25 277.813 121.875 277.813 121.5 cv
cp
f
279.188 124.625 mo
279.188 124.25 279 123.875 278.75 123.563 cv
278.438 123.313 278.063 123.125 277.688 123.125 cv
277.313 123.125 276.938 123.313 276.625 123.563 cv
276.375 123.875 276.188 124.25 276.188 124.625 cv
276.188 125 276.375 125.375 276.625 125.688 cv
276.938 125.938 277.313 126.125 277.688 126.125 cv
278.063 126.125 278.438 125.938 278.75 125.688 cv
279 125.375 279.188 125 279.188 124.625 cv
cp
f
280.563 126.625 mo
280.563 126.25 280.375 125.875 280.125 125.563 cv
279.813 125.313 279.438 125.125 279.063 125.125 cv
278.688 125.125 278.313 125.313 278 125.563 cv
277.75 125.875 277.563 126.25 277.563 126.625 cv
277.563 127 277.75 127.375 278 127.688 cv
278.313 127.938 278.688 128.125 279.063 128.125 cv
279.438 128.125 279.813 127.938 280.125 127.688 cv
280.375 127.375 280.563 127 280.563 126.625 cv
cp
f
281.938 129.438 mo
281.938 129.063 281.75 128.688 281.5 128.375 cv
281.188 128.125 280.813 127.938 280.438 127.938 cv
280.063 127.938 279.688 128.125 279.375 128.375 cv
279.125 128.688 278.938 129.063 278.938 129.438 cv
278.938 129.813 279.125 130.188 279.375 130.5 cv
279.688 130.75 280.063 130.938 280.438 130.938 cv
280.813 130.938 281.188 130.75 281.5 130.5 cv
281.75 130.188 281.938 129.813 281.938 129.438 cv
cp
f
283.313 131.438 mo
283.313 131.063 283.125 130.688 282.875 130.375 cv
282.563 130.125 282.188 129.938 281.813 129.938 cv
281.438 129.938 281.063 130.125 280.75 130.375 cv
280.5 130.688 280.313 131.063 280.313 131.438 cv
280.313 131.813 280.5 132.188 280.75 132.5 cv
281.063 132.75 281.438 132.938 281.813 132.938 cv
282.188 132.938 282.563 132.75 282.875 132.5 cv
283.125 132.188 283.313 131.813 283.313 131.438 cv
cp
f
284.688 133.688 mo
284.688 133.313 284.5 132.938 284.25 132.625 cv
283.938 132.375 283.563 132.188 283.188 132.188 cv
282.813 132.188 282.438 132.375 282.125 132.625 cv
281.875 132.938 281.688 133.313 281.688 133.688 cv
281.688 134.063 281.875 134.438 282.125 134.75 cv
282.438 135 282.813 135.188 283.188 135.188 cv
283.563 135.188 283.938 135 284.25 134.75 cv
284.5 134.438 284.688 134.063 284.688 133.688 cv
cp
f
286.063 135.25 mo
286.063 134.875 285.875 134.5 285.625 134.188 cv
285.313 133.938 284.938 133.75 284.563 133.75 cv
284.188 133.75 283.813 133.938 283.5 134.188 cv
283.25 134.5 283.063 134.875 283.063 135.25 cv
283.063 135.625 283.25 136 283.5 136.313 cv
283.813 136.563 284.188 136.75 284.563 136.75 cv
284.938 136.75 285.313 136.563 285.625 136.313 cv
285.875 136 286.063 135.625 286.063 135.25 cv
cp
f
287.5 137.063 mo
287.5 136.688 287.313 136.313 287.063 136 cv
286.75 135.75 286.375 135.563 286 135.563 cv
285.625 135.563 285.25 135.75 284.938 136 cv
284.688 136.313 284.5 136.688 284.5 137.063 cv
284.5 137.438 284.688 137.813 284.938 138.125 cv
285.25 138.375 285.625 138.563 286 138.563 cv
286.375 138.563 286.75 138.375 287.063 138.125 cv
287.313 137.813 287.5 137.438 287.5 137.063 cv
cp
f
288.875 138.625 mo
288.875 138.25 288.688 137.875 288.438 137.563 cv
288.125 137.313 287.75 137.125 287.375 137.125 cv
287 137.125 286.625 137.313 286.313 137.563 cv
286.063 137.875 285.875 138.25 285.875 138.625 cv
285.875 139 286.063 139.375 286.313 139.688 cv
286.625 139.938 287 140.125 287.375 140.125 cv
287.75 140.125 288.125 139.938 288.438 139.688 cv
288.688 139.375 288.875 139 288.875 138.625 cv
cp
f
290.25 140.25 mo
290.25 139.875 290.063 139.5 289.813 139.188 cv
289.5 138.938 289.125 138.75 288.75 138.75 cv
288.375 138.75 288 138.938 287.688 139.188 cv
287.438 139.5 287.25 139.875 287.25 140.25 cv
287.25 140.625 287.438 141 287.688 141.313 cv
288 141.563 288.375 141.75 288.75 141.75 cv
289.125 141.75 289.5 141.563 289.813 141.313 cv
290.063 141 290.25 140.625 290.25 140.25 cv
cp
f
291.625 141.813 mo
291.625 141.438 291.438 141.063 291.188 140.75 cv
290.875 140.5 290.5 140.313 290.125 140.313 cv
289.75 140.313 289.375 140.5 289.063 140.75 cv
288.813 141.063 288.625 141.438 288.625 141.813 cv
288.625 142.188 288.813 142.563 289.063 142.875 cv
289.375 143.125 289.75 143.313 290.125 143.313 cv
290.5 143.313 290.875 143.125 291.188 142.875 cv
291.438 142.563 291.625 142.188 291.625 141.813 cv
cp
f
293 143.125 mo
293 142.75 292.813 142.375 292.563 142.063 cv
292.25 141.813 291.875 141.625 291.5 141.625 cv
291.125 141.625 290.75 141.813 290.438 142.063 cv
290.188 142.375 290 142.75 290 143.125 cv
290 143.5 290.188 143.875 290.438 144.188 cv
290.75 144.438 291.125 144.625 291.5 144.625 cv
291.875 144.625 292.25 144.438 292.563 144.188 cv
292.813 143.875 293 143.5 293 143.125 cv
cp
f
294.375 144.563 mo
294.375 144.188 294.188 143.813 293.938 143.5 cv
293.625 143.25 293.25 143.063 292.875 143.063 cv
292.5 143.063 292.125 143.25 291.813 143.5 cv
291.563 143.813 291.375 144.188 291.375 144.563 cv
291.375 144.938 291.563 145.313 291.813 145.625 cv
292.125 145.875 292.5 146.063 292.875 146.063 cv
293.25 146.063 293.625 145.875 293.938 145.625 cv
294.188 145.313 294.375 144.938 294.375 144.563 cv
cp
f
295.75 145.75 mo
295.75 145.375 295.563 145 295.313 144.688 cv
295 144.438 294.625 144.25 294.25 144.25 cv
293.875 144.25 293.5 144.438 293.188 144.688 cv
292.938 145 292.75 145.375 292.75 145.75 cv
292.75 146.125 292.938 146.5 293.188 146.813 cv
293.5 147.063 293.875 147.25 294.25 147.25 cv
294.625 147.25 295 147.063 295.313 146.813 cv
295.563 146.5 295.75 146.125 295.75 145.75 cv
cp
f
297.125 146.813 mo
297.125 146.438 296.938 146.063 296.688 145.75 cv
296.375 145.5 296 145.313 295.625 145.313 cv
295.25 145.313 294.875 145.5 294.563 145.75 cv
294.313 146.063 294.125 146.438 294.125 146.813 cv
294.125 147.188 294.313 147.563 294.563 147.875 cv
294.875 148.125 295.25 148.313 295.625 148.313 cv
296 148.313 296.375 148.125 296.688 147.875 cv
296.938 147.563 297.125 147.188 297.125 146.813 cv
cp
f
298.5 148.188 mo
298.5 147.813 298.313 147.438 298.063 147.125 cv
297.75 146.875 297.375 146.688 297 146.688 cv
296.625 146.688 296.25 146.875 295.938 147.125 cv
295.688 147.438 295.5 147.813 295.5 148.188 cv
295.5 148.563 295.688 148.938 295.938 149.25 cv
296.25 149.5 296.625 149.688 297 149.688 cv
297.375 149.688 297.75 149.5 298.063 149.25 cv
298.313 148.938 298.5 148.563 298.5 148.188 cv
cp
f
299.875 148.938 mo
299.875 148.563 299.688 148.188 299.438 147.875 cv
299.125 147.625 298.75 147.438 298.375 147.438 cv
298 147.438 297.625 147.625 297.313 147.875 cv
297.063 148.188 296.875 148.563 296.875 148.938 cv
296.875 149.313 297.063 149.688 297.313 150 cv
297.625 150.25 298 150.438 298.375 150.438 cv
298.75 150.438 299.125 150.25 299.438 150 cv
299.688 149.688 299.875 149.313 299.875 148.938 cv
cp
f
301.25 150.5 mo
301.25 150.125 301.063 149.75 300.813 149.438 cv
300.5 149.188 300.125 149 299.75 149 cv
299.375 149 299 149.188 298.688 149.438 cv
298.438 149.75 298.25 150.125 298.25 150.5 cv
298.25 150.875 298.438 151.25 298.688 151.563 cv
299 151.813 299.375 152 299.75 152 cv
300.125 152 300.5 151.813 300.813 151.563 cv
301.063 151.25 301.25 150.875 301.25 150.5 cv
cp
f
302.625 150.625 mo
302.625 150.25 302.438 149.875 302.188 149.563 cv
301.875 149.313 301.5 149.125 301.125 149.125 cv
300.75 149.125 300.375 149.313 300.063 149.563 cv
299.813 149.875 299.625 150.25 299.625 150.625 cv
299.625 151 299.813 151.375 300.063 151.688 cv
300.375 151.938 300.75 152.125 301.125 152.125 cv
301.5 152.125 301.875 151.938 302.188 151.688 cv
302.438 151.375 302.625 151 302.625 150.625 cv
cp
f
304 152.063 mo
304 151.688 303.813 151.313 303.563 151 cv
303.25 150.75 302.875 150.563 302.5 150.563 cv
302.125 150.563 301.75 150.75 301.438 151 cv
301.188 151.313 301 151.688 301 152.063 cv
301 152.438 301.188 152.813 301.438 153.125 cv
301.75 153.375 302.125 153.563 302.5 153.563 cv
302.875 153.563 303.25 153.375 303.563 153.125 cv
303.813 152.813 304 152.438 304 152.063 cv
cp
f
305.375 152.813 mo
305.375 152.438 305.188 152.063 304.938 151.75 cv
304.625 151.5 304.25 151.313 303.875 151.313 cv
303.5 151.313 303.125 151.5 302.813 151.75 cv
302.563 152.063 302.375 152.438 302.375 152.813 cv
302.375 153.188 302.563 153.563 302.813 153.875 cv
303.125 154.125 303.5 154.313 303.875 154.313 cv
304.25 154.313 304.625 154.125 304.938 153.875 cv
305.188 153.563 305.375 153.188 305.375 152.813 cv
cp
f
306.75 153.75 mo
306.75 153.375 306.563 153 306.313 152.688 cv
306 152.438 305.625 152.25 305.25 152.25 cv
304.875 152.25 304.5 152.438 304.188 152.688 cv
303.938 153 303.75 153.375 303.75 153.75 cv
303.75 154.125 303.938 154.5 304.188 154.813 cv
304.5 155.063 304.875 155.25 305.25 155.25 cv
305.625 155.25 306 155.063 306.313 154.813 cv
306.563 154.5 306.75 154.125 306.75 153.75 cv
cp
f
308.125 154.375 mo
308.125 154 307.938 153.625 307.688 153.313 cv
307.375 153.063 307 152.875 306.625 152.875 cv
306.25 152.875 305.875 153.063 305.563 153.313 cv
305.313 153.625 305.125 154 305.125 154.375 cv
305.125 154.75 305.313 155.125 305.563 155.438 cv
305.875 155.688 306.25 155.875 306.625 155.875 cv
307 155.875 307.375 155.688 307.688 155.438 cv
307.938 155.125 308.125 154.75 308.125 154.375 cv
cp
f
309.5 155.125 mo
309.5 154.75 309.313 154.375 309.063 154.063 cv
308.75 153.813 308.375 153.625 308 153.625 cv
307.625 153.625 307.25 153.813 306.938 154.063 cv
306.688 154.375 306.5 154.75 306.5 155.125 cv
306.5 155.5 306.688 155.875 306.938 156.188 cv
307.25 156.438 307.625 156.625 308 156.625 cv
308.375 156.625 308.75 156.438 309.063 156.188 cv
309.313 155.875 309.5 155.5 309.5 155.125 cv
cp
f
310.875 155.875 mo
310.875 155.5 310.688 155.125 310.438 154.813 cv
310.125 154.563 309.75 154.375 309.375 154.375 cv
309 154.375 308.625 154.563 308.313 154.813 cv
308.063 155.125 307.875 155.5 307.875 155.875 cv
307.875 156.25 308.063 156.625 308.313 156.938 cv
308.625 157.188 309 157.375 309.375 157.375 cv
309.75 157.375 310.125 157.188 310.438 156.938 cv
310.688 156.625 310.875 156.25 310.875 155.875 cv
cp
f
312.25 156.438 mo
312.25 156.063 312.063 155.688 311.813 155.375 cv
311.5 155.125 311.125 154.938 310.75 154.938 cv
310.375 154.938 310 155.125 309.688 155.375 cv
309.438 155.688 309.25 156.063 309.25 156.438 cv
309.25 156.813 309.438 157.188 309.688 157.5 cv
310 157.75 310.375 157.938 310.75 157.938 cv
311.125 157.938 311.5 157.75 311.813 157.5 cv
312.063 157.188 312.25 156.813 312.25 156.438 cv
cp
f
313.625 157.313 mo
313.625 156.938 313.438 156.563 313.188 156.25 cv
312.875 156 312.5 155.813 312.125 155.813 cv
311.75 155.813 311.375 156 311.063 156.25 cv
310.813 156.563 310.625 156.938 310.625 157.313 cv
310.625 157.688 310.813 158.063 311.063 158.375 cv
311.375 158.625 311.75 158.813 312.125 158.813 cv
312.5 158.813 312.875 158.625 313.188 158.375 cv
313.438 158.063 313.625 157.688 313.625 157.313 cv
cp
f
315 157.938 mo
315 157.563 314.813 157.188 314.563 156.875 cv
314.25 156.625 313.875 156.438 313.5 156.438 cv
313.125 156.438 312.75 156.625 312.438 156.875 cv
312.188 157.188 312 157.563 312 157.938 cv
312 158.313 312.188 158.688 312.438 159 cv
312.75 159.25 313.125 159.438 313.5 159.438 cv
313.875 159.438 314.25 159.25 314.563 159 cv
314.813 158.688 315 158.313 315 157.938 cv
cp
f
316.438 158.313 mo
316.438 157.938 316.25 157.563 316 157.25 cv
315.688 157 315.313 156.813 314.938 156.813 cv
314.563 156.813 314.188 157 313.875 157.25 cv
313.625 157.563 313.438 157.938 313.438 158.313 cv
313.438 158.688 313.625 159.063 313.875 159.375 cv
314.188 159.625 314.563 159.813 314.938 159.813 cv
315.313 159.813 315.688 159.625 316 159.375 cv
316.25 159.063 316.438 158.688 316.438 158.313 cv
cp
f
317.813 158.875 mo
317.813 158.5 317.625 158.125 317.375 157.813 cv
317.063 157.563 316.688 157.375 316.313 157.375 cv
315.938 157.375 315.563 157.563 315.25 157.813 cv
315 158.125 314.813 158.5 314.813 158.875 cv
314.813 159.25 315 159.625 315.25 159.938 cv
315.563 160.188 315.938 160.375 316.313 160.375 cv
316.688 160.375 317.063 160.188 317.375 159.938 cv
317.625 159.625 317.813 159.25 317.813 158.875 cv
cp
f
319.188 159.438 mo
319.188 159.063 319 158.688 318.75 158.375 cv
318.438 158.125 318.063 157.938 317.688 157.938 cv
317.313 157.938 316.938 158.125 316.625 158.375 cv
316.375 158.688 316.188 159.063 316.188 159.438 cv
316.188 159.813 316.375 160.188 316.625 160.5 cv
316.938 160.75 317.313 160.938 317.688 160.938 cv
318.063 160.938 318.438 160.75 318.75 160.5 cv
319 160.188 319.188 159.813 319.188 159.438 cv
cp
f
320.563 160 mo
320.563 159.625 320.375 159.25 320.125 158.938 cv
319.813 158.688 319.438 158.5 319.063 158.5 cv
318.688 158.5 318.313 158.688 318 158.938 cv
317.75 159.25 317.563 159.625 317.563 160 cv
317.563 160.375 317.75 160.75 318 161.063 cv
318.313 161.313 318.688 161.5 319.063 161.5 cv
319.438 161.5 319.813 161.313 320.125 161.063 cv
320.375 160.75 320.563 160.375 320.563 160 cv
cp
f
321.938 160.375 mo
321.938 160 321.75 159.625 321.5 159.313 cv
321.188 159.063 320.813 158.875 320.438 158.875 cv
320.063 158.875 319.688 159.063 319.375 159.313 cv
319.125 159.625 318.938 160 318.938 160.375 cv
318.938 160.75 319.125 161.125 319.375 161.438 cv
319.688 161.688 320.063 161.875 320.438 161.875 cv
320.813 161.875 321.188 161.688 321.5 161.438 cv
321.75 161.125 321.938 160.75 321.938 160.375 cv
cp
f
323.313 161.063 mo
323.313 160.688 323.125 160.313 322.875 160 cv
322.563 159.75 322.188 159.563 321.813 159.563 cv
321.438 159.563 321.063 159.75 320.75 160 cv
320.5 160.313 320.313 160.688 320.313 161.063 cv
320.313 161.438 320.5 161.813 320.75 162.125 cv
321.063 162.375 321.438 162.563 321.813 162.563 cv
322.188 162.563 322.563 162.375 322.875 162.125 cv
323.125 161.813 323.313 161.438 323.313 161.063 cv
cp
f
324.688 161.688 mo
324.688 161.313 324.5 160.938 324.25 160.625 cv
323.938 160.375 323.563 160.188 323.188 160.188 cv
322.813 160.188 322.438 160.375 322.125 160.625 cv
321.875 160.938 321.688 161.313 321.688 161.688 cv
321.688 162.063 321.875 162.438 322.125 162.75 cv
322.438 163 322.813 163.188 323.188 163.188 cv
323.563 163.188 323.938 163 324.25 162.75 cv
324.5 162.438 324.688 162.063 324.688 161.688 cv
cp
f
326.063 161.875 mo
326.063 161.5 325.875 161.125 325.625 160.813 cv
325.313 160.563 324.938 160.375 324.563 160.375 cv
324.188 160.375 323.813 160.563 323.5 160.813 cv
323.25 161.125 323.063 161.5 323.063 161.875 cv
323.063 162.25 323.25 162.625 323.5 162.938 cv
323.813 163.188 324.188 163.375 324.563 163.375 cv
324.938 163.375 325.313 163.188 325.625 162.938 cv
325.875 162.625 326.063 162.25 326.063 161.875 cv
cp
f
327.438 162.438 mo
327.438 162.063 327.25 161.688 327 161.375 cv
326.688 161.125 326.313 160.938 325.938 160.938 cv
325.563 160.938 325.188 161.125 324.875 161.375 cv
324.625 161.688 324.438 162.063 324.438 162.438 cv
324.438 162.813 324.625 163.188 324.875 163.5 cv
325.188 163.75 325.563 163.938 325.938 163.938 cv
326.313 163.938 326.688 163.75 327 163.5 cv
327.25 163.188 327.438 162.813 327.438 162.438 cv
cp
f
328.813 162.688 mo
328.813 162.313 328.625 161.938 328.375 161.625 cv
328.063 161.375 327.688 161.188 327.313 161.188 cv
326.938 161.188 326.563 161.375 326.25 161.625 cv
326 161.938 325.813 162.313 325.813 162.688 cv
325.813 163.063 326 163.438 326.25 163.75 cv
326.563 164 326.938 164.188 327.313 164.188 cv
327.688 164.188 328.063 164 328.375 163.75 cv
328.625 163.438 328.813 163.063 328.813 162.688 cv
cp
f
330.188 163.063 mo
330.188 162.688 330 162.313 329.75 162 cv
329.438 161.75 329.063 161.563 328.688 161.563 cv
328.313 161.563 327.938 161.75 327.625 162 cv
327.375 162.313 327.188 162.688 327.188 163.063 cv
327.188 163.438 327.375 163.813 327.625 164.125 cv
327.938 164.375 328.313 164.563 328.688 164.563 cv
329.063 164.563 329.438 164.375 329.75 164.125 cv
330 163.813 330.188 163.438 330.188 163.063 cv
cp
f
331.563 163.5 mo
331.563 163.125 331.375 162.75 331.125 162.438 cv
330.813 162.188 330.438 162 330.063 162 cv
329.688 162 329.313 162.188 329 162.438 cv
328.75 162.75 328.563 163.125 328.563 163.5 cv
328.563 163.875 328.75 164.25 329 164.563 cv
329.313 164.813 329.688 165 330.063 165 cv
330.438 165 330.813 164.813 331.125 164.563 cv
331.375 164.25 331.563 163.875 331.563 163.5 cv
cp
f
332.938 163.938 mo
332.938 163.563 332.75 163.188 332.5 162.875 cv
332.188 162.625 331.813 162.438 331.438 162.438 cv
331.063 162.438 330.688 162.625 330.375 162.875 cv
330.125 163.188 329.938 163.563 329.938 163.938 cv
329.938 164.313 330.125 164.688 330.375 165 cv
330.688 165.25 331.063 165.438 331.438 165.438 cv
331.813 165.438 332.188 165.25 332.5 165 cv
332.75 164.688 332.938 164.313 332.938 163.938 cv
cp
f
334.313 164.063 mo
334.313 163.688 334.125 163.313 333.875 163 cv
333.563 162.75 333.188 162.563 332.813 162.563 cv
332.438 162.563 332.063 162.75 331.75 163 cv
331.5 163.313 331.313 163.688 331.313 164.063 cv
331.313 164.438 331.5 164.813 331.75 165.125 cv
332.063 165.375 332.438 165.563 332.813 165.563 cv
333.188 165.563 333.563 165.375 333.875 165.125 cv
334.125 164.813 334.313 164.438 334.313 164.063 cv
cp
f
335.688 164.625 mo
335.688 164.25 335.5 163.875 335.25 163.563 cv
334.938 163.313 334.563 163.125 334.188 163.125 cv
333.813 163.125 333.438 163.313 333.125 163.563 cv
332.875 163.875 332.688 164.25 332.688 164.625 cv
332.688 165 332.875 165.375 333.125 165.688 cv
333.438 165.938 333.813 166.125 334.188 166.125 cv
334.563 166.125 334.938 165.938 335.25 165.688 cv
335.5 165.375 335.688 165 335.688 164.625 cv
cp
f
337.063 164.75 mo
337.063 164.375 336.875 164 336.625 163.688 cv
336.313 163.438 335.938 163.25 335.563 163.25 cv
335.188 163.25 334.813 163.438 334.5 163.688 cv
334.25 164 334.063 164.375 334.063 164.75 cv
334.063 165.125 334.25 165.5 334.5 165.813 cv
334.813 166.063 335.188 166.25 335.563 166.25 cv
335.938 166.25 336.313 166.063 336.625 165.813 cv
336.875 165.5 337.063 165.125 337.063 164.75 cv
cp
f
338.438 165.063 mo
338.438 164.688 338.25 164.313 338 164 cv
337.688 163.75 337.313 163.563 336.938 163.563 cv
336.563 163.563 336.188 163.75 335.875 164 cv
335.625 164.313 335.438 164.688 335.438 165.063 cv
335.438 165.438 335.625 165.813 335.875 166.125 cv
336.188 166.375 336.563 166.563 336.938 166.563 cv
337.313 166.563 337.688 166.375 338 166.125 cv
338.25 165.813 338.438 165.438 338.438 165.063 cv
cp
f
339.813 165.438 mo
339.813 165.063 339.625 164.688 339.375 164.375 cv
339.063 164.125 338.688 163.938 338.313 163.938 cv
337.938 163.938 337.563 164.125 337.25 164.375 cv
337 164.688 336.813 165.063 336.813 165.438 cv
336.813 165.813 337 166.188 337.25 166.5 cv
337.563 166.75 337.938 166.938 338.313 166.938 cv
338.688 166.938 339.063 166.75 339.375 166.5 cv
339.625 166.188 339.813 165.813 339.813 165.438 cv
cp
f
341.188 166.125 mo
341.188 165.75 341 165.375 340.75 165.063 cv
340.438 164.813 340.063 164.625 339.688 164.625 cv
339.313 164.625 338.938 164.813 338.625 165.063 cv
338.375 165.375 338.188 165.75 338.188 166.125 cv
338.188 166.5 338.375 166.875 338.625 167.188 cv
338.938 167.438 339.313 167.625 339.688 167.625 cv
340.063 167.625 340.438 167.438 340.75 167.188 cv
341 166.875 341.188 166.5 341.188 166.125 cv
cp
f
342.563 165.813 mo
342.563 165.438 342.375 165.063 342.125 164.75 cv
341.813 164.5 341.438 164.313 341.063 164.313 cv
340.688 164.313 340.313 164.5 340 164.75 cv
339.75 165.063 339.563 165.438 339.563 165.813 cv
339.563 166.188 339.75 166.563 340 166.875 cv
340.313 167.125 340.688 167.313 341.063 167.313 cv
341.438 167.313 341.813 167.125 342.125 166.875 cv
342.375 166.563 342.563 166.188 342.563 165.813 cv
cp
f
343.938 166 mo
343.938 165.625 343.75 165.25 343.5 164.938 cv
343.188 164.688 342.813 164.5 342.438 164.5 cv
342.063 164.5 341.688 164.688 341.375 164.938 cv
341.125 165.25 340.938 165.625 340.938 166 cv
340.938 166.375 341.125 166.75 341.375 167.063 cv
341.688 167.313 342.063 167.5 342.438 167.5 cv
342.813 167.5 343.188 167.313 343.5 167.063 cv
343.75 166.75 343.938 166.375 343.938 166 cv
cp
f
345.375 166.438 mo
345.375 166.063 345.188 165.688 344.938 165.375 cv
344.625 165.125 344.25 164.938 343.875 164.938 cv
343.5 164.938 343.125 165.125 342.813 165.375 cv
342.563 165.688 342.375 166.063 342.375 166.438 cv
342.375 166.813 342.563 167.188 342.813 167.5 cv
343.125 167.75 343.5 167.938 343.875 167.938 cv
344.25 167.938 344.625 167.75 344.938 167.5 cv
345.188 167.188 345.375 166.813 345.375 166.438 cv
cp
f
346.75 166.938 mo
346.75 166.563 346.563 166.188 346.313 165.875 cv
346 165.625 345.625 165.438 345.25 165.438 cv
344.875 165.438 344.5 165.625 344.188 165.875 cv
343.938 166.188 343.75 166.563 343.75 166.938 cv
343.75 167.313 343.938 167.688 344.188 168 cv
344.5 168.25 344.875 168.438 345.25 168.438 cv
345.625 168.438 346 168.25 346.313 168 cv
346.563 167.688 346.75 167.313 346.75 166.938 cv
cp
f
348.125 167.125 mo
348.125 166.75 347.938 166.375 347.688 166.063 cv
347.375 165.813 347 165.625 346.625 165.625 cv
346.25 165.625 345.875 165.813 345.563 166.063 cv
345.313 166.375 345.125 166.75 345.125 167.125 cv
345.125 167.5 345.313 167.875 345.563 168.188 cv
345.875 168.438 346.25 168.625 346.625 168.625 cv
347 168.625 347.375 168.438 347.688 168.188 cv
347.938 167.875 348.125 167.5 348.125 167.125 cv
cp
f
349.5 167.25 mo
349.5 166.875 349.313 166.5 349.063 166.188 cv
348.75 165.938 348.375 165.75 348 165.75 cv
347.625 165.75 347.25 165.938 346.938 166.188 cv
346.688 166.5 346.5 166.875 346.5 167.25 cv
346.5 167.625 346.688 168 346.938 168.313 cv
347.25 168.563 347.625 168.75 348 168.75 cv
348.375 168.75 348.75 168.563 349.063 168.313 cv
349.313 168 349.5 167.625 349.5 167.25 cv
cp
f
350.875 167.563 mo
350.875 167.188 350.688 166.813 350.438 166.5 cv
350.125 166.25 349.75 166.063 349.375 166.063 cv
349 166.063 348.625 166.25 348.313 166.5 cv
348.063 166.813 347.875 167.188 347.875 167.563 cv
347.875 167.938 348.063 168.313 348.313 168.625 cv
348.625 168.875 349 169.063 349.375 169.063 cv
349.75 169.063 350.125 168.875 350.438 168.625 cv
350.688 168.313 350.875 167.938 350.875 167.563 cv
cp
f
352.25 167.563 mo
352.25 167.188 352.063 166.813 351.813 166.5 cv
351.5 166.25 351.125 166.063 350.75 166.063 cv
350.375 166.063 350 166.25 349.688 166.5 cv
349.438 166.813 349.25 167.188 349.25 167.563 cv
349.25 167.938 349.438 168.313 349.688 168.625 cv
350 168.875 350.375 169.063 350.75 169.063 cv
351.125 169.063 351.5 168.875 351.813 168.625 cv
352.063 168.313 352.25 167.938 352.25 167.563 cv
cp
f
353.625 167.875 mo
353.625 167.5 353.438 167.125 353.188 166.813 cv
352.875 166.563 352.5 166.375 352.125 166.375 cv
351.75 166.375 351.375 166.563 351.063 166.813 cv
350.813 167.125 350.625 167.5 350.625 167.875 cv
350.625 168.25 350.813 168.625 351.063 168.938 cv
351.375 169.188 351.75 169.375 352.125 169.375 cv
352.5 169.375 352.875 169.188 353.188 168.938 cv
353.438 168.625 353.625 168.25 353.625 167.875 cv
cp
f
355 168 mo
355 167.625 354.813 167.25 354.563 166.938 cv
354.25 166.688 353.875 166.5 353.5 166.5 cv
353.125 166.5 352.75 166.688 352.438 166.938 cv
352.188 167.25 352 167.625 352 168 cv
352 168.375 352.188 168.75 352.438 169.063 cv
352.75 169.313 353.125 169.5 353.5 169.5 cv
353.875 169.5 354.25 169.313 354.563 169.063 cv
354.813 168.75 355 168.375 355 168 cv
cp
f
356.375 168.313 mo
356.375 167.938 356.188 167.563 355.938 167.25 cv
355.625 167 355.25 166.813 354.875 166.813 cv
354.5 166.813 354.125 167 353.813 167.25 cv
353.563 167.563 353.375 167.938 353.375 168.313 cv
353.375 168.688 353.563 169.063 353.813 169.375 cv
354.125 169.625 354.5 169.813 354.875 169.813 cv
355.25 169.813 355.625 169.625 355.938 169.375 cv
356.188 169.063 356.375 168.688 356.375 168.313 cv
cp
f
357.75 168.313 mo
357.75 167.938 357.563 167.563 357.313 167.25 cv
357 167 356.625 166.813 356.25 166.813 cv
355.875 166.813 355.5 167 355.188 167.25 cv
354.938 167.563 354.75 167.938 354.75 168.313 cv
354.75 168.688 354.938 169.063 355.188 169.375 cv
355.5 169.625 355.875 169.813 356.25 169.813 cv
356.625 169.813 357 169.625 357.313 169.375 cv
357.563 169.063 357.75 168.688 357.75 168.313 cv
cp
f
359.125 168.625 mo
359.125 168.25 358.938 167.875 358.688 167.563 cv
358.375 167.313 358 167.125 357.625 167.125 cv
357.25 167.125 356.875 167.313 356.563 167.563 cv
356.313 167.875 356.125 168.25 356.125 168.625 cv
356.125 169 356.313 169.375 356.563 169.688 cv
356.875 169.938 357.25 170.125 357.625 170.125 cv
358 170.125 358.375 169.938 358.688 169.688 cv
358.938 169.375 359.125 169 359.125 168.625 cv
cp
f
360.5 168.813 mo
360.5 168.438 360.313 168.063 360.063 167.75 cv
359.75 167.5 359.375 167.313 359 167.313 cv
358.625 167.313 358.25 167.5 357.938 167.75 cv
357.688 168.063 357.5 168.438 357.5 168.813 cv
357.5 169.188 357.688 169.563 357.938 169.875 cv
358.25 170.125 358.625 170.313 359 170.313 cv
359.375 170.313 359.75 170.125 360.063 169.875 cv
360.313 169.563 360.5 169.188 360.5 168.813 cv
cp
f
361.875 168.875 mo
361.875 168.5 361.688 168.125 361.438 167.813 cv
361.125 167.563 360.75 167.375 360.375 167.375 cv
360 167.375 359.625 167.563 359.313 167.813 cv
359.063 168.125 358.875 168.5 358.875 168.875 cv
358.875 169.25 359.063 169.625 359.313 169.938 cv
359.625 170.188 360 170.375 360.375 170.375 cv
360.75 170.375 361.125 170.188 361.438 169.938 cv
361.688 169.625 361.875 169.25 361.875 168.875 cv
cp
f
363.25 169 mo
363.25 168.625 363.063 168.25 362.813 167.938 cv
362.5 167.688 362.125 167.5 361.75 167.5 cv
361.375 167.5 361 167.688 360.688 167.938 cv
360.438 168.25 360.25 168.625 360.25 169 cv
360.25 169.375 360.438 169.75 360.688 170.063 cv
361 170.313 361.375 170.5 361.75 170.5 cv
362.125 170.5 362.5 170.313 362.813 170.063 cv
363.063 169.75 363.25 169.375 363.25 169 cv
cp
f
364.625 169.25 mo
364.625 168.875 364.438 168.5 364.188 168.188 cv
363.875 167.938 363.5 167.75 363.125 167.75 cv
362.75 167.75 362.375 167.938 362.063 168.188 cv
361.813 168.5 361.625 168.875 361.625 169.25 cv
361.625 169.625 361.813 170 362.063 170.313 cv
362.375 170.563 362.75 170.75 363.125 170.75 cv
363.5 170.75 363.875 170.563 364.188 170.313 cv
364.438 170 364.625 169.625 364.625 169.25 cv
cp
f
366 169.563 mo
366 169.188 365.813 168.813 365.563 168.5 cv
365.25 168.25 364.875 168.063 364.5 168.063 cv
364.125 168.063 363.75 168.25 363.438 168.5 cv
363.188 168.813 363 169.188 363 169.563 cv
363 169.938 363.188 170.313 363.438 170.625 cv
363.75 170.875 364.125 171.063 364.5 171.063 cv
364.875 171.063 365.25 170.875 365.563 170.625 cv
365.813 170.313 366 169.938 366 169.563 cv
cp
f
367.375 169.688 mo
367.375 169.313 367.188 168.938 366.938 168.625 cv
366.625 168.375 366.25 168.188 365.875 168.188 cv
365.5 168.188 365.125 168.375 364.813 168.625 cv
364.563 168.938 364.375 169.313 364.375 169.688 cv
364.375 170.063 364.563 170.438 364.813 170.75 cv
365.125 171 365.5 171.188 365.875 171.188 cv
366.25 171.188 366.625 171 366.938 170.75 cv
367.188 170.438 367.375 170.063 367.375 169.688 cv
cp
f
368.75 169.625 mo
368.75 169.25 368.563 168.875 368.313 168.563 cv
368 168.313 367.625 168.125 367.25 168.125 cv
366.875 168.125 366.5 168.313 366.188 168.563 cv
365.938 168.875 365.75 169.25 365.75 169.625 cv
365.75 170 365.938 170.375 366.188 170.688 cv
366.5 170.938 366.875 171.125 367.25 171.125 cv
367.625 171.125 368 170.938 368.313 170.688 cv
368.563 170.375 368.75 170 368.75 169.625 cv
cp
f
370.125 169.75 mo
370.125 169.375 369.938 169 369.688 168.688 cv
369.375 168.438 369 168.25 368.625 168.25 cv
368.25 168.25 367.875 168.438 367.563 168.688 cv
367.313 169 367.125 169.375 367.125 169.75 cv
367.125 170.125 367.313 170.5 367.563 170.813 cv
367.875 171.063 368.25 171.25 368.625 171.25 cv
369 171.25 369.375 171.063 369.688 170.813 cv
369.938 170.5 370.125 170.125 370.125 169.75 cv
cp
f
371.5 169.938 mo
371.5 169.563 371.313 169.188 371.063 168.875 cv
370.75 168.625 370.375 168.438 370 168.438 cv
369.625 168.438 369.25 168.625 368.938 168.875 cv
368.688 169.188 368.5 169.563 368.5 169.938 cv
368.5 170.313 368.688 170.688 368.938 171 cv
369.25 171.25 369.625 171.438 370 171.438 cv
370.375 171.438 370.75 171.25 371.063 171 cv
371.313 170.688 371.5 170.313 371.5 169.938 cv
cp
f
372.938 170.5 mo
372.938 170.125 372.75 169.75 372.5 169.438 cv
372.188 169.188 371.813 169 371.438 169 cv
371.063 169 370.688 169.188 370.375 169.438 cv
370.125 169.75 369.938 170.125 369.938 170.5 cv
369.938 170.875 370.125 171.25 370.375 171.563 cv
370.688 171.813 371.063 172 371.438 172 cv
371.813 172 372.188 171.813 372.5 171.563 cv
372.75 171.25 372.938 170.875 372.938 170.5 cv
cp
f
374.313 170.313 mo
374.313 169.938 374.125 169.563 373.875 169.25 cv
373.563 169 373.188 168.813 372.813 168.813 cv
372.438 168.813 372.063 169 371.75 169.25 cv
371.5 169.563 371.313 169.938 371.313 170.313 cv
371.313 170.688 371.5 171.063 371.75 171.375 cv
372.063 171.625 372.438 171.813 372.813 171.813 cv
373.188 171.813 373.563 171.625 373.875 171.375 cv
374.125 171.063 374.313 170.688 374.313 170.313 cv
cp
f
375.688 170.313 mo
375.688 169.938 375.5 169.563 375.25 169.25 cv
374.938 169 374.563 168.813 374.188 168.813 cv
373.813 168.813 373.438 169 373.125 169.25 cv
372.875 169.563 372.688 169.938 372.688 170.313 cv
372.688 170.688 372.875 171.063 373.125 171.375 cv
373.438 171.625 373.813 171.813 374.188 171.813 cv
374.563 171.813 374.938 171.625 375.25 171.375 cv
375.5 171.063 375.688 170.688 375.688 170.313 cv
cp
f
377.063 170.5 mo
377.063 170.125 376.875 169.75 376.625 169.438 cv
376.313 169.188 375.938 169 375.563 169 cv
375.188 169 374.813 169.188 374.5 169.438 cv
374.25 169.75 374.063 170.125 374.063 170.5 cv
374.063 170.875 374.25 171.25 374.5 171.563 cv
374.813 171.813 375.188 172 375.563 172 cv
375.938 172 376.313 171.813 376.625 171.563 cv
376.875 171.25 377.063 170.875 377.063 170.5 cv
cp
f
378.438 170.625 mo
378.438 170.25 378.25 169.875 378 169.563 cv
377.688 169.313 377.313 169.125 376.938 169.125 cv
376.563 169.125 376.188 169.313 375.875 169.563 cv
375.625 169.875 375.438 170.25 375.438 170.625 cv
375.438 171 375.625 171.375 375.875 171.688 cv
376.188 171.938 376.563 172.125 376.938 172.125 cv
377.313 172.125 377.688 171.938 378 171.688 cv
378.25 171.375 378.438 171 378.438 170.625 cv
cp
f
379.813 170.563 mo
379.813 170.188 379.625 169.813 379.375 169.5 cv
379.063 169.25 378.688 169.063 378.313 169.063 cv
377.938 169.063 377.563 169.25 377.25 169.5 cv
377 169.813 376.813 170.188 376.813 170.563 cv
376.813 170.938 377 171.313 377.25 171.625 cv
377.563 171.875 377.938 172.063 378.313 172.063 cv
378.688 172.063 379.063 171.875 379.375 171.625 cv
379.625 171.313 379.813 170.938 379.813 170.563 cv
cp
f
381.188 170.938 mo
381.188 170.563 381 170.188 380.75 169.875 cv
380.438 169.625 380.063 169.438 379.688 169.438 cv
379.313 169.438 378.938 169.625 378.625 169.875 cv
378.375 170.188 378.188 170.563 378.188 170.938 cv
378.188 171.313 378.375 171.688 378.625 172 cv
378.938 172.25 379.313 172.438 379.688 172.438 cv
380.063 172.438 380.438 172.25 380.75 172 cv
381 171.688 381.188 171.313 381.188 170.938 cv
cp
f
382.563 170.875 mo
382.563 170.5 382.375 170.125 382.125 169.813 cv
381.813 169.563 381.438 169.375 381.063 169.375 cv
380.688 169.375 380.313 169.563 380 169.813 cv
379.75 170.125 379.563 170.5 379.563 170.875 cv
379.563 171.25 379.75 171.625 380 171.938 cv
380.313 172.188 380.688 172.375 381.063 172.375 cv
381.438 172.375 381.813 172.188 382.125 171.938 cv
382.375 171.625 382.563 171.25 382.563 170.875 cv
cp
f
383.938 171.125 mo
383.938 170.75 383.75 170.375 383.5 170.063 cv
383.188 169.813 382.813 169.625 382.438 169.625 cv
382.063 169.625 381.688 169.813 381.375 170.063 cv
381.125 170.375 380.938 170.75 380.938 171.125 cv
380.938 171.5 381.125 171.875 381.375 172.188 cv
381.688 172.438 382.063 172.625 382.438 172.625 cv
382.813 172.625 383.188 172.438 383.5 172.188 cv
383.75 171.875 383.938 171.5 383.938 171.125 cv
cp
f
385.313 171.063 mo
385.313 170.688 385.125 170.313 384.875 170 cv
384.563 169.75 384.188 169.563 383.813 169.563 cv
383.438 169.563 383.063 169.75 382.75 170 cv
382.5 170.313 382.313 170.688 382.313 171.063 cv
382.313 171.438 382.5 171.813 382.75 172.125 cv
383.063 172.375 383.438 172.563 383.813 172.563 cv
384.188 172.563 384.563 172.375 384.875 172.125 cv
385.125 171.813 385.313 171.438 385.313 171.063 cv
cp
f
386.688 171.5 mo
386.688 171.125 386.5 170.75 386.25 170.438 cv
385.938 170.188 385.563 170 385.188 170 cv
384.813 170 384.438 170.188 384.125 170.438 cv
383.875 170.75 383.688 171.125 383.688 171.5 cv
383.688 171.875 383.875 172.25 384.125 172.563 cv
384.438 172.813 384.813 173 385.188 173 cv
385.563 173 385.938 172.813 386.25 172.563 cv
386.5 172.25 386.688 171.875 386.688 171.5 cv
cp
f
gsave
90.999 0 mo
90.999 189.999 li
390.996 189.999 li
390.996 0 li
90.999 0 li
clp
390.781 0.40625 mo
390.781 177.094 li
390.969 177.094 li
390.969 0.40625 li
cp
105.156 0.59375 mo
390.969 0.59375 li
390.969 0.40625 li
105.156 0.40625 li
cp
105.344 177.094 mo
105.344 0.40625 li
105.156 0.40625 li
105.156 177.094 li
cp
390.969 176.906 mo
105.156 176.906 li
105.156 177.094 li
390.969 177.094 li
cp
0 0 0 1 cmyk
f
grestore
145.531 177 mo
145.531 173.625 li
145.344 173.625 li
145.344 177 li
cp
131.719 177 mo
131.719 175 li
131.531 175 li
131.531 177 li
cp
117.969 177 mo
117.969 175 li
117.781 175 li
117.781 177 li
cp
0 0 0 1 cmyk
f
%ADOBeginSubsetFont: Times-Roman Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Times-Roman def/FontInfo 5 dict dup begin/ItalicAngle 0 def/OrigFontType /TrueType defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 48 /zero putdup 50 /two putdup 51 /three putdef/FontBBox {-203 -428 1700 1271} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings4 dict dup begin/.notdef <1C60D8A8C9B6079F6CEA24BDEB0F5E4D18DF0CD7E2A11E9D72D963E3987D5E4E6C9FCD> |-/zero <1C60D8A8C9B7A73DB9A6590C6FE2B7096DCA6F9A5EA5CF6E8AC2157EC7418EBDC43117FA8257DD5995ADA72B55217A703B5CBF244854B4360CFDF4258ECD5C9DEB492AEA5EC77E976B17AE7E2222D3F2CC89571B26AFB82DDBE99926812437BF7851C7D506B52E7A7DE1242CAC6D81645AF838199FD3EBA9B534D647714BFDCAF64F05E4> |-/two <1C60D8A8C9B7A73DE72BAD97A1AB14497350B04AEDCC89B810A7A7579EC67BBA1BB072CAE80FF5F224043D73141B835306B538E1A090321AB63325D8B3A58C70F1FD34F3553B37A8BF6164DDA11E437012DC022ABF8601BBE36E43FA1BA89215476687E89F4C0A4BCB6119B7B6C22E9A6D30709E37D3141BAD532924FFAD1DE501B4> |-/three <1C60D8A8C9B7A73D960D5C905E34DC81A096980F2B4111B9B099A6DB83E1916FF3E1A9E04B02D3E9232818F77B09A9AACB5832FED542FDDA70002EB05443C3A08AC9203ACF784CB865C5B9F7D872416879897E73175190413158DECCEEC3F81053539EF7A5BA54848FD5EF8191B77C87FC4B2FB70A247D6480306D63973D6D1E40988764838CF4D7C7CFD56B10F551336B687A8CAD70446C673C2BFDC7C6AD86547DB031DFD479DCB051DAF5177334E8CD4B35F8B65FC86BD3BDBBB8D1E2B3149970112D8374721C0AB537409EB4ADF5E62264D22634EE> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/ZWYBST+Times-Roman /Times-Roman findfont ct_VMDictPut/ZWYBST+Times-Roman*1 [48{/.notdef}rp /zero /.notdef /two /three 204{/.notdef}rp]ZWYBST+Times-Roman nfZWYBST+Times-Roman*1 [9 0 0 -9 0 0 ]msf138.258 188.016 mo(230)[4.5 4.5 0 ]xsh214.406 177 mo
214.406 173.625 li
214.219 173.625 li
214.219 177 li
cp
200.656 177 mo
200.656 175 li
200.469 175 li
200.469 177 li
cp
186.844 177 mo
186.844 175 li
186.656 175 li
186.656 177 li
cp
173.094 177 mo
173.094 175 li
172.906 175 li
172.906 177 li
cp
159.281 177 mo
159.281 175 li
159.094 175 li
159.094 177 li
cp
f
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginZWYBST+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/four <1C60D8A8C9B7A73DB992534E0CF1B84939C969D2AC65F1AE73EE883487A67D0ECB26822C5FF826C828AC8594DE5FF3D9E5AE6F090B> |-systemdict /gcheck known {setglobal} if end {end} ifendZWYBST+Times-Roman /Encoding getdup 52 /four putpop%ADOEndSubsetFont
/ZWYBST+Times-Roman*1 [48{/.notdef}rp /zero /.notdef /two /three /four 203{/.notdef}rp]ZWYBST+Times-Roman nfZWYBST+Times-Roman*1 [9 0 0 -9 0 0 ]msf207.164 188.016 mo(240)[4.5 4.5 0 ]xsh283.281 177 mo
283.281 173.625 li
283.094 173.625 li
283.094 177 li
cp
269.531 177 mo
269.531 175 li
269.344 175 li
269.344 177 li
cp
255.719 177 mo
255.719 175 li
255.531 175 li
255.531 177 li
cp
241.969 177 mo
241.969 175 li
241.781 175 li
241.781 177 li
cp
228.219 177 mo
228.219 175 li
228.031 175 li
228.031 177 li
cp
f
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginZWYBST+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/five <1C60D8A8C9B7A73D986C0D7DE9D329253DCB6E971CF9F86B9AEBF9128F879E3BA076A7524F8AC6EF0948A0BD36A1BBAD3176809EA5D8C10BC04F27D1FCF8D9BA3577509C082FF1EE49DF22B08F8B21F3A6C3932A3BC82C6C594431B4032E2BEF80E15787B3E427A047FD8FD191291F42BAC74588B21DCB1EB3232C29BA67B72B9A00CCBC571F0227C6EF50964CF91F1B0EC573A04AE3E4DF9447B77BD2A0A959F534BEC79AECEF51C27F8D677FD06B99742B747A695088E88EBCC4A6BCCC7402ABFDFE9926161D96> |-systemdict /gcheck known {setglobal} if end {end} ifendZWYBST+Times-Roman /Encoding getdup 53 /five putpop%ADOEndSubsetFont
/ZWYBST+Times-Roman*1 [48{/.notdef}rp /zero /.notdef /two /three /four /five 202{/.notdef}rp]ZWYBST+Times-Roman nfZWYBST+Times-Roman*1 [9 0 0 -9 0 0 ]msf276.055 188.016 mo(250)[4.5 4.5 0 ]xsh352.219 177 mo
352.219 173.625 li
352.031 173.625 li
352.031 177 li
cp
338.406 177 mo
338.406 175 li
338.219 175 li
338.219 177 li
cp
324.656 177 mo
324.656 175 li
324.469 175 li
324.469 177 li
cp
310.844 177 mo
310.844 175 li
310.656 175 li
310.656 177 li
cp
297.094 177 mo
297.094 175 li
296.906 175 li
296.906 177 li
cp
f
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginZWYBST+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/six <1C60D8A8C9B7A73DB6D2877672A15D933475028E1A563F35D9B429BC044364BBEA6C8D8E288B5629F6BF21219495DF799C22E6D194E7EF19D2BF50638A5DFD525E61CAA756DFB58BC6CF02B70355716B1567E587BDF24EE1CD60FDA306A5E8E3EC9A065FDF865555F45DE4B3A9666958B7C5B64C412BD6705A27F81BA359AA5385B74802E199214ED2C08D85C8D9515B8A71A37E696B11B788D46272326187B79B809C5ABF82FEBD4C4DE257125A17BA43> |-systemdict /gcheck known {setglobal} if end {end} ifendZWYBST+Times-Roman /Encoding getdup 54 /six putpop%ADOEndSubsetFont
/ZWYBST+Times-Roman*1 [48{/.notdef}rp /zero /.notdef /two /three /four /five /six 201{/.notdef}rp]ZWYBST+Times-Roman nfZWYBST+Times-Roman*1 [9 0 0 -9 0 0 ]msf344.961 188.016 mo(260)[4.5 4.5 0 ]xsh105.25 126.031 mo
108.625 126.031 li
108.625 125.844 li
105.25 125.844 li
cp
105.25 136.281 mo
107.25 136.281 li
107.25 136.094 li
105.25 136.094 li
cp
105.25 146.594 mo
107.25 146.594 li
107.25 146.406 li
105.25 146.406 li
cp
105.25 156.844 mo
107.25 156.844 li
107.25 156.656 li
105.25 156.656 li
cp
105.25 167.094 mo
107.25 167.094 li
107.25 166.906 li
105.25 166.906 li
cp
379.781 177 mo
379.781 175 li
379.594 175 li
379.594 177 li
cp
365.969 177 mo
365.969 175 li
365.781 175 li
365.781 177 li
cp
f
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginZWYBST+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B8707CDCE5666C9B3EABE1C8F3B5685DC89284E5BE559D084487449BF37D1D86EF1322476306E241C4EF3BA9B7322496F4AC15DB69BEC6340D464440EA95046229> |-systemdict /gcheck known {setglobal} if end {end} ifendZWYBST+Times-Roman /Encoding getdup 46 /period putpop%ADOEndSubsetFont
/ZWYBST+Times-Roman*1 [46{/.notdef}rp /period /.notdef /zero /.notdef /two /three /four /five /six 201{/.notdef}rp]ZWYBST+Times-Roman nfZWYBST+Times-Roman*1 [9 0 0 -9 0 0 ]msf91 128.914 mo(0.)[4.5 0 ]xsh97.75 128.914 mo(5)sh105.25 74.5938 mo
108.625 74.5938 li
108.625 74.4063 li
105.25 74.4063 li
cp
105.25 84.9063 mo
107.25 84.9063 li
107.25 84.7188 li
105.25 84.7188 li
cp
105.25 95.1563 mo
107.25 95.1563 li
107.25 94.9688 li
105.25 94.9688 li
cp
105.25 105.469 mo
107.25 105.469 li
107.25 105.281 li
105.25 105.281 li
cp
105.25 115.719 mo
107.25 115.719 li
107.25 115.531 li
105.25 115.531 li
cp
f
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginZWYBST+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/one <1C60D8A8C9B7A73DB999B05B43470AE76323D53E9C54AE29C0ACC4151BDD30C8F3109BFE7DACF9BA339B31B8666788A01E1F3860FDA3F22312D6A6628C8CCA55270976BF3BB8008DD87D719627657135E81F194E374733A743BBCD543132801A49C4BA675F59C41D> |-systemdict /gcheck known {setglobal} if end {end} ifendZWYBST+Times-Roman /Encoding getdup 49 /one putpop%ADOEndSubsetFont
/ZWYBST+Times-Roman*1 [46{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six 201{/.notdef}rp]ZWYBST+Times-Roman nfZWYBST+Times-Roman*1 [9 0 0 -9 0 0 ]msf91 77.5078 mo(1.)[4.5 0 ]xsh97.75 77.5078 mo(0)sh105.25 23.2188 mo
108.625 23.2188 li
108.625 23.0313 li
105.25 23.0313 li
cp
105.25 33.4688 mo
107.25 33.4688 li
107.25 33.2813 li
105.25 33.2813 li
cp
105.25 43.7813 mo
107.25 43.7813 li
107.25 43.5938 li
105.25 43.5938 li
cp
105.25 54.0313 mo
107.25 54.0313 li
107.25 53.8438 li
105.25 53.8438 li
cp
105.25 64.3438 mo
107.25 64.3438 li
107.25 64.1563 li
105.25 64.1563 li
cp
f
ZWYBST+Times-Roman*1 [9 0 0 -9 0 0 ]msf91 26.1094 mo(1.)[4.5 0 ]xsh97.75 26.1094 mo(5)shgsave
90.999 0 mo
90.999 189.999 li
390.996 189.999 li
390.996 0 li
90.999 0 li
clp
390.875 2.46875 mo
388.875 2.46875 li
388.875 2.65625 li
390.875 2.65625 li
cp
390.875 12.7188 mo
388.875 12.7188 li
388.875 12.9063 li
390.875 12.9063 li
cp
390.875 23.0313 mo
387.5 23.0313 li
387.5 23.2188 li
390.875 23.2188 li
cp
390.875 33.2813 mo
388.875 33.2813 li
388.875 33.4688 li
390.875 33.4688 li
cp
390.875 43.5938 mo
388.875 43.5938 li
388.875 43.7813 li
390.875 43.7813 li
cp
390.875 53.8438 mo
388.875 53.8438 li
388.875 54.0313 li
390.875 54.0313 li
cp
390.875 64.1563 mo
388.875 64.1563 li
388.875 64.3438 li
390.875 64.3438 li
cp
390.875 74.4063 mo
387.5 74.4063 li
387.5 74.5938 li
390.875 74.5938 li
cp
390.875 84.7188 mo
388.875 84.7188 li
388.875 84.9063 li
390.875 84.9063 li
cp
390.875 94.9688 mo
388.875 94.9688 li
388.875 95.1563 li
390.875 95.1563 li
cp
390.875 105.281 mo
388.875 105.281 li
388.875 105.469 li
390.875 105.469 li
cp
390.875 115.531 mo
388.875 115.531 li
388.875 115.719 li
390.875 115.719 li
cp
390.875 125.844 mo
387.5 125.844 li
387.5 126.031 li
390.875 126.031 li
cp
390.875 136.094 mo
388.875 136.094 li
388.875 136.281 li
390.875 136.281 li
cp
390.875 146.406 mo
388.875 146.406 li
388.875 146.594 li
390.875 146.594 li
cp
390.875 156.656 mo
388.875 156.656 li
388.875 156.844 li
390.875 156.844 li
cp
390.875 166.906 mo
388.875 166.906 li
388.875 167.094 li
390.875 167.094 li
cp
379.594 0.5 mo
379.594 2.5 li
379.781 2.5 li
379.781 0.5 li
cp
365.781 0.5 mo
365.781 2.5 li
365.969 2.5 li
365.969 0.5 li
cp
352.031 0.5 mo
352.031 3.875 li
352.219 3.875 li
352.219 0.5 li
cp
338.219 0.5 mo
338.219 2.5 li
338.406 2.5 li
338.406 0.5 li
cp
324.469 0.5 mo
324.469 2.5 li
324.656 2.5 li
324.656 0.5 li
cp
310.656 0.5 mo
310.656 2.5 li
310.844 2.5 li
310.844 0.5 li
cp
296.906 0.5 mo
296.906 2.5 li
297.094 2.5 li
297.094 0.5 li
cp
283.094 0.5 mo
283.094 3.875 li
283.281 3.875 li
283.281 0.5 li
cp
269.344 0.5 mo
269.344 2.5 li
269.531 2.5 li
269.531 0.5 li
cp
255.531 0.5 mo
255.531 2.5 li
255.719 2.5 li
255.719 0.5 li
cp
241.781 0.5 mo
241.781 2.5 li
241.969 2.5 li
241.969 0.5 li
cp
228.031 0.5 mo
228.031 2.5 li
228.219 2.5 li
228.219 0.5 li
cp
214.219 0.5 mo
214.219 3.875 li
214.406 3.875 li
214.406 0.5 li
cp
200.469 0.5 mo
200.469 2.5 li
200.656 2.5 li
200.656 0.5 li
cp
186.656 0.5 mo
186.656 2.5 li
186.844 2.5 li
186.844 0.5 li
cp
172.906 0.5 mo
172.906 2.5 li
173.094 2.5 li
173.094 0.5 li
cp
159.094 0.5 mo
159.094 2.5 li
159.281 2.5 li
159.281 0.5 li
cp
145.344 0.5 mo
145.344 3.875 li
145.531 3.875 li
145.531 0.5 li
cp
131.531 0.5 mo
131.531 2.5 li
131.719 2.5 li
131.719 0.5 li
cp
117.781 0.5 mo
117.781 2.5 li
117.969 2.5 li
117.969 0.5 li
cp
105.25 2.65625 mo
107.25 2.65625 li
107.25 2.46875 li
105.25 2.46875 li
cp
105.25 12.9063 mo
107.25 12.9063 li
107.25 12.7188 li
105.25 12.7188 li
cp
f
grestore
0.74902 0.678431 0.670588 0.901961 cmyk
%ADOBeginSubsetFont: TimesNewRomanPSMT Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /TimesNewRomanPSMT def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 40 /parenleft putdup 41 /parenright putdup 72 /H putdup 83 /S putdup 86 /V putdup 87 /W putdup 97 /a putdup 100 /d putdup 103 /g putdup 104 /h putdup 105 /i putdup 107 /k putdup 108 /l putdup 110 /n putdup 116 /t putdup 122 /z putdef/FontBBox {-568 -307 2000 1007} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings18 dict dup begin/.notdef <1C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72EFEDBB222483BD74F8B> |-/space <1C60D8A8C9B8707C25> |-/parenleft <1C60D8A8C9B81F2C3AC09B674C4ECE2BEF4D70AD3508D915EA9AE12419376F6EEF231ECE8179CA4531F29291ACACE060AEF98AD6F2FFF2BEA533946FFA1C8BC3953D72A31BB8ABD9782D71B2146F964D99646263E2D414F84FA049D36B9B13B7F6C8AA7A4A5EB0> |-/parenright <1C60D8A8C9B81F2C3CA029BC286E27661FD7F18B990CFF4A0AF58404A2F35E11D14FBA406192D392AD203A879E34B8FA3132863211808E5BD63BDAA607B8E04E23E92C61AAA8B57E5E7609689020D20EB927A1EC6CC0BC06B540A016D558248DC4A3E8183F5F> |-/H <1C60D8A8C9B6079F62C8472A58E49E4C65298F7DBB13584B0C608B103B8F2B0C72AF215D43C457FE4678B9114F992A1CA0DD95AD962EE67821EBE89C76AF7B7C203022FE3C67E29F7C9AA5921E4D15A2645D93C73845A47B6C4F855F057FBA3B47AC2707354E73F37A88912B11BC586C19F99285C7E09F7C6AE400A135AD2578B2C1702C267512A0254A355FAF242A3E032C2D5773AA8E4D90998616B06DE2126832E624AA95B6CEA6DE0CF980ABC5058497B243E4F1F614D2E3330AC509CE2BF6F280235C57C7347C7DBE389D9DA8C428E4F439ED717BD43889835C90DE66BDF27965E2CAF6D3F8A236> |-/S <1C60D8A8C9B7EF32243DA21D5631D8766D74D715030BA7905332A0CFAC49387DB487F69FE973B04989A1F5B84226AC0574A3AC8A92A20A67AC6A93CF1F8D7D050DEAAE8CF31B4A5FB504F0A0814E8C9022E7C7EFFB00070B62EB780F5BFD7AC1407620155D4B738E953EA9E8519FCB3635DEED6C82D9AB968BE1131CEEB6B072A246B745E2E47F0890CD4A4DD5061C30741173A5782D0F5AE0E645337518CA765AC1ABF9ABB13F9D6F8666630C08F558B2481DB7C0FEA08930FF35DE904907DBC222EF06C7863FAB3917A57116C566327E1977A70091D7628A2440BE3AB444BD01341C54F829742469A9B1CF3048C0B204E355F432B93B12EA12C84F80CE13D22435E5FCC1B5A000DE> |-/V <1C60D8A8C9B6079F6D060A2FEA7FC1569E0C14DA541DD91C00EBC3777BDE67491C2EA2113C451959D17D324EE8DBB436A0F30BF65402B93EFD32E095FD4A5BC20760673D3864924C1ACF695D3BD682644F24B440E38C1FF24D4CC16712B502AE5F89EDD273AE3A1DBED84FBFBD9B8AF85ACA697ED4658DA6CFEAC078154F7D9BB4AB2053> |-/W <1C60D8A8C9B5D6EF4CB383496C62617B8BD4FD4927BDE48152A6FF6216428592F5AFA3D18F24C53020F77DA565222C98E1F496EC6F2EE4EB22E43F233D8D98DB46EC3FFD79A8A395ED6571E9EE52C2D64F4FF1F26706DF3355CFC8C908EAA86ADD43E05EADD0D2F7D3DC578FF752F1D87291BBD55E577C117CD30BA3049BD39543241DD7DCD07617FA8A494E710E269F478E2E95BEC8AA7E710ACD0612E8921B3DAA59E93D8AA4276CD08DDB3A9B4D762893C74EF3108E125B72E190D045E652A0B8E8729169D251777FA84DD9EC852ADB1FB8FFEDFE199F837B9E862E992403453891> |-/a <1C60D8A8C9B77FE2CEA139CB15A16492F485162FE605BA10F460B6DC550DEC7BA0BCA1B89C8429260417FE96BA758C22F6762386C9F1CAF53456C89D4C6B177AA810FBB608A57F053C4DA17FD8A122DD63CD2EE0563B0FFA48FEF5CBDB333E4EF010579993E238020BE59CA5D3F31F329BD506C436A3A2AAAB6CBD385FDB0E5188BC3D34A31214C941C253FAF1F818F84A3F73340CA7F3B7A85C87022E70BF3FF56918287082AAA1D7B6CDE998BE3D8663592D3F0DEFC69D87A351A29895DE83B0D7478C3C01D85F944C563EFCF85986470E4B8EDEEDC025A0FB3217B737B99EB7B6E2243F66B907475D1C465D1D07EDFEFC5123FE5A4D48A8B15BE3272EF1EF1464C3F0D45D7CBB8749AF571E09> |-/d <1C60D8A8C9B7A73DB9CAB5EAE520FF5085D357A7F1B1CBAAAB9D3C3D203065B58561B55699E1F852D974E24DCDB3FAC1151DF1DB63800C3FA779DDD3329A86B4E9458DA578ECA7DC82AB1CB5558FB398EDD8AF237A44BB61AD8FF07FB857EAFB03E3B7223E134D0A703B89A6CB54355CD1F1518C86E0EAFDD151579F5CCB01DCDB1BD56096AB78D2E9ADD609F7B156D422E9074A62B38BF35F82A0AAD104E0C2CB94DA5F3F39F8DB246ADB5F008F682AF80FAED0C691E7A618879362783A36815EA1CE5876FAC4F83CDFE1BD4A> |-/g <1C60D8A8C9B7A73DAC44F2C448ECAF253E44055AA4AFC4D4E618BBF7F60847F4AD57852D125F52503D138EEBB5C35DB7E6FF089D85EF3D59177D6853B7FF4DCA48A2C6450DAF6AE7485D918680B6246955433B7E96C0D52B86F6985D93AEA8FD99F7CE5A6EDF9F82F3DCD54C24AC7F5725E8D752728B16161496E9D02EA707BCC03E7CE1BDA2E3632B4A11707F59DF2FD8556EC51A6594DBA10EC63EB7A8585255CC0C8C8B32CD6316A41829AE725CE606F4A4FD4DA668556D79F4AC25BF9E697A5DB9F54B573E1EAA6D791100EAD10708C7E706E8CBDD596589510D4EA45E3CA12E8144CF2A4E025D5293F77BF25BA77276DF7C97999133B17612ABFFD70E77479B9C8ABBB3A51D3A6F6F66CA99610B1A23618D13E1A07B26D29ACFC8191E5B2829F3C990A5C474E53FC8B282F11A7FFA86D56BD2349AEC811B22D3002781921B9EDDEAA1B62C5F206266BA751F865F9A5F5AF517BC35F6F732012015D0BB42652388A219FCF002C2C0335D2D190C0C425C4FA28367480051E56A90DD46F1C707> |-/h <1C60D8A8C9B7A73DB904DA2C7A38531EB5E07DB80E9375E00037710435E027FD1F7B471BB2C47AEA703B8CB5C9C005CAA0B77F572194961F7C30413194A0134D3FF9BA81F629AD195D96BD3C1285904670FEB33C334E260F33EE9AB1A2D9C0C66E38CE4D3CA583879DAF16CE988CC2A14E39FED6599F4B0F3F8F061B585E2410824AE8C179E66BD3AD9F6E34CD8CBF79298E3E4553D0E9DCA292805DED8E36C58209B17E38B2DFAFEB881CA5FB9EC7A76A0CF0C4BFE83CE749EBD15B15E97FBEA4E90F2186A54E69C28F4083AB76DBE019E4C57B27760FED872C4483796F735A795EACD82F245D81FB43B5> |-/i <1C60D8A8C9B854D0F4318DEB2BF4A8C14C2FAB601E0ED2FF31B9BA2C4F4D9D824A65F9E753CDA6D59F3AE6B969EC176D4AA1F064BFADF6F4B6A5454B78F98C4B41AC403B87C0044C2A2776BF32D7D2C5370D6DB44827DB4719A169BBE365B0C0BED49A30732BB5E35B7101E488713F0203C9161D1F92C48C80A640085090E2C5D79817DC05EB1FC5E4D24EE71772E51241DF9FD4D574115CFC53427DCBCB8CA3E9F85837FAC6> |-/k <1C60D8A8C9B7A73DB907772911B7C2CEAC1D2074B2642ADEDFBA1679ED254D30D2D9A5BDAE41A6A7C0D78C5D75E9522858A70EEA458FC30CFDA879F9C1CE85600A63BE4554ACA119AD822CC5727738E5E5FAC782F5B6F69100B3F9A42C95FB8AA53FD907276C4A477291A36A9FD6B1870ACEAFC297FB6D4CC1F0091BA09524439681D5D4A76F017EDD23AA69786F58BFB619D5D45A35621B583AF1C763E994CD0C086A4B52B5442078A662891B62F92DB77130357FD06A533719ACFEBED1A5224DAFB3F947A309ADA52BC46E57C120F32619B58880DFB59CA5AB15473CEA89B7> |-/l <1C60D8A8C9B854D0F40B290C0C99C039EA88FDD293C1FEAB15D2F6B8C4304B80428A9C9B5571B0EE47CC29A6D67DEE51ABBBE57F6DDF0C02037EE8B6828D244FB880634A92D947174D08130E6E2CF978B5067AA82A4CABC55E600FCE5527D6441CE02F5A28D63A618F> |-/n <1C60D8A8C9B7A73DB913C38909CDA29FD53BC2807766C389AFB9ED86F7BC81642DEC755C464ECEF36210D9B2C516FEA8C1248DF87B00C42E8B7B13BCCD9D4DADECDD469C646397E88CF560CD28B02CAE7D1B9203699A1DE9CF796CD494DF60582CAFD70B7F17C1569B79CFC1B11937F06CBBF98FB3F8ABA83215B280026130687B8B88299FC622B1B9C743E6B4E2D3E657B3D5566E1938323637D7929F2E277006B7F4C91822AAA6911E494E2AD0998CB1FC1434E1920012738BB988F6A0027198438FE663C2EACF82CEB86F7C727594> |-/t <1C60D8A8C9B854D0F414EAB29549463C152A8395E080F8A65050DED29448713A9991EC80B85D2E40BC855D0C9C1C8F48B9F54A9F2AF77E5AE0CF2D93DC43DDEECA57457D57C32A4E7F92D72E19B411BD6A8FD776B503B1ED0E4E775E798B36CAB4543E392F481E83DAF858D3B1A895E3CC06AB3573C04543D9> |-/z <1C60D8A8C9B77FE2C18484DB453227C527C164B5A1471C4657A5A14A46A1D3A0BD899640627BE2A7B9DB921E26CD53975830B919737E4B957FDCE605D77DC327B798A39B69F36340D55162C5C44140DACBE16FE7873A74F99AB90B7497> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/ZWYBSU+TimesNewRomanPSMT /TimesNewRomanPSMT findfont ct_VMDictPut/ZWYBSU+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 30{/.notdef}rp /H 10{/.notdef}rp /S 2{/.notdef}rp /V /W 9{/.notdef}rp /a 2{/.notdef}rp /d 2{/.notdef}rp /g /h /i /.notdef /k /l /.notdef /n 5{/.notdef}rp /t 5{/.notdef}rp /z 133{/.notdef}rp]ZWYBSU+TimesNewRomanPSMT nfZWYBSU+TimesNewRomanPSMT*1 [5.38759e-10 -12 -12 -5.38759e-10 0 0 ]msf81.5 114.5 mo(Signal \(V\))[-6.67383 -3.33398 -6 -6 -5.32617 -3.33398 -3 -3.99609 -8.66602 0 ]yshZWYBSU+TimesNewRomanPSMT*1 [12 0 0 -12 0 0 ]msf213 204 mo(Width \(kHz\))[10.8457 3.33398 6 3.33398 6 3 3.99609 6 8.66602 5.32617 0 ]xsh306.625 32.584 mo
306.625 32.1152 306.391 31.6465 306.078 31.2559 cv
305.688 30.9434 305.219 30.709 304.75 30.709 cv
304.281 30.709 303.813 30.9434 303.422 31.2559 cv
303.109 31.6465 302.875 32.1152 302.875 32.584 cv
302.875 33.0527 303.109 33.5215 303.422 33.9121 cv
303.813 34.2246 304.281 34.459 304.75 34.459 cv
305.219 34.459 305.688 34.2246 306.078 33.9121 cv
306.391 33.5215 306.625 33.0527 306.625 32.584 cv
cp
0 0.992157 1 0 cmyk
f
302.875 42.876 mo
307.875 42.876 li
307.875 41.876 li
302.875 41.876 li
0.882353 0.768627 0 0 cmyk
f
0.74902 0.678431 0.670588 0.901961 cmyk
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginZWYBSU+TimesNewRomanPSMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/D <1C60D8A8C9B6079F62679EB6BE171B70F78590F81AB62F69F1BD2EFC86EAE566847745E296D0CF61872DA4D8690C62AB23EE8E1DEB0EAD4BD93A2494CA759A81248BAF55E0D2E2E5FE71261287BF00F8CDF501793AB3272F80F7AE3E407CA730AC3648B3AC2D58C8D1FD60CD7DB1F886A79A4080D8870256B6E127906D500379950803F077453028FB6169> |-/F <1C60D8A8C9B7EF322BE6235043C5A7A6ECCDDDC390BE41D3E01CEDAA91CB335118BB7C10CD87A1A789356A0826D033ECDD0352DC64AE55B383C11F3EB18A6F42CD78A260CB051779A3B4D92350DD65D27B671C1609DC36FBFF44C40F44FB014C0462CFF40EA9650CDFB895B99B69FA8BD3EB8152DF452581818551FCC7745E9E79F62FD5E1668E4EFD8B2F33AB5D5ED30AB06AFD78EF98B1A68AA26FC8B4D7DDC1356637FA048F199EDF19A428> |-/L <1C60D8A8C9B7D8BE1910D0EBEC744B6638E6ED4C6FC0AF39F5B8B10BFA09270956A997B577BBD8E3EC179B174ED931484CCFFCF819D4978AE37145A7A3C221DF78A5AAD08DFCBE2638BCFCF6B4930FFFAD1163890B85697ECB905727AF12A0E5C1679B01834AD8D0C4111313E17E548887938F4F64DA1DB39BD7CD68748B847D2C24AD687E0CDB56> |-/e <1C60D8A8C9B77FE2C19119FE019B929F076F8319E8913467AECA41BE2BEAD3EC175346E3F888D3AD76D215AD69034A954DFD661ECBEA3B145468480B6A15F5C865D2083DC0B04744AA76DE4CC9E0C9DBDCC2C59DAA00F28A6A47092C7FFA0397DC47C5CBBA69AD805D3DD20D56411E92B0DE9E3F19C2FDEE1FA501318984A59E1CFFFD06EA629758085868D3F5F7204292> |-/o <1C60D8A8C9B7A73DB903ADC070A7C49752E736186D1727D7954B8F3DD4416250EFB2715F7FEA4B4F24611BB7B770A0989FFD12258A4EC0D90DD9998BDAF996A44DE027AE6C486FF30337F30EB574748A139900482713C8EF6F8455DA436702294DB22515A99C4ACC57A269598D687C25D5F66128E3441FE6E0D99B55B68D9C19E720D771564C6692898D127FC55C985D08C7E6B95F874FD094> |-/r <1C60D8A8C9B81F2C3A9916C4CB28F21023538C2A69D3E08B0A448624D2CE6C19473DC07A6A4C3E0D8D2DFD7B9589F2461E064A251BFFB4F1472DE500E983E2E667F5383BBA338778795701927E45FB048834AFB7FF5E045C79CAD4F90B53A8A93629365ECF1B64B7916DE5DAB65845D9DB9B71D2B7B722597153CE4BA455AAC1333D36087A511839B6E1301E787D03299ED6FB7E787777CDACC74EC37D8C360275B503E4954E912CD342> |-systemdict /gcheck known {setglobal} if end {end} ifendZWYBSU+TimesNewRomanPSMT /Encoding getdup 68 /D putdup 70 /F putdup 76 /L putdup 101 /e putdup 111 /o putdup 114 /r putpop%ADOEndSubsetFont
/ZWYBSU+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 26{/.notdef}rp /D /.notdef /F /.notdef /H 3{/.notdef}rp /L 6{/.notdef}rp /S 2{/.notdef}rp /V /W 9{/.notdef}rp /a 2{/.notdef}rp /d /e /.notdef /g /h /i /.notdef /k /l /.notdef /n /o 2{/.notdef}rp /r /.notdef /t 5{/.notdef}rp /z 133{/.notdef}rp]ZWYBSU+TimesNewRomanPSMT nfZWYBSU+TimesNewRomanPSMT*1 [7.5 0 0 -7.5 0 0 ]msf314.331 34.041 mo(Data)[5.41602 3.3291 2.08398 0 ]xsh314.748 44.041 mo(Lorentzian Fit)[4.58105 3.75 2.49805 3.3291 3.75 2.08301 3.3291 2.08398 3.32813 3.75 1.875 4.17188 2.08398 0 ]xsh363.5 48.208 mo
363.5 47.958 li
298.75 47.958 li
298.75 26.375 li
363.25 26.375 li
363.25 48.208 li
363.5 48.208 li
363.5 47.958 li
363.5 48.208 li
363.75 48.208 li
363.75 25.875 li
298.25 25.875 li
298.25 48.458 li
363.75 48.458 li
363.75 48.208 li
363.5 48.208 li
cp
f
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginZWYBSU+TimesNewRomanPSMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/two <1C60D8A8C9B7A73DB6F198797B24E7DF20E340C763AB9A17095FFDDA6B4B0E4D4AC4BE83AF302018AACAF29AB5FCEB98A93FCCD2C9A968B7CB1B433E25003CA8A63287F6BD1729C8188A209A7171C9BFB11D2FACEF2FADF63141D976A0F90EDDE709834FFBF963952A5213F00F39F098C30D0F91D40A57CAEF920CE11EC41D90433CE0F55F0A42A96AF852FD50FA> |-/seven <1C60D8A8C9B7A73DFE31854B8CA51F015562FECC80A8475F282F772252E10D05B7D43981266F60616595AB1BFBC47BFB03D1BE> |-/eight <1C60D8A8C9B7A73DAB2BA6B835CAFB4C9A41096F555C470FE6294A707AE711C017C95446B200870C2B6A47FB931BCEBEB5BBC6B53605850C75701306FD83F9DC906687C2B3A2C9C0DB9DB68E95D3478DEA01153491C8534F5AD899980F04C195BFB522EDEF282420AA1F12E08397ECA941D5934294BD451B3952E6229D3E7987DD36FC8E43559904E0205D3416EDD1402AB05184D2018B2C7B816330FD0C2740A24C74F80E34F93317BBB1D6B8C4D916C15B7FF1D533D7762324A1017022A27246D93B9768262BFCC673CAD6781894C98679A5889F9338F377D1995AEDF5695FBA7A65628522691535557B2045419DD63F87D7A64B6A962B> |-/equal <1C60D8A8C9B7E7C1C5666C28B48CD4A694178AF152D7001F5F174D4D8F120B3533D4> |-/R <1C60D8A8C9B64EDFFA947759DE5E4889D88CE18F8690AE99A205DDE2B03BD344BEA750622B2A044F453846260E52F609F4B4A04ACF011765AB379E687DE6B09D424D16AEE22850269A8AC1FBA0CB1130D1AA42D9BB70A20B4BABF919356C91EFB227A4D8127EEE951F8E9564FE86E42C72F4A2240B89192C9DDC8F972B78271704B555EEFB95806003600DA3EB98ED971FD7E60CB5D9582744AABB3235A69A23AA1EE2086410DF2F65A7A8081CD915B1599189D60C09010312710E9ABC20DA4562DBD2C8D044173C4F2A486F4032CE9228CB8A1897A7C6FF5127> |-/b <1C60D8A8C9B7A73DB90B311171EB67EB8746E2EC8FC994CCA7A632F7C7E8F4A5D28D725796F2BC8526696060F460C892CC5686CD97F757C6EFB11E42DD9AF110BE11F49DAEFA324F62E3046D4E2410C0923EDB87332B0381414594D399924398EF0A71772EF0EFEA72F5940C288418E4FCC7A2DE1E6A1AEA513FBDA0D6603C38C9676D3489A418D7163D5E50FB679144E02901D98844D885CA3AAF379A83F23AED1F56FC130F21> |-systemdict /gcheck known {setglobal} if end {end} ifendZWYBSU+TimesNewRomanPSMT /Encoding getdup 50 /two putdup 55 /seven putdup 56 /eight putdup 61 /equal putdup 82 /R putdup 98 /b putpop%ADOEndSubsetFont
/ZWYBSU+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 8{/.notdef}rp /two 4{/.notdef}rp /seven /eight 4{/.notdef}rp /equal 6{/.notdef}rp /D /.notdef /F /.notdef /H 3{/.notdef}rp /L 5{/.notdef}rp /R /S 2{/.notdef}rp /V /W 9{/.notdef}rp /a /b /.notdef /d /e /.notdef /g /h /i /.notdef /k /l /.notdef /n /o 2{/.notdef}rp /r /.notdef /t 5{/.notdef}rp /z 133{/.notdef}rp]ZWYBSU+TimesNewRomanPSMT nfZWYBSU+TimesNewRomanPSMT*1 [12 0 0 -12 0 0 ]msf121.5 87 mo(Rb \(F=2 to F=2\))[8.00391 6 3 3.99609 6.67383 6.76758 6 3 3.33398 6 3 6.67383 6.76758 6 0 ]xshZWYBSU+TimesNewRomanPSMT*1 [6 0 0 -6 0 0 ]msf114 81 mo(87)[3 0 ]xsh236.25 176 mo
236.25 175 li
235.25 175 li
235.25 176 li
cp
236.25 174 mo
236.25 173 li
235.25 173 li
235.25 174 li
cp
236.25 172 mo
236.25 171 li
235.25 171 li
235.25 172 li
cp
236.25 170 mo
236.25 169 li
235.25 169 li
235.25 170 li
cp
236.25 168 mo
236.25 167 li
235.25 167 li
235.25 168 li
cp
236.25 166 mo
236.25 165 li
235.25 165 li
235.25 166 li
cp
236.25 164 mo
236.25 163 li
235.25 163 li
235.25 164 li
cp
236.25 162 mo
236.25 161 li
235.25 161 li
235.25 162 li
cp
236.25 160 mo
236.25 159 li
235.25 159 li
235.25 160 li
cp
236.25 158 mo
236.25 157 li
235.25 157 li
235.25 158 li
cp
236.25 156 mo
236.25 155 li
235.25 155 li
235.25 156 li
cp
236.25 154 mo
236.25 153 li
235.25 153 li
235.25 154 li
cp
236.25 152 mo
236.25 151 li
235.25 151 li
235.25 152 li
cp
236.25 150 mo
236.25 149 li
235.25 149 li
235.25 150 li
cp
236.25 148 mo
236.25 147 li
235.25 147 li
235.25 148 li
cp
236.25 146 mo
236.25 145 li
235.25 145 li
235.25 146 li
cp
236.25 144 mo
236.25 143 li
235.25 143 li
235.25 144 li
cp
236.25 142 mo
236.25 141 li
235.25 141 li
235.25 142 li
cp
236.25 140 mo
236.25 139 li
235.25 139 li
235.25 140 li
cp
236.25 138 mo
236.25 137 li
235.25 137 li
235.25 138 li
cp
236.25 136 mo
236.25 135 li
235.25 135 li
235.25 136 li
cp
236.25 134 mo
236.25 133 li
235.25 133 li
235.25 134 li
cp
236.25 132 mo
236.25 131 li
235.25 131 li
235.25 132 li
cp
236.25 130 mo
236.25 129 li
235.25 129 li
235.25 130 li
cp
236.25 128 mo
236.25 127 li
235.25 127 li
235.25 128 li
cp
236.25 126 mo
236.25 125 li
235.25 125 li
235.25 126 li
cp
236.25 124 mo
236.25 123 li
235.25 123 li
235.25 124 li
cp
236.25 122 mo
236.25 121 li
235.25 121 li
235.25 122 li
cp
236.25 120 mo
236.25 119 li
235.25 119 li
235.25 120 li
cp
236.25 118 mo
236.25 117 li
235.25 117 li
235.25 118 li
cp
236.25 116 mo
236.25 115 li
235.25 115 li
235.25 116 li
cp
236.25 114 mo
236.25 113 li
235.25 113 li
235.25 114 li
cp
236.25 112 mo
236.25 111 li
235.25 111 li
235.25 112 li
cp
236.25 110 mo
236.25 109 li
235.25 109 li
235.25 110 li
cp
236.25 108 mo
236.25 107 li
235.25 107 li
235.25 108 li
cp
236.25 106 mo
236.25 105 li
235.25 105 li
235.25 106 li
cp
236.25 104 mo
236.25 103 li
235.25 103 li
235.25 104 li
cp
236.25 102 mo
236.25 101 li
235.25 101 li
235.25 102 li
cp
236.25 100 mo
236.25 99 li
235.25 99 li
235.25 100 li
cp
236.25 98 mo
236.25 97 li
235.25 97 li
235.25 98 li
cp
236.25 96 mo
236.25 95 li
235.25 95 li
235.25 96 li
cp
236.25 94 mo
236.25 93 li
235.25 93 li
235.25 94 li
cp
236.25 92 mo
236.25 91 li
235.25 91 li
235.25 92 li
cp
236.25 90 mo
236.25 89 li
235.25 89 li
235.25 90 li
cp
236.25 88 mo
236.25 87 li
235.25 87 li
235.25 88 li
cp
236.25 86 mo
236.25 85 li
235.25 85 li
235.25 86 li
cp
236.25 84 mo
236.25 83 li
235.25 83 li
235.25 84 li
cp
236.25 82 mo
236.25 81 li
235.25 81 li
235.25 82 li
cp
236.25 80.0001 mo
236.25 79.0001 li
235.25 79.0001 li
235.25 80.0001 li
cp
236.25 78.0001 mo
236.25 77.0001 li
235.25 77.0001 li
235.25 78.0001 li
cp
236.25 76.0001 mo
236.25 75.0001 li
235.25 75.0001 li
235.25 76.0001 li
cp
236.25 74.0001 mo
236.25 73.0001 li
235.25 73.0001 li
235.25 74.0001 li
cp
236.25 72.0001 mo
236.25 71.0001 li
235.25 71.0001 li
235.25 72.0001 li
cp
236.25 70.0001 mo
236.25 69.0001 li
235.25 69.0001 li
235.25 70.0001 li
cp
236.25 68.0001 mo
236.25 67.0001 li
235.25 67.0001 li
235.25 68.0001 li
cp
236.25 66.0001 mo
236.25 65.0001 li
235.25 65.0001 li
235.25 66.0001 li
cp
236.25 64.0001 mo
236.25 63.0001 li
235.25 63.0001 li
235.25 64.0001 li
cp
236.25 62.0001 mo
236.25 61.0002 li
235.25 61.0002 li
235.25 62.0001 li
cp
236.25 60.0002 mo
236.25 59.0002 li
235.25 59.0002 li
235.25 60.0002 li
cp
236.25 58.0002 mo
236.25 57.0002 li
235.25 57.0002 li
235.25 58.0002 li
cp
236.25 56.0002 mo
236.25 55.0002 li
235.25 55.0002 li
235.25 56.0002 li
cp
236.25 54.0002 mo
236.25 53.0002 li
235.25 53.0002 li
235.25 54.0002 li
cp
236.25 52.0002 mo
236.25 51.0002 li
235.25 51.0002 li
235.25 52.0002 li
cp
236.25 50.0002 mo
236.25 49.0002 li
235.25 49.0002 li
235.25 50.0002 li
cp
236.25 48.0002 mo
236.25 47.0002 li
235.25 47.0002 li
235.25 48.0002 li
cp
236.25 46.0002 mo
236.25 45.0002 li
235.25 45.0002 li
235.25 46.0002 li
cp
236.25 44.0002 mo
236.25 43.0002 li
235.25 43.0002 li
235.25 44.0002 li
cp
236.25 42.0002 mo
236.25 41.0002 li
235.25 41.0002 li
235.25 42.0002 li
cp
236.25 40.0003 mo
236.25 39.0003 li
235.25 39.0003 li
235.25 40.0003 li
cp
236.25 38.0003 mo
236.25 37.0003 li
235.25 37.0003 li
235.25 38.0003 li
cp
236.25 36.0003 mo
236.25 35.0003 li
235.25 35.0003 li
235.25 36.0003 li
cp
236.25 34.0003 mo
236.25 33.0003 li
235.25 33.0003 li
235.25 34.0003 li
cp
236.25 32.0003 mo
236.25 31.0003 li
235.25 31.0003 li
235.25 32.0003 li
cp
236.25 30.0003 mo
236.25 29.0003 li
235.25 29.0003 li
235.25 30.0003 li
cp
236.25 28.0003 mo
236.25 27.0003 li
235.25 27.0003 li
235.25 28.0003 li
cp
236.25 26.0003 mo
236.25 25.0003 li
235.25 25.0003 li
235.25 26.0003 li
cp
236.25 24.0003 mo
236.25 23.0003 li
235.25 23.0003 li
235.25 24.0003 li
cp
236.25 22.0004 mo
236.25 21.0004 li
235.25 21.0004 li
235.25 22.0004 li
cp
236.25 20.0004 mo
236.25 19.0004 li
235.25 19.0004 li
235.25 20.0004 li
cp
236.25 18.0004 mo
236.25 17.0004 li
235.25 17.0004 li
235.25 18.0004 li
cp
236.25 16.0004 mo
236.25 15.0004 li
235.25 15.0004 li
235.25 16.0004 li
cp
236.25 14.0004 mo
236.25 13.0004 li
235.25 13.0004 li
235.25 14.0004 li
cp
236.25 12.0004 mo
236.25 11.0004 li
235.25 11.0004 li
235.25 12.0004 li
cp
236.25 10.0004 mo
236.25 9.00041 li
235.25 9.00041 li
235.25 10.0004 li
cp
236.25 8.00041 mo
236.25 7.00043 li
235.25 7.00043 li
235.25 8.00041 li
cp
236.25 6.00043 mo
236.25 6 li
235.25 6 li
235.25 6.00043 li
cp
f
0.74902 0.678431 0.670588 0.901961 cmyk
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /TimesNewRomanPS-ItalicMT def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 48 /zero putdup 61 /equal putdup 120 /x putdef/FontBBox {-498 -307 1353 1023} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings5 dict dup begin/.notdef <1C60D8A8C9B6FF86FBD1638113E4B58C0B5F39100186722805B704AA3988900AFCFF05DD> |-/space <1C60D8A8C9B8707C25> |-/zero <1C60D8A8C9B7A73DB95E4C3B2CBDAA180DE16ED2E0B54D373FA0624F4D4D6AEC3868DC3B6FCE2354D83BCFB00DD4446A756F968EEE24EB76F936C153C554CF6C4FC531FF7FF83B6E48CEE21091E0E09B4C454DFC4E65880C366E13FC5BC8A513523C320C7B30F5347C743B956722220B3BEF7EACE8E5F9F591092F7BD516A6AD1802BEF3B681970F31BDF1B1A76203F2B6ADF0680B5FEC4F306B1764ABEA599CAC4C746792036F08DB0B307F28AC5ED1> |-/equal <1C60D8A8C9B65648F95751FAB6ED1FA6A9E711BDE78207211AD63FE41946D8888717> |-/x <1C60D8A8C9B77FE28E7B59861DA633FA42A38BF207DC4A11329E63F668010B05585B22E39E733F2B39E647F14D7DCD27965006EEC01D3FBB556E503629E45F186BD20587B6FF8BB4E525ABE63E26F210C9F85E012A8DB6F803B316624083082E536A1274247334ADD37479C48FDB7D8ADD850A8832DF9217A2BFFEECF6DD96F21564B9189ECF65AD0E783A58F9E296A99147AE132DD5B0142AB4EA5741668F4195BDF7097E5D12CB419F2F282E538E1EB21217502E3C6B11740802EC650F4D2ADCD4B1772219DAF6BE6429CF2030BDF9C05BA7A5D790670BD325C71A55CFEDEE3AFA9492A129CF25024BDA2414AE27F397E2DB63BB72C98E3704AEDCD4D4A43DA02887C90FEE11520BD99634849C2457543FCB5BD3F0> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/ZWYBSV+TimesNewRomanPS-ItalicMT /TimesNewRomanPS-ItalicMT findfont ct_VMDictPut/ZWYBSV+TimesNewRomanPS-ItalicMT*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero 12{/.notdef}rp /equal 58{/.notdef}rp /x 135{/.notdef}rp]ZWYBSV+TimesNewRomanPS-ItalicMT nfZWYBSV+TimesNewRomanPS-ItalicMT*1 [12 0 0 -12 0 0 ]msf248.5 170.5 mo(x  = )[5.32617 3 3 8.09766 0 ]xsh%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginZWYBSU+TimesNewRomanPSMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B8707CC95A9B5DFDE3A4AF8C8BB7D0C82C30C322ED94985BC6C2F162CD480F8280AD954FE8DC511B40B423DB4A6012D9C419E4DF4F375C6ADD098717CA70F621> |-/zero <1C60D8A8C9B7A73DAAFDCA97EBBC8D8E35A41D9404C5638B059E1CA50B5366543C3D584AD9E19987218AC5999BB0F2477597AB6F8DD868788C8440CBF4A338EF64ACD9BF2268656755741DB71FD86387D4A7AA1CFD19937BFD209E4FBCD1952717C8CF8C0555CB2D0238DC43B2A6A2DE4D7366DB210D2673870D0B0C58344E6AEF91B916BAAEAEF37B22F065E870AFE6638E56D0B4AE01785D59EE23402242D396440157FC51> |-/three <1C60D8A8C9B7A73D83638F79AE86E17D4CE334FAA90E146D21CDA0FEB71815E9499D6C6A6E581E78F34038D792771470EBF894DABD777E9B4FDE68E7E1544BCF1EFB2DCE59357B716B4D2ADF3EAC3A9FF8BD07EC79AF5536B9B74185F8F7489AD909079119E88D2BB755D6F6AC02C01BDFADB347EC55DAC49C8BB047661CC7AAA3BDC1DB8E01EC56137B53ED31B24F4502353853D049BB0515CA4217D33D10484933F30AD1EAA43CFDF00AFA5462EE9B1772CE60A3392B8D9C1A3598CF2273E36A1FF3A58B2E24B1EACE5E34650257902678998DAAFF235764CCCA143A> |-/four <1C60D8A8C9B7A73DB6B62B7A95EE6C20B94EAC94CA9AB50BFD020369D6A63C8EA15A0D9A89B2ED9293078F8D3EE629592E255C65B246> |-systemdict /gcheck known {setglobal} if end {end} ifendZWYBSU+TimesNewRomanPSMT /Encoding getdup 46 /period putdup 48 /zero putdup 51 /three putdup 52 /four putpop%ADOEndSubsetFont
/ZWYBSU+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /.notdef /two /three /four 2{/.notdef}rp /seven /eight 4{/.notdef}rp /equal 6{/.notdef}rp /D /.notdef /F /.notdef /H 3{/.notdef}rp /L 5{/.notdef}rp /R /S 2{/.notdef}rp /V /W 9{/.notdef}rp /a /b /.notdef /d /e /.notdef /g /h /i /.notdef /k /l /.notdef /n /o 2{/.notdef}rp /r /.notdef /t 5{/.notdef}rp /z 133{/.notdef}rp]ZWYBSU+TimesNewRomanPSMT nfZWYBSU+TimesNewRomanPSMT*1 [12 0 0 -12 0 0 ]msf270.924 170.5 mo(243.0 kHz)[6 6 6 3 6 3 6 8.66602 0 ]xshZWYBSV+TimesNewRomanPS-ItalicMT*1 [8 0 0 -8 0 0 ]msf254.5 173.5 mo(0)sh261.5 92.75 mo
208.5 92.75 li
208.5 93.75 li
261.5 93.75 li
0 0 0 1 cmyk
f
212.055 89.2949 mo
208.519 92.83 li
209.227 93.5371 li
212.762 90.002 li
f
208.201 93.2188 mo
212.055 97.0723 li
212.762 96.3652 li
208.908 92.5117 li
f
257.451 90.002 mo
260.986 93.5371 li
261.693 92.83 li
258.158 89.2949 li
f
261.305 92.5117 mo
257.451 96.3652 li
258.158 97.0723 li
262.012 93.2188 li
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/ZWYBSV+TimesNewRomanPS-ItalicMT*1 uf/ZWYBSV+TimesNewRomanPS-ItalicMT uf/TimesNewRomanPS-ItalicMT uf/ZWYBSU+TimesNewRomanPSMT*1 uf/ZWYBSU+TimesNewRomanPSMT uf/TimesNewRomanPSMT uf/ZWYBST+Times-Roman*1 uf/ZWYBST+Times-Roman uf/Times-Roman ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.0%%For: (steven schowalter) ()%%Title: (87raw_width.eps)%%CreationDate: 5/12/09 12:46 PM%AI9_DataStream%Gb!R&k?9CXc7&VHJFC;Y%*n;!e0Z#F""%Y_$ZH.U:,pIhp&6r&IS(?dX4s0bk0/:h2:!,O]"3Jc;Fr@;jS'IFZU)2bpa?RNc?dI*%iY=6eD_`bdAL6I.qeP#gcGZeZ9U5gLX&p:KB)U"_H8-JL3g3-TfGfhu=`<h+A)KLeI%Vhrmpi9I)udl^kVZQ$gaeZK@#Cu@FShV#%oP3#s%+)mGq0gii%kbE&5.r[$N?1e5]l"3BAF3[K7\a;!dp>tbq4m"dV;(<8L?!_ml;_9pP_mh(@FjhRcY!,fB:SWAKG5-DYB]3=%'/X8WHh^?nNs;`CXPLEPF76JsqWRGP*i*05pZp+HM?&T)/#(E*:ENAW3+fij/=fT?$2mSp1C74&?\B\..NtYpU66/&J`j)Z7s?^/%2l>Eii-19)Hdh5?HAuVD03pmU@S*c!.-Qll:2?RQOp)UID`!mQVGQTW2tBpPhTfKac@<-59j?GiF?'(A'>E\=#c.%Ol#l`Md+gF/%i(XLZ.D;2C3oes\(Y/]+8Kk:.%bmNqShtl)dVAgs"T4mjI?FprNU]MOMD0)'S&$Xq0B<^KLO.uVB0;li.Bhp0cJW;ZLIWl;.@>0K%KK4BJ+dr&$7E$dRE"?[T.nTUNEIW'qcic2@>#(j3\Nn>\543lA#?a*joP8U)D/2e3QFn++JVP;iE;qHTIkjJMh<D:&TOUGN<BSgc%5q@&'9fff[6teJlF9,DT>*b*`Xc'rE(48qn9H+89&h:&,rq7-,9EDI&oM:e31R3Pf7=icoOd4'Er0:i<.a.<\QH@TJ"l:SEV,C,?%Q%EAB'\#aOTN3OBWN\8q"mRKCe5=RWG["%<QD-Vrp]d?eX&t$Y`?Mrt/AdT[&aE=Fn?c(bV;U`5"eJdFj;g!b10u^WdNa#EDmJQ3%m.%t@e:K]s-e*`.Z'gbf0I-@G3\VfRKR#@EOEY,.n-Qj;7dp^9&NGo=@7K_mo7k"V$?Le_#rG6R:^cChT2;F`JMOYt0QI5)!_!/:%p`sd@R?Q$^Z'2GThI5J]NE?Y\%r/rYi"K9<.nF8HSrjb?^JG=#a&\QmKtIfbK2;7GZQncHT4I"Z!hW9sjp.Mh'a^0;\<?ib7tq+"%EeZepc,fYce=dY/)hSNd3>ju=S;`Bu93Prn7;B&V:^:UQ0GA%'Dj+=fV_C@1KN\Mn@=A>+jB_P63\WXVT4'XQ*<J7L"2Sl0_[KT`%[_^#kV@[!?FMZOm^n$FE5b7O?i!(E=/&LF<`X]CYn"b*s5']p&Oc^=",hPfASA9ld:r3/;rbBqXhXU@Y[;(rFi2#<q_/>#%)ZIS-%)@eJof2e;*=^)+J&VD@AX[.T!Q&V.'9A1\1MP>Y$_-b%o7J]fCa:mqoq3OX6hqDH.cf7O4%fWC)-3)D-nltuaradkGG:(6(cHq(:%4F*\"-3";Unltuard"F<&h26-P(2RKq5sTArri!:iTIFgn4D2rr+<^b?Sjtr;+r5c,tY+9nsOl[I$26Vs7:A@AXmP0'rdSN6(?Y]%rTW42YE^`FH(_nX(XeRB11.#FKG#l3cOpD+4'bUW'5/EXAb;dmY9Bai?R8^n'GW&q/EX>YM*.Z3I&32He"oB.8XR8`(6j3X"TKnW%GX"L6JAqld-?Y4A68C4V1[.e$UW>kAQ'OuL,5Rdni.$!+aq9(=8r=&KL,Li.\r;!ul9e8S#M_60$GT,G+]VK</^_(;("8EkD$l//%<_;kjP0>H'0)UKN:$3hPZG=4J7SQ?),ZmiIhkd-)AhPZ[Z?B'NLu8^u''P,YaWdVKUm.+>[$1bg7K(<I0u6QT;SJlb.'KF8J@JE&%XV^TJ][f#mOAMTkUuP$WTH+(C"u?<JBSX<-&sDm*62t",9`im&/[AEuGi3G8W6Gd2&-'UE90sQZQS+DGl:2$F;J\WN.ttWH*+</O%$>cRnF0_Oe19<c>,1o4c-Yn>2bT"P2]+Jme)`aTHe/AS:U(t,\@h5?];Bj@nWujEp&bKso,)ca"ksCuU_o@=!PCXUXG7l?T6+UlK%SW(3`86`Hn(5`:_%C/b([fU?*hCbX5pW6q/-:khG`5W7].)IA\*5r?$So!91+2W$Rb\<UN?F`2M6CP9SnhnY+!40*427UJ@7*u`I%MiE7h2o>[9&Pt%kj(3u(#J\9SI1-Y)RFLr[n^-GF6Ig0YH&U!>h71hdA6tXal,H.rWbC;C0.G.86<9''/sufq<K_aQCG<d.Pe9n)%@t;&afat/SaJ;%Pn"a#6:$@29M<GDV5l,)@!2Yc3C*UQZ0fNG?o,\q%eCamEBKUpp2e`s)&pbhYJP\PH01*.T%0YifM=6ct,_\`6%+t0ME_CuPq=JS)-#S'\68B7UY@lof6-`C#n'ke,!1G.O-c"R'lgG!egY*@@&On!gqJG+a,O2Gd6$-^dhTiMhKV^(RZZ@38(MD;&k%14U:;<131(.Ki9mCcio]P<p^^+R@*\bIF8n;o!INJ2n!a=!;(jUIqLFO='S]?itF`!Un!ArE@RQUpM-\d1&XQPeV8RLcH_edFA)?%P2>`?d.QOILH\-hmM(_7qK3BC7+OUJ=%g*3^_0hJ"<9ZZPIK6%MYS'R"CU)$^T^'AEPG(o`8%;)^SotAIcRk;"h-+:HmTFCT`c<`%?7[AT%]/2;$C(qIg*5;E(etj?#!e<0=1=6QrY2_jC%%Ao`\>[Imh]QjHblqQi:.LZGeUK_D/C$,!`hMUm!Zn*(^DP5R1eMpl96Io%[$D'@6BP+t#A#Ha(6TNHf^?`8L,k-=IiN9_GX[O$]p!^66'YoB0\8[S5R$UgK"_JNTBlUb]o2fX[#ZtM!"uFKD'lPTH@l!,`@?VV%kSqkb>rum]8MV7?;amH9PsQr##ML,^k2eG,8*2+T`YAT4'TZ$8/$%u1,3,Kf8pY5?o>]3-!fW(L>Im=7SNU=NO\q!^W;oSg#^6j(%&RR"AHI2L&n1$](kkud.RV:W9!!B$"a=tq,.M">8YZdtGqEFNPj2N[Hoj]+DU<*\*&i&e6<_I\O"rS>h4->X50JiW6JNu[ZXEg73%)j;U'Vl7BYn5N:0Q*Jhu7Tp@2Xp$jiRI1FG8J,Q#r^Tb@Hqr:YPAN+OFk2Ht0<d0nSsbh4PfUMbD#*c:c[c!LSYZ(L'20tl!TmM%%e&h!QB<lTB]b,Q7ncHlE:^5>NoM%.VdQUt^BK&L`8fJ#N!EM%nE>Pn_'0SjN%/KRkP(eGL"gEX1!ObP2"3lG"U:Rhes5j9)d(cj`%@,2<V*LqF1DZROWaf@9KV*)eV)25B0Sk0V!p6lbtb"3m>_fQs*mub(f9up(!\-"u5ee@)4`&(*gGMjd9KYa7$]Nsos]hRUh;G#pl%<mX2f<@%NX1+0mRZGM90a\sOc_Ad#$9Htfd+i-/_E=mRC'FFH#F9LVKD%b&<&0[DJ244q:YOaQ\ONBh*pP3n^QNq@eD'7_n_`f%G%:"VJE`H^#SIZS4-GPpO51S'LfcQ65Gs3-5HcD3Psk]OO1.fM/?r7-?3NHi1nm>TGV8N]4,O5n2[Vqpb5)Y%jC24JdKB@Cb%h2.c1%C7b4&qF6*:C#IS%NE18YRe>QbS\O1oXU]WkJK&O4`]Nri:V9&$m;T7Pe5s8Xq(AYqjm$s<3Wn0M-U&euLSX@"X#j;H%`qOZV!<n<%SS;(enX3Rih>$d/N8nb3^eQ966L^"2VO_];AhiPWi!_0nSFq3!BmeDI!sD)cEV)`80k`Lm#YJTS-AYi@a'6I/T5jVcEuL[2)spD8%1&d2s0rWpI#/b/eo,c5Ej6)V4A+Jk]MakD5Uu*3:ZqB]RT?\S9T,EPMF7n2CiOJjC5tuJ,*VeK09NnbDr*U6XW1<S\1[@_BP3q4X%#4^!rX^7c`^EW%0[Mh=$K)4&FDho0QIMa._[+(ZGE8'Wj:UOO4&tN@44+`kr7ZCFrSgTGYVoV@-PiG-HO[0oq.Gj=L58]LpLiK3V%#AFkOd`P-i]DGYG&4?\j$M-d\g\\KH<jXt.&+N1FV5WFo^Mn7cpj3fOR%aiN3Bfe.%,6:TGc`haCGmL[Fb'5lW]L(uc6`fc4RkOh%U1Nb>SmY#j*F,"_k(o6Dn`Y:p<]VFic:OjRY!"]3F&M%ae@=V0\L!<jYYpZV2pT*2(8B]"N<.qW*E'#e_?<.qRS^@=r](pF1rckN%Y;)Lj3ZJVjhsj_L^#upTj$VY`na"G1f'd._BBUL!h8X924D52?b9?2"j]i"3mK:dTr_]2h7S^%'Sk+Ki#I<L)2re'(k0L!4=RWnT%Jr.YP)[TjgT7?C')jT\2@I6'05=Y=6EN!&V/k5aiVF8Q>]jb0*,Ll#VbSiY:,8KYWh@XOkro"\0TG+JYp7"eZ#R#U$`/FtL$h;JU%\'\u8hr!H"#(>i%&Kd!fm9'g:eLkTV$Msp?5,6'Bqjie&f-;ce3+AVtK=mqAN]0GkKtlk#PYAa>ktN+'8PDst7h"^53eNKR=%W`p%\VF;'lh-m!F4bi!PJ=\s-OKQTd;iJ7r!%oVce/SqA6pp81\@V,*mR5FKD2&eODbZ!*UcF,qWTU(&=]*k]sNaroTD.0BtaCFLQoar%h,2P-]pga$G^Ob^RpTj(5qg[gmG%<847,!dFPR!?LU"<BSkVD^2oB'"*M<=n3_W_99;2?77irQBKu*S85^L-l>/AiiIQ[S4lNPhI%mK#KKDf38@5asZtFLj'1%SWIp4cs@bFB7W``Z=Gpr0.)%JX2\/]9Bs`NEjR/E1U+6F8Z>8BRT'p8tG_8\Bf^8Q^.l+FaCq;2b:=Z%mI9!0`cu%G1b9="Qu,57R%?/h%f7L?qt"-D2F\]Lh!&GTf=Z9X`kBBb1%sUI[7Oaj#_*FNe$C;tVDakG[a2:oB[iV$.c^oGSk]5-%DXWFS%$6^0IsA;58:r)N.Xot4GJ"M`r4:WQ%%'0m]]\MY%hE_?'>+j*d#V]/jU2h%a.)RiHCoZphDQj3\AIn[OQ8glZ0Up(B)dnj%Re5hZ"lWhQ=-<KQDWQAGgVgkUD=ZTK2YHN\S,RWCc29ZZ.fZ]aI7C&m=`=/kTk!4&$i`@H:]]jtff>E02",b?U;a&c[mfXdj0amU%qkDL(+HZhgrM&P*Zpog_4RIq(n]X!S?aMp3"a(fd]1$n%3bj[^K"5UT$Hm6[U-Kc^I34pRs(F-%aA?Qt3#sO@^a9i,f/WYe0EZcH%Z0@o9re#]YhKT(C2e_5??$Y=aQSI4R7n?GEN7!YIr2VUp5rV>;LtKAel?,VRee%??D_DrkL'.:,@.D6U2?dlV(G4#']0e*h+&;-7%_fj(BYe/c-hu2C34cZ7+`nfcnWkOfANuOnG5Ma6rg?34Y5.eN%\2,7M,]ESdXd&Yr5,NfpWe.."mD7lVYJtgmMeN-:$MFmVe\<$9%)64/,'8q/=`&C4E3g,?ffDeb4+F`*c!LV`Jp"a>oJIJTi-H'/4?Hk)4WY&O\%3`c7B6o:[iB0?=p6q:s77`6CODm)WDPPnN\3YM_%<W1fCkh3^UP<)\AQSBDUf:#F2_u@Eoao4:_bYB(\'uD#N8B`YHro8*O`q!InPlEsEl/_e-s2DV?^J"iq?FTUBSJTHVK#1NcdBfG,%J%G%3VjkZ%(&qS-.g]pc81A8N=abJO"OYK$=Nu>>?4_&A0VuNi;;f2Q&Jd4j0Uk:EB(P1mT++a!XJXAb:6?Yqn%;Ff[&fa"c+ijW%Yj#Y8G<MIU>9+[hs0(nfBQ*aVLX>K`)f6i'XZ?r'`Go_&W>3>\G&`cl-KHAK(hJ^GmC'jPd;M^m%>[4d%B"qaNF%qqAsuRmHdn%;%U'*&^%=;T-9_foOIPr3mY8Z>qe,>oaS8h!fNZ+\<fK8?kB0C)%dOucnBT/k6@:S*d[NMN?4r4@0L<`%?`a)%5lEmG+Z+&EM2$U2Y%DG=t/e'?jj.AN?+QN>[lSIFJc!H/V]RIO]?@Gq7i/WBD11\jutN+_5%6MbPgruN<5*=^$c6-bbb7P<mC5G(Y?W.KHhWFSn%>/JT9%U@C#RPIPAVEFU[?2%]Jirh(EVgLsI:ME*R$mL$>uUm-rreo`:AHcN.E1co;M&')Md2+?=f>VPd.%7129\_Wf7Rb_:oqF=gKL2`kg%[819+5B"4ipm<p&3o5eRLb2ojq6\W=cMH>mJGK(cctsr[Ab9fi>"(kS4J\rXZZaQLR(=m/]$m];VPpp!YgqsR>8-qiCcbM[*e@DC%;2MKu5J@03#C9sB&3@7Sj*%=`59OnBCcKs.et[QeiYkW1;qm:(D'BKm>fF^1.sV_*@;T98XK[^0_7ddp>rM[>CrR#a!)X\\ZE`*h%XY(fZO,e\5`bL_+m\ktec?IXD;fM:G:HC0jSm,YLKHl?6@2$qU]c,Z0.i=YjOjpT>UZ*:&2(Q5H42=ndiM=Ws@=c'2f&A;u0Qh9\%MI:6R;IfS=Der2s%3m7u/Ug3WG_'Me3c7T*=2@rEW!>Ed#l?Ju7-E57`3YklNY.J(lMuBQpjdfJcS5&Cc=+IF&E`;I@Q=rL;U%)'%89JQYl)./1Eh9<6q<<n>%6T`M%Nn:$qPuu[3@^IkHa,JC&`YR?UO[dan/AF48Pa6\)7BA*EGsc]:ntJb`ed\mI7)44nFIAbUN*@C%[jf;3A_(/3l&b=%8L7ePF0$h.l(hisQfp.R>FMbLK"Ct"^;!H);l=B&L2*UPZJCpj56_Rf"D(aK05Zp<0od!(n(h<j7D6^:fq%gU%,Q"L:c?N[HS#bB1NR>0j5jW\%@^aNXTr,u0RrG^$:#0eN2B2g53rfU;^*>i63?8&071Y;[GXp]H10I$/'ofHL(r\[Ef)*X:Cnm'j%G75oY8EOk]5PPCK5h]taGm>qSZo_:>5:.[NYo]nhOp4D")8[q[%Uqa@mG&3%`nVHH6WG\E2B1\5%<-;U"L:cA;%ptl>Z=a,KT!D]%PAjBgB+l`;l4BmKd?!!MATcKTl>iYC;;8nAk18UA0TEJeU[e5#?q7`%8IQlE1&1V"0(C3A\0'q/"&tQ?J*1SG4c55YbQ[J(Ai2g.%YTZu,EhV`f$u'%/GWf0<3,Xd)HKl6i+HEKWrHg<)m^^l/0qXJ,s,S2hdjbj*T1g"S"ZY4W#eR>/(@'7`SDoNA\Ku8i+g"ktif21`%,R>Q2de5U!GY@)b?SGYfDM?s!`"&7G=3$o6[bHh&L?ARDQ*;RM'dn]`:H(2\*=O2@VlaD*iOjT33e)/3+7iYLV"o19>E8Am[N\U`%e8,#f5u:ga243$I'\/UpH`Fd#P1*4B(X&K^k,qH@`gCa9ZQTtdVHX\^3g3^1bt9a(>Wnn$p2!l9ZO?&KD3[EM"7:\ig!(I<.2(29%p2t[*0\jZi:5:R0gWr>.!kN4CdthrjNAm]Y"=1o$Fll+CeqkY(>95mH[;<bb>[_(tF^1V'>K#Z7GhnsA$+$34>-8\DY2'p'R.8ha%TRpr>EFHf72(T3l`i`h.qb@eRc]'A_T"b?YpZE@-K&46f#DEf!##<T*6Y9:&<5S&g20/6,QoqG5eX=74)Qr3dWcr'.QAC_LkfrI^%-P#6c$#%TZlf-;h-<]WLCnT>J61QTJcJ:A<69KW6$KjUN1458uH^@l<I;l07_[gqPgs*3&H<7-([EYcN7d43'4A_YBiVfh,V_:"N%-[_&gQQqRK(X5?(^2PTGm0gYAB:uWuMnHK^^0p]ImL-CUKJ.`B?1LF[9$nH>X8SDj=&;cE\"/o->F0S>M;7p]JP^\TcG?G8iIb*C%Zd]j/B'&MrrSHQfSK.I.g%3X9/3ZYVG%Vn@M:,u`E`=+[)JAWKeF7cC-f/E,S*a@hPRF$-GFqW*H[Gbe:JhP^ZbrTB(qcZ8cHdC$%ic<U`cB0/4h*s.H`:k@+GV6?>Bl]*OMPhd;13+`7Pj1JYr-Qi#atS5s$Z5:A:j_RDa5_flT\@$TC)5Z$0D#"\YS&SG(H3Dp[J\J[%RU<4"\]H-=%cc$O$$u?UO!&I?<'*5j@tgnuc%a':N$&Igj5PFYQS3jfEcYI<.jr'`eE`=g=IM'oiMXJr03nH9J@1:1U=Zq;=B!$P%q>@ho715._Qs,$4=s@tjh[m^;=F]H&1_,c(esBf3'Ar8LP-f;7;)2*:l^+SC\]rh9qH<1lmHqq,5H`hah=t&)F!AO9f)^QH*/["f%RB$9Q5.h:,d#6n6RlW+LpieH7Li=n$UH$7/!dC(M?<n)c3q`9AgR%I!f?\6fm<ki/DonWu820H'-1u@geS/m,f8MrQ:=6WikITi'%So!7H?C5q_\\E3I/Nt8GFW0+R-2,PDp%VCnWQi]"VmE0ZJ.mu>6D]c)2sk^^ns.lHaL`7#SI1YV<Xj6[*6'tieE43(GV!'Ag(p^=%nY>nR.mLL@nYQTm8dr+&;(lH[GPYH'f8H1?_lCl>]D*cA'Hq"nX@K,MnaFmH#&eI09bY8Te(ANeA*fM)3iX3)G+(H*FuQNaD2hmX%ie*q'e-kO7X;osl8^1#T3h:)I$5KU:CH6)O5+-V`#X3ueHadXd(ULYi<#S?O:5-j4A\k+ie>>Hu8`gGP68*F\?\QYlk/P'_lIPrX%^%6Mbg1g48F([M^mAM]3M0C](D>De-77T0R_9'u2A-/<VjuTWXp)0^(8&e<i7q]SNViT4*mM,C^kF,/c@Sc-W-CtQ2]mlG.n+::'%QDm*W18^V6pGt0"Q25C+:/>=`UPM@:cXGeDr\HA!oL+/-="65&eu?^9FaJ2Z4gOGHqD<?dB%:Te\.`0_o1nW!9oo=Or>OBISa5+T%rku+k]0PP%AC]qDE$*=>Zqf"Rphn:6qnpXfB\M]LjQ=Fee$"b#HGQ?)?Z<@Jn&ASaI'.+kh=%HF/7R>tbKIf(AZ*F@0(>QW$G./4%mA]SUY*[?oXk\dQ&(A]HZVJR$Zfib'Zmc4h7"]e_6=lR,gXqloofGlk4Hk[)F;gS5oR&mmo2:#s7%Nb,NB9jXp_]]qIOcSK0)BJa%n';sA\5TBr-m%W@rfp;DH`f]5d5h2QFr"XN9lXq3'Wk$=r"UI4joXY#Y1)Ip:-2.[P.[&3T'0<c-bQ'3H\P;Uo:;cV)uG]()X?tI%kOBM&ogsl/:YKOV11lp<f5SM&9fgPTf'@YO+q`i#F,7:a.[fhTKf&2oV!Oagp)H5dD>WC;Iq8O8&O]$.OR-(4*@#)Sm1R]_nf14;%jh:7@GriDd5OAjO6Wq9%kBE2hS5?uC-+'QS9Rb+lp%Cu"lKt<blFYAE4Y7')XeRDQVZ=!?e#RFnr17*)r>ZEPml#Sp:Lh8diG$*m%Bi;J6rPU,&k+;&;K^m9QNfg72S>mpkh>6ie;^7\VOL03*&^>#c%1mlh$hmjthWjJaiBC6o>!9P1Si5'4c(8C#4b!dQ+.be7DuWE;%^VAVM<_jIhj`X_6H?q!PVHsuAZ+9&$@ki^;/rQWeJ>g+PV\W'tRpoh'V.'b9k-]GS\T)HUG&&LtI7mk(VsU/PpiWlZ"gR.3i+@1O%qIKT61qE,C"HUmu;l%M<CAOiR?`\Eq5b8lST/>s2p(GDQ'Op[(1&*93-[f6'4oHDXg[/?f:Q*WIQ)6;YMurC9E+(^d@rh.VrlD8l%B*`97"\[B^4O/e4Ue'p(8st,Z4]NPA8l+Q^(b1.W$"L)HYn0,+UXuY=9KW"CaBW8m/_.SQ#Fk8o<_/(YF$&YMCO@peRMkH7*V*Wn%Po[eHhtL+KHSaO7D[$gPD3U0gPJ&[:qr8-"BE'0ue=H20N`ktE-9jls4l=W!e&::!=f5AK7GVi\gA3samo67@'J:su7=t&TpU"AZ%ko9%i_dqS.2l]`/la4@=]r?-8Sn,_P[8Y`YhSd<EI@#([mGUfK>mPs>!rQ::f3;FVj4Tn=Zg8B9Rmj5GQUI:[05]UEh5YOE[d4]Z%[kCm-MDYW+VcXk8h1G(A[d(50h.c$<o"hn9O@Qg/h[!VO87&DZ]pqHdc"r&VO2"OSc^LrLH-KVr/LGqs/aI][\sgGC;NpSXWLhOB%]6&^1R3=_AkIF-'^N!8hnfM9m%'hYK0^-JC0led6e;n6KeYa1WOj9a=*^CB?SA"IN@XAB5"%iLgOCq7cH\BM]8O*$$"hj*\G.jRW%NMZiI@g,r]R1Or6<GsP;cYYoFBKU7^2HbIR8r'E2Qc/I`8X3e)glN&hIejX:*>7QIRGVDg6o.(F=<mn-<aUK,+o^.Dq;DFLA55,4%#%]\<[>Mqb,%YTT7=Q.BM8dJBk/9NW=TVk23W>]C_`BfIT?<A>$nlujMO;^#Ip>"8+-Nm)[IjV0M:i6Mc9c@:6mFIVhb[ThL\:96%*ER2=]HFH@RtA2t`Zd#RF+ru2a,pDj9]'1oZ\3OBj3`^((u2BEbQdW5B^1Uun;b.3X8je7l\Q)6=O1JfK]n-Y5b7q,X&4Uc<4N4_%!Fl+U(uKTHDI^=9LYZHNC-NW\g$o<$SaP9$8!W1CG<Rh&D,$9`m4k#4:->NAW)>i?G>jE;\cB+a\VP)EN.QC$C?M4AEqQ0q4KE<S%.s#6N.1;]gpH>q"S#r""[2S:R#h^3DX!cX)a0&+(9DMX<^(=['_"'NuHu'iXLI,X")lL3@@PZ>K9H.bB/=Su,n(=#!m_mKmh)2#N%q`0#YdTm#M:e-gn#<Zc,aa0isPp^Qa=1mW%<Gtj4hm:1Vdt5FA*IP`j&<Y14j+2k2lPbZq!d%9:aMJ\ugSbDH`RqN9,gS-Kpk?5S%?4+#CP/P]%P'go^p7)o%30c)?R#b8gc0A_H,nRSJ(sf`uXD6gs`f8)XI<AA&=2i21:/*+PR`J:-Uo/.Mk6.mbAcN?ulMHm"OpY"-%Z2%_*NlH?8+SC.5S!J]Tp'l63pUt.HIRN>=Cj+9V"hF<TMf^T&O5p.-?jWCDlg9"[!Vk;KkAEGBBcDr'.E%DdDsVo8k@&3=F-,]'%K@kN/n?aNu)*$?E&>OD#Aqucqr"p,LWUTCdab5al\U\f";0/oJl8E=9O4E09VWLdl2O,!'KYBCr7$TVh5ri(9;%?dhfLJZmg-)Dg%%NU!TN(9fZlk7ZjNO`%(D!'`q'O2)8d'P&gXi5<'%U=Mn`(%1gTh)?:-gQ=+U8KC-/p'J1<VFI\f:3mUCj%mn-(]D<&0GY%7W+/M%oURBOP%N!/U\Qr;>bFs&a$l&l".`SIKAH"<^kGWQ@ie*X0BtuV#A"H/SFg7U+\am9oR41Wi+O8<_#'5;UWD&LHNmk:5EB1J4Upk]%!d"n_X<[slIkbE7Ke/i(Pbqogn5WV)I\9i2Y2H4)K!a"KOiC>uoqU.6<WJHQ^960Bg]>Ti`%@+&nmjn?a6#t+J#k#;$RO'7]#7fD%jK7dg`eq3Xrit>2-#;@6M^fH%nRUC6+[EFj!f+$',r@K!BB?,7\\">0mYoKG^gXbWa]loKi*o_.HNV;ClK)onnq98[eaKMrgO4,%%nP%9TNF;:d"\`qkbG3p#_f>Zc>DnIY/'qE;oV-F[HSO&=Bkk&AF16T7`^FH:H?<V.1Xjg21[K.kU8>!8H5e]K.%V876?A+D-"4ur%iGEO&HHG"2#@68ua)?atUD)\][fi:807@5ZkBFZ%-KIt4ZLum+J.oTQXhk)-^5i8(f]l-2j"/@TFS$NC,pp6eATptsRlfD&/G`C8%AH>_>2lH2VUq;Ctqst+MN)4(&D9]*tIC&li)&!oF"kH^eH?!A37?-PCd%ttB&<42W/Y9$OXBRB_W_FSE&i+6Vo&N6n#qnI\SL5[u%-aK%@7C?1gHDS6E:Z#9uQ#u!QU`pYGQT$"(gn$2BrPcnHKc40<]@$7C(g6O^e2bGCN6`-$m;4<?C0gUEDEEl5<0q.B^sR,VPr<$F%s4BXXmFEjZoD!/tnW6k`*fc!8?Vk6J3^H),R;oS;,pfcgbA3c!3/BNT717MW_=tbU`uNij\fD7Da>WFq@3<diM&X)5F@S!V_sfk-%,'-mP^L1JC%2rHR\>-sOWK]^i]dTk1`Y1*gFeLR+<kasI<=qAREl!EfP*t:qp#0eRK3Vnb.[.8)hfg6o6Xr1G#IC9iNm7^V`t?n"%<tV9cp);>j2(d2cDT,MXp\5P?a/'/sTbZDo6e\eFWSNTSi-8dQ_J:N^)]Nj4aRZjp%3$8:Y]2U<Ct)bS1n38\ZK5tK^USYUO/-/\%>ap-@lc4$!eDlpch=0$W]mOaQ+SnW;]W0tG)k2`f^MdqYY%8D:mC;#$luk,5cH71r\.uiF0:[)FUA\E^n[mWed=OgS*$f@o6DhF7%GJe5>1:J37")\mkCbM<BPgE6uVlos%1cGidfk1D]i?XO-R81!5#h&#1%B0^.[-_"L\kut\8\/M7L"ER[l?7_3fg*[a@LFWOBI3*e%UeHj@q<>eLXm+Q!B-(^M`IkHS;7I/p%GR%FG^,2,D+W?;d<B&6-10*a/K&q+WUH:XkM!Ia>b@<oBF^8Q0/ZC5.E3?L,PU''d$Ul9%`QFl\hc+>r()!V9\?YF1-+SH]apSg4dZsDU5mp=+\N)Bj93G\V]-5FeKfMhM6!be-/3`#fSB@l]3n"fd2m]$(HMl=M?/l[W/lPWU%%UU\E#8cL@A*E8(kj[CKCP\ZoK/\ja@h;j%L<_u7No&TsEX\LaV_!Epe+ct%TsKfQUX=ZDa3`L0d&HlbMD93]gB]ht>&_Ft3_Su%%#Wh9b_8TmIm-?qGmlFqAlm(^f,Is+rTsOKKk0>JYMP2gc,THGmK,s*bjN?/0PO#=1J:7p=R/9/eLZIAXKk)4dfB3]"V)L+\kJ)mM%&t_gCq:?KZ<k@\;Ni=ZlJ'-de:3mS;24QKOR@]8%ju3&rf:l!1b%2BB#L5@k49+mH1pfbIO6I')ju4):kB;<#Rh?.P-#u$VM*K-+%G5c'(mUWl6V&)'VF&$2N%UC["D-tFY=qA%?d*U+:qWM+,c6+HL:j-h:kAb2oIOQpfYL9;f@R\JTIVl7Io0@ra/6kL5Srh76DTfSB%(h++N.j)9c*FsWnJ?a(t0ip_Y0\JmJQAnY7F27pXCe@'I&E.FVG/kYmd`fg"i\jO;%I)EZJ^WR:aL#E'QL/'>S$Va='iK'b-F#7p%l-4r*ksgJQLM"<)!as/$M\@?m9dMEHah4%jI2j*BnP,Q"_$/in?=rocj<ASk:9mrW2d0>pWFH?giUqU8_1g[+Cjb0eY7(H#:2tYV%54FKKnQ?q\01;H((/.Z[dX>U8!B,\0e/L]u)iLn4P$kiS^N6n2@$+$LSmErU0aDXs`?6M21.fa[94U\9_5,B,l(dAT4l]/#X^R^&%D8_N*lrF^,%af<u!UFg3RPVjte1E_%kDpNLVQ<;@S*$edRla=M=IN'[M/B`%^(lEk*_Z]lb>HcS[Xs?aTUa'kC68rQ,;pI$Kgu9!%\60n4\qB1^`*S/h\,qFqBPbch!/kk7Qr(ZeKUc<C"/W7gM?HVEHqY@'I4Z[lb17a*F-pbcI^GIHXU:00Ze(uFR!8%]1jV*C`tk@n%"=H.hb+6<"K\7qfhD#VLM$/14W-N$la>cQZPLH2WO;>.C,_kTT>pb2-%\Mm=A@tiPGrRh)^"NleDir_F)D*]UP2sJ(_r6uJ$*eum%Z:2dnQaa8O/UL4BV1a;6Bot.&/mMLhqT!C@+@9"""BH""1K\1R\k`WfTe0`90onkZ0XN,GKT40N>%F_:E393$1,qeq;mHbV6-q=o%cWMYULU6WmkCr$FM,PCo.q/5VBRa%.]j19Z_/mf[>&07A[qQYPUS]@Yj,SNH_KXRVC-fbeFFG%o0_AoGHc+(qKS6irCY&aaEHN1`%27X[KI9`=Y?Uef_l,7-=M+-X,%Q<7;Ci';t%'DBGl6.4Z@m!7MAO.[c7<`BU:@W9Un*=14*_q3N`$43l*=oV9N\(qUBB,\s`d#!N%Gc830LN=,k\p?IY(G4htRUsTc3-/uJmW^]C.W)FeNQ'o9m-c*#=$.I,(O\]Ap%g9W%nCt$7)U[*XAceOXs((l[Prt%S&l9)Z6_?i%MLE#(M*t'0lgRX[jf_s\=P4%]&:1kG25F?(_<n=OXT`T2Y<6%.M*&2Q9T6Y>P3[:O%!D;//ohbB;7ck]r&1[r4e@cYILn7=ifnp-%7o!@nm`=nFc)%Wc(U6XD\#-YHkLl7,C<ZN*F@"O>SN1P,$#.&^\7:/Z1_([]X5=,?>G4HpMY;q^0djkmmd@mXXEN+tD?](QH:3*B%Uo*BfMUj^`f\!$/IWJga:hHP#oCp,4M+DK">e(,IE8kC%l\e<I?Y;dlrH]YcJ,QGp,$!ESXs"u([Bc*S<+onb&ZO.&l4L!,]r"jA%obsHD/@U0qX=d4)3#PjfEu<$gFZ`HSY@G%b/I-4K22/oH],1p1qaX!3<k&N`JP\=eZf8]R:cJqoWV,J?Ata0eHDLf*=s=[+j0p&Y%RR5thQG`sEEP4>d_RU?hRhIUpCY#lFNURMSUj%pIT8Y<B=8-R8()]naeBGn/NW%KOs1%_./E6:"WVoh8DIo2*j$i#EB1X`DZ,Il&%0()fi>n_#eNF%R_D2rQNgDnS%i21F`f?I2WW1(M.^c-V-oV[#ji<5R"X0"3h#JZ#3mWD&9rosl^m#&MJl09<FU0g7hp`!T(-D,m.%(Jq=!Mk7R.L%rQ0RVkUl_f(">[B2)s;pko_"`/eH0&cpC@pQ=nA7o]!-Vr8_fHi`ac)n$bMn$+O0=tW$Q`+Jn32s@3'2fp3V+WCP%%!I!&$[2+fbrTDJG*#a/SZ=I`b9lXnchH0@!:9:G8gc&*K&%R&Zpgn7cd:X!BOhhXp1P+JLB.7gYGs>0m<?f9_Tr0%^M@"qg9?R@%WsW"Q:</QZj%[]lID7[=\!HjbHkF!?GXpMC<<[E&ipQ=q(5XtcS(5D==^UcJZf@q%NUqRjMgFF:laL5F:G9q<:)%9Z@e=gh@+\6A%<%?bdf'4kFK*6P+h)Dpe)ssVJ4rXuWXRopRb9[%\=qVb'iK)_Zfac+b7uO@meOl7jbbSU0gDa2;,c=j-RRbXa;k?WAm;+?9F(LOO%bq\77cEGPPn([,!jOC&c.HKWeEOU2NS8<kJ+7W@8*0d4F\@WopaYVoVFEL.*Ic1[_Mst%Kr,OY?hW?iH97?,^VR&BZ=DKaaRC#]T%QKsL,1Ga9D=aF/-VDF.,ZbC^*fk<E&#7q7b`>,-3F;(CRFA@&9/07Np\CGnnBK@)+?=Pg_=Y(T%.]bLrc>3Y`%^WTW3]"J&1kL(N%BY+"ZS_BXJ/f@Ar(/*g%1U9D*h4/H%A]S.a1nE=bcKY3V8(7"D@T'R5^80kckqjsMmE+[SVDDF@c%fh8d<'!*F=*1!MU?NX9rW>'%Xt?*fk(Ir<d<'!*F=TZ$0fWeXLb0B:k5_bE7FR[Ddc"JJXjM6&FN%h6>>mAL[?oT.UZp!3ktM#><fEn3Mu>EY?<<)_1Q/(c4%ia/%Ra,`'N5!lD8(3mFdb3iLQJc^&IUdNk^4p;^ZWK7IG7[mt+2Eun.=alP=M749FtslH'.>ku)"V0XAm3X7O].]@[t.>6>I]nM(<BQi%-LeO-/f)W3BBDCokMpWJ0&4:b,dXW#&(W%s4rq+N*=>p*6NVQ%/2GU*4=$]Gmg:^BLLcm+<Z`dW1oQ*p@tU'e"pSZ+9!K5'N-BEU%gHkHMOh@N<a7U@uZ13""q=@4&B!<T1g_h5HT'1%uO^+O@c=NT0(":skgFd06]2aeE36g:ErlK'+gpuoML-W<be(atZED1K;&hqmF%8f!gA/DLr*9lm6#Q$/#Pe=\;g1j:S@KgRr>k,QLAZGnk^dE+_;7G+>J(!W8^>WJ,5"E0is^'a91l!/HS3r)ssR]d\3Mk`8fH2lS1%/u5Don!2'aV;^3O%a<YPM+j6\'gX4\JeOOqSg^6\b$6!gCWihtToBOUo>\SKA\?L>5SFX9@JAVT=QWtW2\_;O?e$t1g<pRJ_8sYs%E_NM05&P#`Qs/:&ad/jfQ>YH^UHnR!'%`@]Ou.l'<G-462R)nU':90/rTZA6-+UG[6":D@/"QnG^V2`P=3QUZ(E"uYnA)[X\;F/G%'hMU?lFS3"8_!W6h[S1X2aC73)d+UFj`[14$uaac_=2X@$Nb:E4;7O=M9*a,idhO0?CfHgb(mU)Q.9dZ+RQZQiedYDh2[K<ciUq]%1f'k#:^2,p%$)V8&Q3mj9k7q&iGPpqb%3Ba=iA%V.rR;iE4;PumP;\NS&iY#1YgAOH)m.&D2,Yk1Z^3d9@%1lF7S+-N"=m9;Qn0H%^#dIL@'+L)4&`=%Qgka(Ib_Lng$pdBgc:%`]+oBXm$fNMd7n#N\7(gPIDK17#i6R<Yno#:+4h'+HZ--#/a7>1gMsE#>M@):40&V;%hE0L#[pXU\gdTb>+2oN]HHeP'5cE27FX433^Ao.cNgC/`1>Tnj/Amj@#\)N@Du)Ti_*W$&CnS%/lNhY$<c^3W4)4-:"]\a[/bK[]%e_V+h.pp>!JTn4t=tnHB+Qal($/a1t,)cg;b!uDS&e'>P)+DI*gkdO6><sr"ABJ]6XHn%WFH=BX`sUs(7M^u'D,+?+fJ$YlV\iLb%fEt\Y)=G%M:=b]uYo$-g5]!\Bf>>G+S(n]!q\[r*`FE.imN@*I\]ePk[lJ-OH]U?1B`71C8E^uA-f_Hgh4d2]a3#XFp>*O)TeG2Y%*CEq9&]aUajLVXn0&<sEE:hoNGQZF/)ET8Aa#ne8o<<(&=iDT0h8Zm74PY2T(5qH8EIFRn4mBjFj.&h]]u8rpTi88nC;ADeB\B@]%GsApLluZGoIVi51g@k=/nurk3\PDgkBp6ffN`A2HVKVI8eQ6Aj<bm,JUM1Pd"7X$1`]6JlMYp*jLi$GjV&-0d4I^l=NQNMTh.\b;%G,KHi['/e=V\;UN>"(HkloM9;=Ea!"O!hCA50LM5%Y$ueFK=+m=SMS0?&2nYWSP%bL\Vdfq(h7H**Z*Rrk+I;c5l3s5:PH_9p3je%"NgSa)oPK`OU:[C[a*$3CsA!iNDA6qjt[k=V,cqGLiLf)dc,/.<a!X!Ft+7S-;t;/9`dA;H#9mT\]s^,k_SKn]/](BX&^sgO2nAu%bK2H7Q!LFI3#N^:loZHYiFLqOAU,E^&="$:<3I's8osLL>QCBI]sJRIm=G'nqP;H`cV1Zq&2u[8X[Ru_7G"[HF;J7eDWt`a-7_4s%c+ItrnV.U=lS)\gCU#U\kB!LO@=rue9O/LE>igE$"22$bKlKq=3=\to_^WoAeC:1(1&G'u8\:;)4pFl7.j%n]%%uI?@_s^&701!2%Uf7MUl!@M9+"ucP8<rFF2_-_^G8_'QB0-ZIpZ$X)m=rM8.dPQGS+=QK`aE)D`5]g]g+L!(^bXX>(VP+8?rQmHN!p1!"p:WGp/:Y4%D:W`sRl_hdTn#ljnP3Dkl8eEZ`o3MA"i@"&5(i?:b[7?Y``bmA=l4;Y8fH:jlI40aJ$HA,fQU<8moKeV[*3fjh$N=,P]LXHe8^$J%<Y=-6R$3uuIU$hZLjd_="WF_cpgkT1(sB5k`0S&W`#N6H3KDoSAsqFK(FdQH1R/KqU&a#h!.+RgntC1?T\C;KS5jas-pY6rJAfaJ%C_YfJp>eZ;!8YWpRV-$;BO^4bHC?eB1/WRC.qB4oaEad:&I%A6T'BXm<"u"[(dKSlfj,;bZT;iLqIUfQG^aEl/%_U)/0=VZ:!.+/%anAS9M^M@XeL]:CPg@nfk;%#/3@UT@24R]=b/[)%s'S_g7k<@uP4I;GN3"T[T?44ts$0IGMu1M2i7,$-hEs%:kI[FRcKjZQDQ#GR%os<!0\(KM5ep730^DgpU]RKHNj0SS6l)-A)f?`;'A<joMdCap/;0VTrG=*C_FdR3,Y?XjS"H>uX3No(OL1s[QJClpRqQ2!WQucRu%H^fX2P&'<pI`AAOebeJ!=3g"%>Jb9g6sdWRr8b3\fk4r:T@\!q&(QC)qUoNSF7=m)S_)1O@Re>t(%_8^71?:GYFk]jZo*QLRq22u%ZLb]<n4&brDg=#"7Ip<.BD#J-5/*--lE;S=TBglP/*6G&>;=Cf2g8`=A6qKI2`G7'KOscOfkY?R^=J5(os5*'\T+1^a<@`/!Mrds%^\O)3jmr8Q^ch:jI\q9*>DI"c]RELAV(Ih]cRKW&F=1;(bj2_Bg38\2cX%%,o'rh'pL'QBDt/4&b?QK(QB,tW\-HME5N<X=Z?cCB%c`Yb2:6/U^hBB(pe\hb+C:i,5H2ZMdV6-?@:Q=6eV&W]'[Qn06-)C&Wo(nas)OJumja;HYP&%YMa1(Wa*]+tr)Y3aXgV:8>Pa1h9%/Tmi6_Kl+H'l)b<LWeiQZd7oLU:i1Ef?[dInZ41CTB!%JCWYmTT@Il-I!j+?Zf^lLXic.<ZMH05F(LNdcQO,Hj4G:@qUp5YW&]T5%bj/nWf.,bnhDOBe;o?XL2,UrCXdn"h?>[aKZA-#@p1c\>?e,t`A<GD\)84HLYFi4/Bk;j&-Ej%i<^4(&c+=@>[E@dt'J&H,YFg5.%/FeNu4g1K+5chLY[Wl+Cl[W*YlK?0]kUI_+2QP_E15p?^5Pr>%ZeL%sam1lUT=V+Q%fVcsoD7-M"M$hMj]s=+\T:5FB"^4OI=^KQ%Z8V*ahe(n<dk3,VnROLs][u6]1B]>qn7cF;@A1ZN-u*:r1O+TY4:!"'!A77e]PRmB$;o@kIIX^D*01W5\qfh?hJllGgg<]9#9+so%"lcLriL>bFf]W8LhY)LDaLCb=qt.l$^[g@>K-,p1g=s;e%,Z0ALI/QL'c5#"dB$/)\L\&P@CIjg09rJ45<=-+lM^GfiOme<'Wt5C%7CYACh?gZTcZe>CR.c3FQi3=k+2&$f:QaD)n@Q5N0"ehZ]F1oEne?*C2u-lPGWQ@>NlU1#Hp%3^g`=_Z_;0A0RL)Z2db>lU>YQBI%F!o[Yf?S/Eb5:/Rn#$\'B\WQ+Z'F#0(&Sm"e`6&CDu[h3&jHb?p0.HjKX-$_r-BdYKkNZana+LZMi89]Dg4iEfNZ(1F5n(F3c.i>%0f7u8FBrj-l!skSUig%On<i-35`uDbn89m`YQ.]^J\X#;&`34fK&cB(1i+ts7.;A4-gr#^Q,6*YW4]U"L$JJ:J$Sm5C?#"\`CKM8%*rM8?qjFd'+^THe5tp:7:qfT;i\Z-Or4E[t:m7JuF=I+D!e&>I$5O7sEn^N16XmXo$gsQ3I*q`7*CS\KHs<F@g_U8<*^\Pb07:<M%#%=uRn0$nPk2j$)Er&W(Kmkr-9H-26<U+pi%)B@j#/7VoL5Ou.Z.k(m0WWgCh7@N`(T1/s:,D+gogk$hHlSetG<]33(ZO<k1&S2e%V=^[;&;\<q:LK"[_NVIuF_p94>*(#rI,F`+_p:%8R12RCB9`Cs-YO0L$V\aGmiOuS-]`q.Ior?(:[[\$,;(ZMkV*Oq6'#B"`6[@L%5Kl9(C_c]tK47f,+;LJcF6p_?>^LuHYE(emE%Z1E]V$SBpOmd65GXS74]dORmK(p\odGQf*=8FAlrP%3Z5JmU:VLH)_3Kh+HMhgO%eqXSb%^i`PZ&jda.M8Tn6;i!)J@Puj_@5G#oaG;"k@eQ_cJr;8No5m5rOg+oL</Am0:q;#l1HuqHVN?>n8I`3_XfJH+P%@gO*(mc%Dlf9a[.(&mBIVfjgWk6VG&AgWjhqtU1'p=M5$[[PGtiWs]5Lt`/9C%k%IIT,MW]Rq$m'%6Pt\T+\C7u;*OTU%8i3RROl>bg'J;iP%ZV$m6F<h$:YF?6>*ZGE.iXHsBRcdNJ:^$BpoDfW]`[Tn+*sAiO574-'cQ\Ktj38D)5WP"S=u@6SrheTIMYor!E(D4#*E=^Wp3Z;r%(d;tnp*2esF*"X">Ql6>o&ds$@<)CK73KTDVfCQ"@1#Dllu`T[+(BJAE,RbtoLoV%!BG@2DH'qpcR2!E0d,ET8Zpa7Ht++3Z50/k%/T/M';Y2u..!\%o<Wa`kM$^,^(^%&(JS<Eo,=nZkA0l,Bnq6]<7M$*:D(l%sU=DX3KQfgtJO#OKD\c+n+I6BgcZmN?U`K`CF$dBs%(jS\s(r&.hLC_gW[Goqb^(#:fpH8FADduTUUK^6\XO:5_0+O*JWqD>gSR;%D%-r8?M0[Z]#F0u-Hb+:ZH(3NmE;X"fU3@)82""S(%\\'D"Ht%ZZa8L:0_-k*BkErSUcKSf.(W!OU30&29*^k9X:0$?1k!N!*$2C.0C;s:"UUEgK!;,tjU@A8*_6[&$A8[a_X:tO[Z2&C/%%HjNp>-*VEqpO6P=W0^*><;Z[a(pP@HKtq6L=qlX2j>A"08IuFoWjBuQ2[HkgmXa0O`g[Y!VI(-Zd>`rgZl6W4>gVd%_ZZ[$RT`6%\>HnZ&kY^Ho]O.rWrBR@fW7j)ojDPUD,oP(TVNFH*bC%hiojnr4Ku(oo6;D00$rm5PiVc.f:EiT6&b.)U/IddkleVSLP)0CllqU_%&,D)llS+ZZSknC=mi/l:l07E@4TIVJK[OY<*RQRe(4a^:"WgLpm8+OD<e,a6V;QDEBo.3Y*rU,1@73II#NRtg[L^<tSaR84g8ZE:%QW&/Tl[2^V(<kg2?aALDJTP`E//15O=[3U[S*,,tURPU;O("`65^ZGIq^-Th-jAF[`/d8n6?0!k'259SXl*\Qf)WVhYrZXg,65.T%H$`=8]>F1'7fhf\j$q7/ETZZ1#M!-#B-P51iJ;]o1r^`XoKj:)I@.o1rm"qW&3m5(Z+3GHf1RA<qcj"I6>X3T$sBBm;\Q4>%L<>C%XptI<EA@Ac]^QooA$rAQ>^"U31:)u3^&4%">9a,j7)[1)WgCsd/G"Y]\9&j\^Cq6fSO*>#*[4G($&#@+#i>%/XDn*a]Q:t8ho0mW%Fdh')\VnS?9"Z+bmKpptB`^Tj@2JX`4_e>Dia1AAWf*MKp*]MGX>sE'anb?2pt?]1los1)Eb$nC:;LsdE^%X#'nd!)!jNO-?^KM6%gHR*Ga87H:Z?NN0m%"^R.'>*9DjgtA/@]Nf-T*shX#4VNc#7E-f"CcD\nu&6F^*bsPB>$B1G8:d5PCL&?ui<[h["na`8_#=!6p3S%OW7D\9uoiN=qfM`#po[!M%iEim)nXS'^QXa+G^6?lH=q__J>7!21E?@5YAdM_FQ(l-H"rWLDgHeD,,7$68$K-p6HH2l>8GQ_u!74%BfFuX^&eWl\G/?DOF-EchAl[C78GOgg?i7HG94Tn6coTj"S?TX@%\H[QQ`VlC@E-(pkJ;oZ%\,EO3c#YP5OtI"3msK?V!+J<7,s/%R#WWTeB\t@1S89-n0KF-gW]-uI"2Hkg1Y`+(!^9H5iD1-[LZpZ#l[!E)ZrDNXoSPmo52^_8jH4A>cT"B`IhRlI#^LCHD0BXJ.Q]$%"SqOB&>1.ZjN_lj^raoYD$G4LUGt`0`#/h@nT[B?^CWM)5u@G!g\A@f_unj<7aBg`"cC7_o5=s=BdWC9BUtc!iP?!P+$82Y@N$F&%S!'g!3*arjiM$@I=\t`sjdP,?AZY*HXc"2gd//8n(^%;b0!\(_jD;l&XKb4AAfAI-@]PFgkO)g7E]Kq9Mj5?u-%FqEdZM+8BKMkq%-!7:9C4aLKjZ#qaa%O,Q\#U,!YnAno&6j5p)HL%F7P=R$?k%eeqYU,^#nAVT6)oGQ<YC5!DM$r6Erb;aAT0Cu5f66g<k<1KQhCm\%>m3+H'.PpEFh7FmrLb3e@s$n/Yk>Ps<R;(=guDLU<Q5b1YUp@*gc*%mLc\cri`K#EOla)JcjW2G`8$MJBM#AEbK1,H%C7eY(pVkV%*7?OX/]AZQjNt2:))`db^,g7K46DTi,lV&m\",Jcq_j?-%D,ObrZ1uef#74k4Vu7RYRD1UVW*LW2&/?'LZp7K==sHH:cfc^?l_\)%bi:BHbaeI8Ln(g"d>#0[>'R&]D[$qV;c5aWM=:16#smqC#91jcKF@M9p@`KrR]3Q@RXC[Si?^q*a+\Yk)=4"=Ip%.OSK.I.;5=#r%nb?M,l1(*\iTlt20$o'1pV_'@*sFk#!DmQ(Z!P?1<'53!*'5\U"*m3Hal,(Mq"t8LkU1OMD/p":4b+SNq[-1-nI.#knR3E*1L&.1%@(^'TX7'H#@%3=cd?UfLoa")<VJkf60933u]*tcd<-t:/^Q]uHmqat4QHZ)3msQWEfb<B$a-R,pd30:"E4h[Af>+h^!6bb2.Y,uG%iCU32fuo).SD!ksIm)@XGtQu4^MIdaaXCF2@N@W?MQNYj258E(ENoG>\.3\&TrJs_q$\E935G8;4_kgV%']m8N$im*nrl,SVHrHZ%BWHm(-GA",A`<T2,f,DRoVQoOCC-\UOZnl9]>I!]4-VgbG9b(s]IhsROHYfWWjD[kOH2n3R)j51)C%U-qD;#r)Hf5M`?t(4K)O:o%J)[POWAu0HGqC^L!>Xf'@g)BCYrO/*['(Mb"\Ce/cE$gc&Tr,e*cPh+iW[m$NB@-FjA*prV"#hZmA7[0\4k6Nmfp>Ym21%&boK6&%FWbej-:V/QJm0*YN,MJb_RI-eo`0$RV"(#'m5DMhHE3;#@qu@j,DfE/kIIOZWq7(299#[&l\TB:&@bukY^&Vb$9ST`.VG!*5Yr=)%Z,^Q7O=iF41&mfB#:T`O9/;5:[\2TT6:9q$\H&4ZiR.M4JB+k`!Oge.ncE(S/rK/i=&e$?43IW_5%)j3S@]5KC(((n^"R0tEE!L0%+)d4UF>$2$<;QZf\k$c$>X^+_#rOhA3Ho[j_Om9Np?M1oG<_hni-@dOT"^k9B2:IbX/pp17G=g=2W//=q)9RN'Ok_DfC\"nnK.@.%WuO*_4o`=IdS!8dRtEtp,Ac-%Q>X,6jOG<Jq#/55g$?hrnc?rd2a`NUT^@P7Wb-n5^+Ima#_3d)hN?c0(6QqaDabdO*`J'*cPmfr%>n->3]b4@Q+RH&rn;:KtibWRQ1(>cZQoj)'&\F-p?>Oba^Rps%E5J*t`)s\Zk/i?2o%LfD+0?pJ:1.iJN13bkHcP?D@'C8JE&gOU%CrgQcjo/a#UO\2D=9HDM?!f;1lU^V0FkPG/T\PV@NQ7+%-@OIdm0hu=DMqFj0p6tAQh0<D)./GTLQ(a#@05fjT'%tL_s0?a(9[(#%Z(tfQUspGu&9a1so:+H3>_$:h5oNiI(F\8+&E9D[49lns,q$/!^)G@I6KJ7t0f&#qUiP\[d[U]dne%>@@9s:IeeO/P@,IPlf'rCE%\H%+_D8la4\,26Ub-HPDqI\bEZA:%s*2SY#!/Z)FdT'>5"V=\&8-A"[^h)S?8Qc&8r)e3o9*5RE!n_#=:)5P<Oei>G"]-iq2dQlf%H_$8En,%ns0MPg4%AlfDFHQmTT-+c97oa@?dO<Io8<3dciW3;<;!"IDj2!0]/Y\XX</fd_(9aHZA6lEd"\2J>Y%6Gl"NO,RkT4BG%5l@)7od*IOet8'iciiXrG'a7;A3R$;g#I3iq3hQ6RH62%!Y3EEp,I`C)\D<U5LjJ$#LZRO^Sme8-<8E!O2H4`p'eaR$eg8SHm'f-%p4]+?kIsJ@GN0'Z$nmKlBKoI[IO$!m(g)UT\ena(1=Wr-(9ik!:?b8@.Y$`/gaBF0hp=mGWI@c:O\RJ\%V#P_Q\al(5p3c4jf=&?%%FAiQ`)bHEkN(Q9"_k0gCL=%Se3t??L'6PfSUMeO$=NJ+.[=Vl1>N5:%jt8#\)3Wmqbb1YFR$gR+]Z+XVZSai3frS[/@M.rlBiF8%AorMs_uCdldC=Lb/a7,]]aN8,3h-St2rVbq7!6>i2WA5KX`PHgU3_-2<^@%Js+!")T99?5(OV'/kN"K!\G:M#]Usr(8:QFM5@IHP%o-$C(?OT=I#K7mWn9uXEmVq=kn!;<D"Fh]9>2#;jYVY)r[JA4PP6-%2HC7j1F_^R,DXji-],eu#^Z?)C1nBQ<,/*Qu8N_bK'P[0@%ZaO.\]63E:qQ(Cq"h2cq-"PpQLgF>,%PZ@dXjh#U%"DnGErQ&ef8OtdrFL9JiD,A%qo^2GZm>lhI.h;-6CS;.6Kbtp/!Z^8MULs-%+Jl'b@c[6nN#kA_bQMV3.mm1P#HIG!YnjGi#"@88p6#J6PEThuBeocngn'0eTtG^q\^70=7s:e)YG+\=$m6fXdT2iD7@2S9IOB!d%<gQS9ld@+D<ueOk&T:?==@SX;X/k\aS(?iPLU0F>4L#^0<*.:cA5JlDk+rGaYlfAS+BV)\'5Eb&DOtq]VO^0?OM*&:4X#+AW]gU2%p]5t7&l)n^lt3kDi"9(')R9,AYr<jI\U9,iqFV'm<tnDePCiERT3Ym)&)d4`X%VQf'0V!#X$K!i&R3l*aChFs"V6;:[aE3Nq#-=S%p75`np[Vghc=.pZD!c0pgj6*i]#_Y.[.&7mWoC@\@&<Y1HM)5rHZOUlV!Kfn_lJ-e$i,@Do&spV)N*Q7na"#kA?eK)G2g/:BU:PL%c*j6bO-oO&K/Xfo*:<+PHhcNXIRh.?VQ_-g>.)k:((%]U]b8GGHY6gKFXr<f@Bh:gQ'"\hbN\6L-7ftAJ"O'/X#NMCEWWG<mHtBi%+g/&Z<s%',OWSu<e.0t6jpc/Mi*X2O7UEfJ<[LfH<KE_Z-V?aF(=I<#^e?4N++)WO%<N/6!#s=YKM$0V./!^;8>YNOJI0j.\@ACH%6%>j]d_^k9]JhKECMP%7A$MI.eX^CV!AMkQa]hn&/\O>rmFr$!SGqM;XBnl)I_C]LSdkmaIuVH^bO(Nbj0"?i3d]+\gF9PJXN*;;%\Xe'EYbCJ<Dk,CJh(8>Uk%ehV3OT_Z:@#>e3)A/h)R,0B\m!ET9$UbFpX6J9Ud7`l>Lk@ENi;jn$_pZh!ii>]MGipnQ-tG*+bk@6%$iuAANHqj07+/cg)l:JDp&jR2HT)b0;9Ip+fdu7%.&Hd"n"37em;V#QT-i1oaed)g"I,^Bqip(jY<g#>?kLM;<L?cA&)j;]ro&.H%]5o[L.t)0AIFAj9WstRYL#]ZY5`dCNT$H/0`3<S_$cP8iBdfRah9Ql.\(eNI_d25=Mcpk"2NmDagY8R&b#:PaMFBX-FAlDl;e:Hi%XJZDMB,a!6m)$,q2p]<WNKtJ@eJBI1^)/f,</`iEb&9)Z*'WE3CieUWL&=1EjP/^=["el9#J(DJ8!)3j(3.(?+6!1[0L>.M653Te%7Y6.gNdhPfLCgAOeB>e)<-k!t1aku"7m"b1g6^m5=)`9*HgqItI[Wa5Y>iJECo[i-N>1M/?Y(tWQd[S*l6V.!2=f-\9^#_SS&7C/%ag3M!=o9KK3*msY2V<N+!/Jg;3]YlY!A6N)>dYDO85eA`#?m2R*As#pi)J3cX8lZO3n7GnM!_io4FOBj@o\0HD%IM*kK)sf]a`s&%fZ*ple_@lmYf:=XHH5/JDaT=4YBl+hiq"4S"lp=(7Ab=YgU*pE/^#O3chH&m*(V(5fo-'@OTRDsOU7Mf&__f:7s[hDjElYlFn&u\%7rjFsA_qIhm[2boP*dcWG2kqFGeCUL7pa-se]d%gCOF\sYPR94=$Eg"*j<r6H@9+FO&p&m,HUJX>am!I-:dR727!50j/%01V[#G@%i)W,+;t.=YN#o0"Ot`(E4T9Ir&nZ.ec="/f,gi#nOp%$pF:nOl1DipIZ>b17Ai2!*8J5Ln8$9r/n`;bTk%7L=8]2o(n8WS!kO22+%3<F"5l]ia>j9R5plO7kgI3^Ok*qH_gc#H2*]'U3g:+u4+"O\ZQdHsP<f(:P)Mu`b-lIPo>CL[JaV0;\3a&Xr=6Al+L-K;ZBE`"[[%qbh7(F*lA7qtGDGJ*GE@GWTMr>"8od?>NmRp]qAHbPd=FBc`!;ABf,njcA=DM6'gmSQ%"??X*fsK!Ls!2LiNIc'&.oV,\jR7WsmG%S@`ra%YpC:XLW5ML4d2OcG6%(POkW+U_s(pW^ru#!oN\ZEZlLk0G8=%"sW`^gSZ.*#RD5[bEI+YjnrCGMhM#E0"*kdXG!@1TX6"`%^J5K&'u9&Q%\USHXg%m&`W8!3'@V@.?7@[2&58ec%hF>Wm"`ZgK%n;:oG0JJ-;Ln`gfG@'9(FYg`($IC-/^K:6QA4#C[l:QIh-nG%S$7L#3bJIq!TFNWPp:Q)><HoA"c29_?=7Hah+;b]nWdD.k+J9'R9L\JD%:RDN$383"$<eh3WD<4nHQ1drUJ%.$0hjLFd`:bB!M.N%,\#tOo-d4r?M+L/X)eGH(O!*gR(lfRg,MLM]-EM\"\)p7INrK!6!\oY(7`ABYUa^#j#Y`J+kS<Or=b:]!ut[ad4D]\Pld8![+inP%^L$E]K+76jH9<iZ_>e'J*40krmq1Ks5)6)Bq9gq^"FpAU)WLA&`X8M^-q1Rl?j0+b/!q"J<M3e/8NNZ![Bd;p];^/Sm(9a-SZ\q0%EgJ!cAdQ,W3Y,=JR\P0f>[4uh<pLe(p:N3Um6:5>(2J[eq,L,M`k>:#IEUAYR>.%fA.l&Z$-V(MQUDS>,Yo[g[u\?U6Y89d<:]7\%m[etNLq^W_)s?H>OH[0B02KAi*X7<DL?;`)k6&=[p*IXHgG=IP2ZlqMiroSGQPt_-3_h"g?o]kaZ?S?l[nD]>c<d[16%kL-Z/ukN%?nY%Bd(Cr^J(u**)*(SC3:I[Q7Q4'`G2P.mA?^-Yn'9h=XP:P1^2S4:L-7NF-O3`9iqBlE5uMRZ.BFf/V8UVUEqeMcpB*=Qq^o99%/\9N]/VIA-HH?Pk`Rs%i)IG17Af#K#'af\@g*Tm0jf0RU/Lh`)f(W.=QKuTrkI:^.qeC^h3I@'j@i"ag9Ubi_;ItnR%X*p?0k;Sd%8[O`i27Lu7S.G!Pr1T;(:;U#[:_b/2[0$*9N^1tlf?NH=(_HsL/00>l-f$,r\oiJKXqQU'LL%TC-_(n>!C[8:[-Z28BR0%T$"^@m%EGIae]ZkH:lcd+"9lFi8"LJ8X\,QFM73bC/&+:M"YnI@q7[.!Jn)UjO7?=1b<D"d\,?JJ?og2qe1QuJY5o*@ok&rHj:pS8*5biP@%#"8kj!22O%5+Dub4rWs@_uUd[)VN+/#mY.\QjRo#?;!3dN/]/`;V%7(p.d=]&L.=0m(meBL+O?,`))@r't"@FrR>iT]`V+kSf["3%aJTQ@^OW>+IYbMQ9:X^7LY3$(T2G!4lT#B^JP^<MefueI0/MEBg*&*,Zs$&>-K=K`4ZVAF^']RZP]37OqSp[Xc:Zi[M3.ML0s/G\%I#C$KiFG_r8d[aRFK_R7WJO-2C5SjN!]Nn!2$L/CM!3BR%$Gu2OaJD^-+?WFQE#eu)eqg>-VKdR1m^5#Vq:H*:/>gFl+Ru`p8_dX%:S><IY\cKX7]:b1UIf&g?5r!f`mDe8*<]%D'pW*5(OIcl[Boq'N)8!P92IRha!gXM:d)F.lZJsBag8\D]6H9FIir[u5"jV#Jee@a%bX2*A&[n'9,(s:D./:,O0qq>di4t$e2LK1)r_tkdS(uLDA@botb&tr\$[qYgEkYe]K$ae0U_E9aF3J)#fuYZ]cZ9[&T,$3i[gFU#%8c`_-+TUrgP8Fnrqd@dIh!'Ou!Ma.FRoZ'AGZ1fF-b7aj5%Vm*(1KrQ40iFR,'C%pn;KbZp.B85Xr7`hF8$.qC>PV-W?G+j:g9H2%&ABk@:*AK.(J.,$H&Rib#LQG>_nrA"0?`*]KR)(G;*9N\\,(/>L\N4tWRNPj1<W[.7r5#G8ed-LSL$!#c'pGeGIhD-6l9uO7I&De%hWT.p/QVFm8e6lV&C]&h4jg<,K=cmE:=#$IkR2urG)kd_\(,m1c<f%P1B0iG<^]<g>OZYoOFg80=X7o$($YBoY$dq:WGoh).@?S=%c%XG6iW.BV*nH)9);iDEQrIFVs5Uc=3>]GKIjA]_m%Un#0YW+\SM^p6eE)d_kkfA6g#29>]m;V:3*gg!e=S)?U&3!RNid9S2@2B%%*Nf#bZH"PYrM?T5Lu^0kFplRL=h--gUQ_,f@crRI[O\EcComDH_KcEtg.1kGKk!e!#jpMGjiqa>3'R?g#k)s\,UmhRNpus/rcr"-%"qL"T<t/#GBQc''L\&I$V-u-nan.WEY7(WJHXR`TT+84r([=ceL<-G4e"(DANbRL,Bcn2RO1Sm`m$;72oF8:Kd>MP!Bl_fBRaBFf%irT.9%IH.@!.1g\=5b98)'\"1+>jJJ$-:6D,A#S*+,0Lqol*QP&EP"t1CS457`>o2JZ.n2>5/-Sn1;MEh$0<_&qUDhi$6WM+2kB1%.b;$<M:XHb;Si%0B-QIRLg/GN=&<kX\)$rf")KV8j>u/K<]Wm94`WS/B,1c:i@`s034=p)XkXM=m8B`u>i+I0AUI-3os[o(1#G=]%S,a2:M=PpOGdlk:68/%`jIb"M*P3b64:j0:H>,1%Y*5CH']>@*Dj>KZ/!or-Gpht&LW?%%So&Vn:[JMjAftiu.fGsP*7@LoO"[f-%Ca?hkZBS"_BQ6gg:.V5),$_d-+(m!NO+#rU^VS+Z?=ZPqpXmnUKPrXA7_!$k25t*cm^%1(08nua#VV^m_kUO1mQR7uY])K2O+6\I%*fF\&d.1=5rm--CSQ8-s-@nA?=0l4GHp6tIF9gZYB@dgC+,T"ETKTB84.Vkdhp^#X2=#Gj;fC5+cX.KLN\\^SV_r:7]Hfqg>C+R(%N1+9g.pFSkc-j4%rN:!Dm5IZ+_W-2%^cs7!p)tXh&gcLiF3bXbHW#6RcRsP9p)`gZBA%(A%TDpeKi8;i/*N46?;Me?aA8f7dpD[K%1/-TKK'm)1C_"@s7/=pfm.g'<R2faPHhXefn0r?Y*rgO!8l(_mS'$2/^P-qhB1UTK/1aS'ac-J=.l0#KaQM0-066eb7YAI*n-,PG%%5e=70''[U5dT<rnHHP<"(-.hq$RgD.=0`-EI8H]e&)UNV6jc-QspY"@;a`MlMn`BKdc+=W=RjA17J/!dDp:on5136$q/#IdM!.g%V$K`3o3RAa>)T@5`\iGX.=Irm6i09%bCQLf#;4D(q'EYn*ZRZEjB+qnY90u=Po07G@pfOa0%1TnI5MrhT!;PHLcfWfe-f#o`V!N=%BXspF&--XrNa&X+RHMc(!/r:!'2qnL-0uemVd;]A/5BbFp[X6;W-5#nN027O4\#!J&TR="8q7:E7J+u^T+@`#6na00h12qC5q5Ae%*^tmW*1+5%nN<[i(%&X:hi",+auPHtdGic_SQ?WBcK@o7l7Hc@.W3h/HK!?d/`$g]T`K)Nch,=-J!1u0PN5i"kKjTJN`*+Sct0<H%7b2`8IXR^Y#aYXO6m4CjL^]#6Y/iPX"39<om0$XNn3J-_V7e,P,rkV/O)3gU<3jP4&%&O'4^r"(Rd4jW]`?ciOc)oqaaVE(p9sBl%*h@paj!VtpcU:$^4Ol$E3ZTE00hc.lfIj`4G/PI:M4?Y_^>EI>7J%XpQ^D8j`OcZ0(_K3JO_bl(C9Rkf%L(bk(kDsEW#tfm%!tb/%FEe_sW_(ADp;:^f-WII2gkmePP8Gs/IdG*Ja*U/SErdH;4NV#o<%j=Oms$-F?>qOYKk&7]K=dL:jX%B"X!d']5\R4rP#RW9>gDH)%O=!ggO[UdA_B#,/6l+7e6uCl!ciCf$3)kk`CAC%dQSAp=L+8q&7nMuJicbr1*bAWsNRXiO?e?i2VX/h>$?<3TZ1:^+\T:_:I'=iJ%(`2W^gk,M'@L*6[JFShgh>OR`a)Sb=5!TO!Dsn,[)CXGJ=`f,*Hl@^XOsgn07$;9N949]=KZC8hVh'uQ4Iq4MAb4n?:D9L-:kP-H%-4.:p)IVHt+F)j2J8\a`+<]9<5Oh!(j5GRYSJa.)/<rm2/CfcIr`e1r9gU6F#\^+m]..,"*X%;mc%3)`>q)O>/pf>'P%f1=@@-48%\:hWl)Q#soZ?Z:g9mh'bX/'n>Te'kjJ-=B4DZXqSO;UL>dfZ4CKUg)c16)$E+C`oPJLYN+.)r!>:P3kn-N:P+9`q;D[`HgI0@"WV%ioO!=4NRt\>r#N/!io-VGZ+b4)o-04Cn"7uU"..ZoS6SL-USP"<s(;DLl4!4r&1=['r+O)dF^P0)N^S<@YSgZ,otGI(G18==IO5f%Q'D"*RMZbC7o7oVH-r`=&N;DsW7D:o[nLXnT#^C4<tbm@6!CVc-#3,2"TFCa=5O9<aPqW/6C)GD.ZW0_VYUpHZbG"k>Q%)\2&oh8%EN5e8)j\>#R'DM%emWs&C"/jlJ`57%9EQnr']"e#ig=^"bnpCp']0megi@EsZMPtP>Nt?d4#31W@k1E(.oeEhX32M$T3<V]!-.-t%o*MG%CCXte#\(uJ3\5C8!'9[KV[a**3T/Fpk1!h51C*jj`<)qI$_9;n>a@En=Qmt[\g(FO(,.VqO=J[CGA^f4qS6HWi4_X<P6f?Q%#_Z^R4,L1(LVPmXY*0.7EsQNk>0fcnjZ.uXmI#iZ&XMSk*rd-S,5?3bKY;?[n6-m?q4e.ThiCC444Djg.O8@/SWE33hY>P;HUKO_%:I+rrB3Oh_;T:45PNYLL9']2I!8$n$6#V20n\<*8j(YLIRWaI=`qYTR$UkT(p"Q7)2sVc4?W#WbDZGbdGX]$fUEH(F]V6"PH3A.-%rVu@/e9QLr^7BV(=?<,]P#mI9d[>b>i\*VRP<iOi5u^`mJEWg6W\;;d'`7h6rB<\X^<l*Dj%Xbo^!FFsD]@EFng">mQLmeDJj0&Q%))XpufC=&f&b(!B9E0q#HhY`l\1l&U1s/K]P*7X>5WY0%8SL3kJD:6#8^p3UTi"Bp6ukta(%8+l8guJ`:8=,OFA*Gr(m'st@R<\]%Aa!8-(Q!2ZEs5//<e?Tn0el%"-O!D,op3bI3f-sn[%2c?):h_57Or#4CcG%GQ72Nr,R\?;8s6h6MtAl0&C<(uoFF0MA:B]3+K`^/%5ZX%H0k_PU-ct$%$nIGCr(Te>C,8bNc8(NT5NsgV7TtI8LWW#mLeJD<=@9&)/!AEqqAT='VG!,GIA/JR@o>]rM\IJeZ8='U^CscO%*E--W9#NqMX;R.#a_4Dlkbk0RA91P(=t=EtW(\^N"a$oGK[jKW.>es6M#dnt&KmbkogL!KRD"hm1JOarR3`^$Te]ZArh]ca7C;.j%"YD8R/kE>*;+ZKWZ0l.+8^Vi/;bK\3fFi"7;440/+q'a#n]qoghio+U0;W.M\N3Zr'!tPg_%@Faf:k&o$FEr*Bi$/9T<&b1@+%YN%:e->aE/CN&-sJk`;]?qH!!LG:AC<W9:FK\99ktkCd^;M4.CBp3VkUjrZ(4cO.3XV;iJ*eu[3V#2Or7:PWK'3^AuUS9DPlWT.Ul*M%NQ7l/BUGOE,t6hJ9$nh`9>^0r''^1Y1-n3p,#=*A:DOeDVD3m<8S^4YB*W\#R`WqEjcg)T-q][9XqiH_J#;]s+sZN7jFo=oL!*#o%!r4.kZ),t3aACFj7<FD)_O4rml<9=ob#2C\IPEFS.tgq(QcLY^B.0=mBpEX6&T0p1B@McIb(Bau.q*Sa>A5i0)53$N3Qdro%-gAT%57D]uZ>!o-<6gS3Th$1L`?G^BerE)UP0nM5.MHNYW)Y([b,C7;(!3h9CQ(rT!/Qldh[/[-3Z3pL.g#^l^l(*tZ3m!6lV%n(B9WcP%!h5(YE@I+o0US"I1)tF4:dk43U&JT/f6.9cA5d'<Ni<<e1nteIf.o)R,s(XVeeOZf-DhR*.U#mV:SETP/]H@H.Qet7U5Z[L$DpT%%:&9K/6]#OGciWS<3ZO,p;0(8'anVb@$ou=6i_%ir>*7$DV:Ca9Tn*&?k9MhplH7U#osGM"9Ilh@.O\hM(0ltG)p8j:7Zq\3e^^:d%m[*?sXFGt/<IZ=e5Dc&Ua@N"`6[_Y*UAi[@aQU65pkH=tqLL$E`DJ"Ne5h>TP>1>a#.Q!;*7B]Q$^<JNZt)kFdRano;HcFWPY!UH%j)?TH:.P7GLRor3/m=AuE5kqD'HOa\;ahoslRf4N:eIK_'gud6PPnnLjX<!gOX4d"c%_S4L7G,CSY<eHDpeDiI;<;jP0pV3$u8n/%e<CBZn<>gWQ'WlK-"O)>),goR<hbUNM6SX_%Nlo#KY>I.&sSLWW;$Q#$!'A_!+hrPFb>5h3`'rD_HIqY-a4nL1013Z-H>7EQr2a>%pI>(M0uc%S!@T/=9W-CL&pUHhr@i=bEO05gG:F27"mi_>>%&hBP1dDl"L9!iLp3;P`Cqc8D!;i`'5U&\R92f33>5kZ6:jeTJP'bY%&1A1NOu+U1^ErfK<i>hLOCkoRVBD[:$"`6m@S97NK*_SuR`$Ij_IlGs8.4'gqNEKOeUBf1A92@OXe\MQHnnC`'\HkdY`;U.c$mhK%Oa>\63YWk*Oe5#m<ol"`U*].ROm"UdFI;?o$0DOS5pc@aKq,/`V'W8*'U@i=7$^bFTNB*-"?][k:^`)PSee^M1R^AAhG^@N6W`jY%(AG8Lg?ch%i"`p!Yl=ujK1W]Nc(=ir1!)\8#+=ud@NZL)#EMVj!SW\]alE0ak@mu!<E8DQkTe6o!FD;@C9hU)WZmpCpX?3h/U="t%Am5I*+Du9p^M]1\l#O/R/GNOKWF0l"[8KqS7QblI)JW8Zg[l][[3<5n12E9%hBH7=E\OOr=l1u\1Jt?>hmt#h3!Rp!D(/.M%dW%W%;ReX1&4m`c<<5RnI,hfN[]1if/fuSZ>ZIQHi)lP):U7]DH?TaSetEjs*FK!PV/F>I[cMi&FK6eWE3*MT],tFf,8[(J-/]G0Tj%^g%ZI!d,/JT_#COmFq^1(0<%Tk9la4?s0Q9j+L/=&d(Qs&<.:0R&5nE"+Fd5teil!8%:7\b#>6"B&j\g?"O8p3k5r5"EIs,8]l"TQ4N%bl;&LrbL3M^%ZTOSD%(lV9/FQrt>4<CG/V\-2VeV?@p!I@8Ct[emBq'?f/@dF%;CG@S%>>[hZNtYI-CVUOSV/eBoY=#=Dd/"H&r"%%AO5q)q'6LN6S)j3s3(?-`@Yg3i!C$gH90T]iSR;L9]-NgB^86AcE%SisrE+YXs<6mD"&/4`0RDB*fDDP<3&/QajSWI=f7ZO=0IH%andDPY)\?(Hr]W4kHlp`#;:"m:.*G_#La%>L'3#NdD$Zn?F.rC?@H6f<tGjLhjrtQJrY$2kg)s4#]mGiWD+Q\den&r(J3sC3muN\%<^GA9;_9WMPmSBBf5AQCf.J:NFWPo<&FNuGQ[:R*$GLYghFdrE3hT"EAF_poPh+7@3HgL'NZ$O&olLEDqI'jYLdaIE^-+Js#"U"9%<0+<P*X%$^Wj*?dm:7QSFYk=7Qu!U&PZuNCOU_RqA(MG06AM?c#Td5$Z$ilI7`d\IF+c>S#;cZUHnqmJ77bqQLs?G4=Re[&d_<9?%kt4+uoblMJ/n^t_mM+b>+DhWjU-p1aec>;u^Jn2lQF,G_,jk=.4UDr;4t5H/Z&I=lHR#o9UtfahG*A+pE9Pm1;MucSCGCjJ[9I:G%N!%N?"!o[G@R^o^JK.j:)c*HHDr]VlkQWcb?c)g'h590!A0S][9^=1Nf<AHekYa3>T8C_MmX@!mZ]*1BV(R4$N>+5-.??:5/.3<d%%;^q48LoT02"M;6e!n8V>9IrPjjG-ops(QI->Aa]^(;07JSE6#)!2<L5$ci0'#X$cCrMH(XLlSWQ83([<-nr=^`eVgF8`4jMMiCi%j\PJbL8@GIn1mS"[",1rC8h[*[5.Or_18\-"HNg$1/;Trp\R`09geFoSdsM<.#9XD?BuO6-fDQ[C0+ZFR-AS-eu'0dI.Bg/Ur\B4%mY4X^Y-VcbEu!3="pZs<l`fsIC?T6<JC3Q9G.J*Dmd1Ul4>Elo!QG3m(qbE.P=Smek^DqekO:Z+EB26Yn=<:5+Ob6Kc4A721e8S`%.$,k=_]8YtjgMV48f3=1=5tZHicFK/B"ml0%ft:O+Nob_^BH8)@!=1!ecY4PB45$t1!kt!ZHM4YUpV/lATPeg*m6El'F$ff`8+lL%r[mO^.XLan6e?Df'O&SdX=VMhJIE-8D%VmI(#I1IV;gt4ZYTbQX$"<lkFr`jI"XK@&@Vh]8!.et0W/P5E/lk7@m/$l\09B!H%iZ8%"=A,d"X)[+DO?AP%abkH6b!JAB%jiKCmZQlQ8YOCEL)A);'JkQR$6e(f9#9,\631MMg4EbS2U5GM.co?qMr?C:um6T_,,m$m$i%Y%bA"H!0(&!+??YP/2J*ns4I@HVm;DTES'QI\V!q^XOE4>(No>$/hP#qrD)B^Z0;*_QU8<=nOSc=OVK7?DR@Y)6!&;*j,<7aRJs>RE%NVAg>VF//c%614c7F2n#&i<S2$HknN7R>=;?qYT4Eu;AAN!ZrF9%ht9/KA.L%_cH"*T'fLZ.54J6+:uh<:=_h#uW^LrTVHOOr-q5%H9PK]7kV[r;hFKe^j:o6b1A_F'/O[1ph)fr;(s,W*MFP**m6cHh^hnE6LtJlJ[;lnjE/Rb^1bJC=e^@0K*4;Y&Ttn`R!s]@$3I/7%f^(#K,-Es@aRhH)oYD7g65NQ>G:f$6m4Y5*+CO/+P1,<UGsXdO)!YO@5om/,fH0?FDZoAr,3],A%us0__ujOk/Ja;T75U*.l48Qh%4/-;+4o5SR]!M@Bkqe<(DLFR!jFHlK\.U)<En?/9JTNN/nNu,ISOn\BN8i]7Sa.GWNXD/PlP!0eVWWS\ih;=BeU1jX!M+DHY^kRh%!^%/mN;kG=.)68?C!W.=P^13;kH3R6Q]gk$Q^"u>CeA<0FsHJRE($IM5T\&\RES6-f9)+<pBi8#;&gF[8qLYKddqn;*f/d#3!FoN%9C,[I]`)Lm%-H$ij/rh6"fH?X,/(t+V>19PlsuFL+k[SZmj2qmD)pIug@`D0&U?,F,a12m#l*]Mm`mGJfTj>`4.f7jIc2T->GA"!%S]STdl(!/R&MD;[1&\\h'a-U%GPIZ02/Z*br3S;k5\NE-H4Mj#D,0=0SCReFD89![=<[_j]#\p/pD8/\^m@$8DdV:_<%SegRT'h9%E0f=@+HU8:hH2I%F<[QZg@Jk""mg;rbRD@i4VR=b!8JBfm=h>1<W)O6.)PucKq2A_4Ad)4LROr!&dX:+1m?(=e0^B`jRug]kd`cq%3_'Z50eU`rZ3BoD>GcYj'kD_RZABiU*V4r`ZO]Sde9,7qo,Co+b4TQKLdbd:[";O9(@U5)!iCoY`O.@b0U@%/(le\1B*k/#RkV^J%Nb#C;O_Ue'3ciu;,<Bh5'5\iOg<nQeg$DmbP=aKs)oDUD+\F"lK;i1!Lc!4Oj50#3>hHeBL"hn0-M-0Rl5E$S&4;BGn.cidfHF)c%S.RC*JYYc227TBk/WpXr)S^E.`h3^V(=\'u77U*6Ju8ma5%FIu;^iV&Q9(sT0ZV(f.$:H6X'?5l.;JUJN[@&G:!uqHcg-7u+MnDU%%UA%57=bGu(NO:N"l3&ZUbG6anNFa,kZ@-^RsS>fA>qu./DW!FJRja4E8^?u`0K<#,n2ioS-hufb812"H(7t._%lDEQ1O')6)G\M%=X2$o,Y+jHpMED_VX\o>GNhM%a--o&q!)8-lRB7aQ5ko)V?c\>+gn$RTI*OE3J#GkL`:[fB;@TLcGTE87u[K6aM%_C@/J-EghOcI%MO.aI#BZ$KlObG">f(ll,B>5,*su=]k2:>S$><GapC+ehRj!CF4:bd7:D#u!Gnnq<9G5@3=].OkSD;>=?eVHS+PTKD"a7$"AY=qQ%LH,Cki.TB<AX14-NZ]0X/E0_b`k8sY^.%&SLlK?R(e6W($o6@=UfW@]S^LSKiP'-Y=0+D8CDM$*]f40CS6)f2aYso:r-OGa7l9B2%m('Y@Ek>EZR(Q86ad"dSb7+\85FfmYPag?@X_dST:ERdpO.e[DmdYRN&Mo7h?;F!cpl$tR8,o[OO$>lt&?("D+oi=k^0#SP(gX">%[eP%,5k/Tp2j',V+['51c'a[a"a"`td=EQm@!X&b(be3a]QR@]06-Sfes]H5jW,AMC_C#>lOJ*!cg-LV8L0dJK;*p=U8;1/<r*c4%;eEWNGLTiY[WkaZ.g-9^_-pm5q&WS<R@LCr%)VcNZ0(81KEe.]CTfs14)KCK&p(?'j%n_j,Ib4ISNC'2RWTTMK@LSdEGCL!%VU2M%ZABiU_`e`aN]=+!AGMc&MIHfhhhHtV3P!1g?ZM^-h0$CaE+.39+Jlp>S=>snm&'(,Z.'4uNUCJk6_p\53LlZ>@P\D$*bjPtPMXQL%EYnh9<`/nOVT)Y3Zo)[JVG%5nj6=c7Or-s;I#b(!VY933R+.`Ah+SL*Kj]^R7T=``Y_[>tkn_d/\6#j<b:&fn0mRZQ%^^*@8@+>U%e&3pA!It%.aV8h**5F:J]2Q\=o!;lV\tYpECo/m(Y98%E]>s..7GLp#dqPB2e6.fuW<GuEn7/j>e)iqigajKO:oPDOjTJcWNm22<%XMn=+'ZmAu/.L[g6ltf9a6&VnMYC`J_9Z66%VeeX=.MpUG^$$2B/o$fXil%;n@X<.6pr.7o)STBcg-LV8L+uH_?sc+L:`[8S!6,3%WuFph&I(R149`5`;mBO\fC]gmS61**PnQpn4%S0sA.rX!Rp[DArU=U'<0#Rs`CZhP\N"k!l2f60-tl"6_.(P<J4>)t/1X+1Ki\\?%6n*%afVb(pf>&iAHV$[S4<GEO%SWBecXg'ACRX)mokJLI8=[,p(*?r/<QN"nl0P%o%acP>J9E\YOW/[VTcKGAr2gcM>bH.^`(%%s%[ZSe=!CchR@1g@Qj$K"OllMYJ(\*Y:<m,[B/.43NQr<T^li-_0[,YD;*dS^o1jf]]P:p-B0D+N[keVlqfYQ$&QPhm/ZoKAU;Wtfk%W3]j81Ku*\e3PL8[l\/BXQ3DV>-$;k+GuCG1K?T$q>e.JkOh9f,a-E,0o[D(qP=l"jXM]&!gm(9cDE8$Y7=fmQMK"M%&]?rXhb6J%e5;s&HoM[_a-_Ju;P+Ru0A`aEQfGH4)lTIr)h-#4bX9sKRuVYS3YRl#++\[dhd)$NM-%06f@c%F#][G6H`]Md;Cl8iB?kg-\;`1e%$A5#s$jKMVX`$8)`c[$?&AApL)o<5XO:^pTb+,oP.h)n+"KR7?!eCbXoV@s(%+5]ad\`c]Ri*MN@.YINIlJ&e'!o.1p1KV(^0i<)%+7d6dB.KPXh\,mYZ$nMRnQ3a*85I*u)\Tt47/0qu<$[B+B;usQ97+HkRo>d5(`[X2&iKI0L70Pi@@]$a%48!iFN.%Bl*AhXTpq-&%[5'aK.>IWu\]<n+7Ed$?<uA>/UI<JMcd:#2(FW$XH>S5#(/Z=X!]o6m"015F_8O[d:Z'Dsb9CpnfRji8S[Ve`29O3pT1]WOeV-t5%XF_fXSBWW\DLnTEo\"o(EubJFg/2/e8"sP5/18V`m<g6Q+89CbKe(tWGFrHb\=G?EY/uc?,k[!b_DGI#!_-[V3dC:.C=Y`&=\?!L%"dUtc:b/&kALU&_!CM[B0:-gQBnLg7DVbr!,NWs+>fG;<+&i?jS1X4;0Kotl/#135P5&T]G^]V.am`+PB+QG],%l@N5ns&)MMu7,%550'7AOOq*nnCC$XY$CdZc>tP#:Sij_4'Glq2LS<j;>rt]=5a@1XY!bIi)E4(.O<ZV+:$<]:fUTAg/;tK9(c&I)P4@7Ed$?`U[B&%IO:4J+B]eOl5*Oi14k,BElN43(5ojq=188fk1u;,L7'+c5oi'D0K$/Aoqmm>Ec+Fok_s+96qa/*4?MAZU1>L`VJNQM_res12s;aV%'^IM+;W_d1VI\+)!GHbiZABiUc&s/aGEZIq>WL?qO<*59a1(h!df"aO]:dgH&3"+U?0t3S`pDJqi>KI0U?bu=ThAb1O<5&*k(kjh%9Y1HB@C2m\5&3#$M;dB`@X#p8l'gY6<Gd[#`0mTTUclN]Z$Ca008X/I`%Ms'SP806pmF?14hQ8Ap_CP*XH@.7FkW4P7@;2!/]Ltp%>(f=A%<c:PCIlSMCtW'V<ZJ_)`(%j^Ajp&DFVs\)K:!^?fNSsMY,aES#md;_cEXI%dN.<gS(AJHOsgh+".u9cq(k:)QL9>f@HW\_%/%/d[9n9gHb%@dog&W&5J6_8]W1.?@)UM)dc=fsk+AJL`i#%H,_D!#^\.Q=*NLboQK%/^KVB6euKpf:s&?_O_JMA_!jUL:,::R#d%$<uF2jtk/%OOCVXn\s[C+1"po1o4`c'm.'T5:Nf2c5qHB=M)hq\6s9`cDX:K%;r'>&[:m4gqGeFq9<f9=D5(8-Let.\C+^"lgB_F%i*\1Df!Oj"4E"]jZ;F7K>RupCHsU0uCdlddF5HS&5XG%nV4U6/Nt:QW_:<]BpuX`RSmF2(%Ji(X^<p<.@88<bW.P<WVFFXthUZ'9%+g4%.?VJZXp1\B[/fos2U?5t,TDMoF%e3O>F5#na;%:#k;p)4O1#`B&*h1b;>S=poM>@W)8L_Bf<O"7NT<D>X\fJGtD'r]&a*%N5%B3b7j20q&1kGGXF3hY="%g\QD!9jV=]?pB:QL+R4DAMo';%?a`G'E;DT&hT.-]\'[Eb1@UTtit>!HjIHlPV1/hthUcSa:kTh`<am%dL?8l]2pYhFbk]AM@(X(R=>Tb-pVP.d$h")BAp4.!J?-sFSK520SPn4j4Ml96UX0^F+Do6".]q;4^Q*(YH:BYZVW4MMXosrQH]M=%Q5JkI)!\LQ`0)V1j@ZkEnJM<*E[27\mVfuZbOpkYqr<hPB9lkEOG$rf)7m69V_+J1Cg!G<)Zd7GF<d.qn8t5O/>0&$"chi9Lsg>R%HQBnNYXl7*?+#6Tb%hiPN*cRd!PXgE2Y((+G4N278MhYGJSJ;W'MN<2UE,ZK[B&'CCV0F`f3Q$#i8Mf[U5W3nRU^b6j`pQ3p</2p%"<XG!&$kGu(F*<j7o[oRPr&p4_22pQ*oX"s=Y*AOkPf(d>G<R(^>\Dh:SL6dVS?)DM$l3h;U(Rm28!4PLD[M=PX>ND;I\]5P*p)*%S@69a3X)DcXG`S\4:*ehFU)-G6^lQj3!1k^F5(<m4GZ`;Je'!+fB,c?baEor2'uOk/F"97/2\!M5o`ZZ2NbrH>%Cn%E7[-o7L(>8%QPpXG"V]UuB!ChGl!67_K>>F;:[>h2Mh3)5:d\jN:k85#C?J/K1uCI-DTGmrq'IeYL\[3sh<_\9)5dPuUs]q7-P%;oJ_!ZtTn2Qt%NG/]s5VA,hME\Q0MN7,#i?Y'l-P=KNG$4JOa);]==)QQfe\F+Q34')Q6q:`O=e#$NHA_*pqXI&M($J7R4]3%'\M8rHh)3k`%Rs]i%T,\"Q.;&lE8$'V/Vl0SB/-)?dN#8IM`'ki8e<*HLOcu-E>N>/c9HlV6HgpbWZ6c7rG/"uo82\L:["fKaqKS2j*`fKrmL!u6.It`#%/GcU+0`uZ'`DFY!.YcEpc.\,<%b#GnLTenL'#7a%>T>/d,F+;9=&qnYo;"sC)j@LE>RSD#)QuYY,\B%0C92Zb,e8P5QWp+oSK(=U%XYX.."2*D2H#IJ=Xh1E-&caJcF1PgB*ptmK-O#;_+!Nt9Oi8r>>jHi,$hh">@:9$:O=b^M]5GeN\H97nNncVUfeRCF-l]r7i*/c^%ZX24#PE4BrJ2<(eM/l7bCL^06QCt"qKN:mB.f-[:/h?8,$A*LOYj:kqM=%QiF;D*r1`.\$9\p:ShBf*;'k13(.sP0u0\T@k0e/P(%.#?2_NU+Wheg-*p8L+>dLp6:g"G&s6?c`LnT0]85K'cDTC/uh!Wf:?ghP(0C%kB09>C.0oU[-^F-O7\!f;D8XO6*,mJQ8T+a?.lk%h2rNsc8qI39=G[R27rtj2!t-A0YnX_Lobn/R94;lP\G#r]PBUEp2jaW8aPNgl^kWnAJ/"f'Dq98!)%JukjPnhqNIXY`C5N1\?[5+%,?A5gX=6k&&%&#.\fn/k#AKC2`*of'YF1I4B5n$t,pl&BHs(hl3E-S'TReAVJRQ*e.)q!_4?SH5M4))*h//_hM;C%n(TN6A(*:iM%D$j?eIbT/&PRm$E1pGt$qOAm5R6e.\^7rsI4TEeHiN\M1dN[*T>g_?PQ4D/;9c3/]NU/bm_Lta]H#nZQ7<R.`ce+h23@!T!87hi_%+-&b2MVNQ0G9:m_LG)i\>ehlE*BR^F>GRh)\>V1#m?e%?'Y"Z@mYZT?j\S=9+]/=WQd,e9TE\qOSAT_V[9!]WUejBU'kF]:LMfgR%Kob:#n>h>*][[omJ1;[/?tV6/QheTSd!>=l0c1NDh*:?*<j`acfRp<!qeuV(coZF6?>\0eXI_g_RXR@8Rk5AI>d^\!3A/A(87"[&%b0l5JX?VPp#H7d+'0&<%9$kd-Rnto/1PuWQUua'oBDQSk,"na>q%*_LQl7YVH+6o/@.(:F4i8R#P[.i?#4^q()F;#rNRK!W:E:@$%a._TpJn_3F>pPpsS%Z]Pctja^VZCR,1Jk=j,mr<-2Omfcej^r(]#ujI+r?Z<!%'#*MMo<5DD.Kr=0%Ld3R=IPnn]1'_.5g@7H=&s%O2O^NRn(;1Od+@Vqg;^]8tXXDKBO*/B'^#teL25_qnD80+j,DR$&\0/\CNc&fU9NAPW4g.R=Yg8djdXM-dA(t9k9mD80_`D<f)k+%c-GDtY(?ba-;i%kf`[<RERomi;'HTV)pWc`_C*P*j8M^Me0k)%H_nW/IF)N5Mf5iWA\k1?mBt*O"gTNnoJ;9R=DE-i=HX:d-Go,R%CDO*/(e-"!W4[EdOU'rM"U:S`&Z'Q]HAp4>"??k7Ec!:a%V4<Vn7@FecD?qf&1$]J7H4sjqOECT<0,3>`-F=E;)F[AlcI^H[gQ&>%0\f[a7(:`LBR1=oNY4j%+A6Z>BSSuMSB-U+:"])n3!S&ZM:=lG$'QMC_#[c(-te-J!_8;2qnnOEObi8BI1r6-R7,(rILd9bbKYGV%>njJVXaHYn+#89gb/9JJ8/\[i29-W!b-;@4qe\^QJe-:!-$hMD%P4'm%,WUA+APB+M&DgKq.5>\>8:QI)Vc.md=P%)`S>FXLF5qC%1"6*_=ntI>,#1DZkD%NQI?[kLC["[=c+]BIoINH=`8;0,kf,Xt@$.GRYm`MeI>?IM)k,5*P%hD)WKqpHLFXDidJ)%=[-Z'P:[;%k%"qCPngY.74'$7P6]q,^NU(tGgDl;S2LF1DUo6'qfZBT;Cb<g$BA0/)6gp^:k/3!E^m2PZ^6HnVi6YJ218A>>GnlJ\W!;h(K!bS:m%;N0Y?qeip`_0n:*qU!KBbGUp$^sdKnQ5Lm9D\SdjWLn>]2Mo?\n+3_-gHVH@V1Th[WQ1poB5Ls5rTX70)kJ;7R+2#>Rl<V&l<Ot6%ijN/dZ"_,-;Vgt;o1Z8B=TQeU@QIlm7Q`QLO0!$4*m>Q79X>2kl$YPAA+f<gE:1&HNk1K<1%)ReZLS2a$7%r_@K3X:P'EDed>fm-%iPAIEg$=>#lhoPkH:tL6Hb9'XETbs!>__cqB<9(uab^p=nsG^'0q8cAkN7_8Z,eD9a?I4.$_.28!r\!IGFp)9?*R+%F-sAjf550Y%b\Vi2U+$VWH[K.,`(VA3\+[!5j!49o:;+8_q7Eb][.OKU7Xc'U\(-N%HY5C$"EUdu5ieeq)OQq[%Xm6P)q'-s"d4(g3Og4A-n4(]%au"'e6dLHQ"#c->%G2)\BN_u4]<?c;B[\+4!H/2Sg5`@">_j#L(LF/^kJ9?W9]M10I,P"Wor%bd5%*c&figS&FI+L]>_&ShZo`*e%B0KFUT>+;fe_-$cU^]\:^ats2dYb=D_oU8Y=6>hYDY"bJ>p:6/oPhcU&i5;KXVhk)1U@6g$)Kl%mdYRN&Mo7h?FE#mHDq_:\ct@R%,0%Kt?XBeEp&_lLg:&^>Q0u@8K\KuA)lUYMoMCNbs*IuFW#EJ$#dm-7,VU\d828LGNbHB)'FdXC6rpO?GGmTYe7mDU02s1G3D2sr%Y`'%WGe15<,_l5*X$'\Y1;1N^a0$9C3dstck?llu]HqThT/#Sd^&BkFh)tJC)HZ7sCAJOEXLk7$kRX>7F%::XABA</m*e&'OrRDX%iah$ud.?4V4_ljO=c9@H&U6*9TU'8o#M_I3Y:nnDU5=MmmpDDSL\-a`A?=N]Rd7/R@.Mu$:5\10cV*FK/*(b+3,MjBij9>l2/qS0%*VecQ1PG3_bf+*\kQS&jP0S<Flj\'3LFAV7=K0h/:YJ*,eQ:>3U(/khG*L5T_l-V#>;TZIpdiW5)kReP_+^*N>'*ZF5HcWL43sP-%hJ0;WO5F"Sma#No%QN7i>nb'D-^Vo\):`j-J[;2_X9F0/)t5d_/+E@c(TE*g6>m,o_j:.V!3`jKaE)RdFH3<+W'`bI#,IY=nu?)F%*:d-"P>*=mj6pRbTB:Bd#"3qMLR4u0=Tqa*5BN:r_r"gXahcl?g2i@l?gkU1.4S6aS?7u>MB^#$fQ2+*RSfB<hFeIK;7%VspGt"6%qDPk^iKQLp1tPmRrDo'9_1qMQ%-7M2O3d-MQq8S!WaOu,D_I;$"7MC^JW2$/p'k4GjGdM"h"LMH]hgEXb-:hHDkPif/\Vl*7C$BH%VQr^T*amIZOs[oan:(12Jj'8M8KfM_=_etpoARdTl/ciWZkaNV4l@k??X3[I:qB$LA+TO@?4o\SSJ>KIr/<D]f@N*YRUGu]\;=oT%cL`aa!n4pf*%t)(4EI8c!6)FsD^MWcW:7K:fID8GpdCAfCtW'VApfN,6VL?CMmfjL?tfCl"5=kL204V7ZPL+9`Z-RPDneLZm]h%c%&MJtbhZV%ZW]HR5_ttTJ69Gp\Hn[PTHAHH/%)*p;S/`AZWkIa\pp*Gu,UlSf[%m)9'MIC*Cu&?Z<g4mUqU1Qu\%\LaT_MQr6K1)3%].;!.Tu4%a%!o]-m!r,g(_<!\HsU0u9HqUQ4R=Gk?Db7WZUb"DF%h!h8QGX(6'cZ-"k%rlS[=B6_3[Ag$i=e@VXjs;bJbH/Zj4sd%\Kc*Nmi7c?E)0F1Of)X8++bEdp2I$WVtfhZefm%L1ll<A\L!R;J@ikcogRY:1acm7qNV$/Mr+2>51%.U$SN=LWXia#o-s\kd>'"D%oQajBCt1P>]DbjogsjEnf:,sEAmuVfW"nl3q<MC$5jQAXN+Qur#UI-X;Lh>)VVMh:prlmj+WjYcd``JP<AZlLGq3*_+HlNYL>)"^%k[j>*9`>@D?-H3tHe.7n8pX^2\C'p(i5rHDh#3@Ri:-`%%3$]6(EXD-jrsAe(b.GR?;`=]p`tth$3Vs7in]N+qM,1-*\Q.Ed2[A<%pm@Mo_1E:-"NEPh52u21,%_HZDV448:G9UXAS+,E'%a#K9_YX3?CXhuH<KD+THc0+Ud<td0JTiA>5546QSBU"33c&X#gN[rF)scR%;-#sK.YD(cF1Qa#%/R(RK6]YN3P@4rY+i>F#S_hGZNXM=VEEf)nTfNp1PoYM>t[;S2]6eBVS%iBESHlRh?Qo[glt^[MLSaT05M;2%:Npj*bgf<O&"Zc2A75V&*Y?f_LbtmNP!1gO>[V`"OFSM%Q%=Lg&!uXlSE;eHOW#XJ_2`P.,kV1]O3R!KGY&T060<A)9p@j0!nP!c%XkA.5i*`k8Fn*D7*3[[_bhDIO]#jgkl>ZQd/3EH8W]29W_p$L;9m2=\^[)[qc/$*D8F,'*,XC^=dYZ7f-IPcB!>hW1ERTcQPZ+;j%)q+G%AeRc&gh$S6i34*0!Z5g71hG-<g#UXThL1mL((D#+ej.r/07:7JC/paI.T*383T:MOdWL=I2b0Y]AP?j?(n(-NDm5hLV!;>0%M7:*]bpBi3UU<W%'Qraf^sqjE`WPQKS(AJHOsjcLdIE,.8p!>9oPE_l1X:Nb"\s93<j0EPmpZ=5Ch<-^p^0(2\+\n$)/6Ob!keVK%$a.!=+)A(5g?V)CB,p(]5f1>G3P2i=+4$mdG(%C(UrsXD[_bU>aTJ(E8"sN_mXFJ3EnFWnHRQ`>Cgs'K[X$?(m_ZY0LH;!fbtL)t%'([RLlS>TOp:M>*)oM)C>"K;9impNK8W"fB7OG&SDY+RjK*0oiK"sYoQ\,d=Ea;qZp6SKiC#cLep1g[.BDYVC\rsu7^6TKIQK8&^%k#PEPD-s3sYtf$r38>c6Lf$mn@dF+nIkBM*-C5IEIc:Bl6C9Pq['J6mF#e$,O(c?NYnI<gi/05mr46SDkLN)5Ng@\GWAb:j_Nc<5%(P,YDLVu^>J=Z"QL+I"[ZAnK[junsVa_jr,UUY5nPZSLCE-E$mRW$;NZ`0O_-%jY.dBTWm2/$9:3)!I-2^p+mVflcPM]*);^(3oX%jC7iM8;^?:/Z5o(n`Yr'QOeVbUN.X2)2+2)Hc:^VTam:8Bs[B2E9pSh`<P<0\N;L4l5P,PO>ts9#^@/fQ?JYA*!h#/R=ZZPW$;%V%XW+URKc,J!#WY2@F`W3ln`;+#(=&#L22Q?#a<kk*#I6NuL_>Qsb3.Hg_+]Dn^7#Y1aUU_&*uhjL`=[[D_+1b3.gTr"5P-Nq0O'^E%UKX*7N#ZhLmtYNF&gXb'VoNBQ?+ciNK5WtXL_F[iW-a&Z"Dpo"TY4LR9Fr'Q[bZQYOD&e!2BL.(Oka4;539^8.8Fa"c1SJJiLYWT%CB_i?X"f83a'Z"Y@6r!5rEBP:SkSeL%;Laf8.[I`lq!ue'/tn5D0<5gU;[f)4M&p&X!:U.>\f>7<EGd%e0uM]"5'5@Ca+_l%*PA@%02Xd-\Z1U>]#c&.XRie,?H(LU[b%;imL3/40P/0PY'mWe8L0+m(+*e7)&IPG#/_U)RHl)X)X)YPb3mHg=#Ur^7oo8F<JJe_7Nb8P%:[<:@HZ&'0"+QP+]Ip;9<ifD$i\"_4bNY,no@V'aWNhZ%)*.A0fYt[o'dNiBPL$ORcfuH;QBB;JQGqE9@*sS>.7tFZC]e2W*pDZb%]u.5q>@+b^VY\KA,YO[6nHob.l&JP&n$U2!n^G5ge;BTP2*(([n'"C/4h3;AjBc84G9-H_XF_a<.q\H2%p[WKWFXb=bt6OE;X;54%<7BD1;6-1NWTELAbT\abR@%hH88ko4@t`PVCC>\I.d4\>Mi8&@RIbNKT]nm>>39\Y>0j\r[r`[YCW^cO&1`RaF_I%Aa*eEbpIQX$%+2UJ=[bsksDPoMrp;8>r_r&Y>\gu9LXd#2SfVBnDX0am.RPP6\Y-\PgJ;.Sb-5ak5%^/36NaNs6Gs0%k0pFQUd,.g-/H,Dto!u+A%q1*Ab9Nd;='B-sR>DlMp?a4X<[*jZA2T@f)CWC`u!LsbYl-N(?/Rop='2bsHHgX=!Od`6-dJ&:#pZsLKhiu>Em3HUt32087,55Z*%N4rjd]']fkjAs<L8LWX0q(Mg$h]1j,21ua-AL*?'aj#4kHQgMhO.!fCOZ9WKR=bm9\N)@fS_k;ZE40@<FMoKN[Q2e"89J"M!F(a9%B>X$p$]Z!B[YH))+q^$j?aK_;^rj+jbT1i@pD1^!S4)TQM'`rYNF3U3^BHG.FEK-iepJOu/78WQ(r]o7%_q/pa8L*J.r*7LD!I5?%<>EB-;$[_/kJ6=A'Eu-qN6p:l*_?b#&MUd$ff'Fh=^j5_!]odQ-IR5VFq*qTQ<V4mdT,ns]>A#YYBC&XGeo!kYM8Xe%5X62)1C^9%"EarPUEdXiL^"-\Rc-"OW?flWeEKLtHa[XK\5>tKAJHnMp>j@iOAOpR44NeBB+ml70)Yt*MAutl$@)GLIV2VUCh<<Tq1Bd"k[8pJ%%bF'5$krh0)=F5;`ucj5T:5\gR;s+jTr<*8+`$5HBg/9fAFm-9O37u9o!m-L+2o\>3;&W&g6/6keKdo7?P2,UOgD:OO`Z5bnYL.W%P2&cVAK%2f]HqqS#41;ST;cP3VR)8'"2(CLq,!)JAb*mjn<C]67MC6U#Y<7GJTZQVXWU5D?e'7o05YjO5euRm7'ZIASSmk#a&Z\2%"icoJ0N*J<nLcNifY!g7Or3?SDA^A\/]ocb+5c#DZ<O&AqG\K;P.o_X\d<iEe+>PF$X?O_V!MleZLog:q9q4$5P_#j+InccW!/2"%f6Yh;_nr8g!tWr::#a"tD87[k;KO%,#Nc:LPQ5A>6aU8Y!m"gg3.1p90d%)Ph$L5H2VX-h#9FoGH[(gj&$&WM7OPE_A`I(G&gIbf%(`?44[Mm7<^ljfaYc]ekk77*BY"1(!,kk#-[hu%ilsq%Nft7F:[QDs^)>0=r5R0-U:M-=-8L9P*K.TlS2Nbq>0/RGE[@GdWIk,g[%obD+geF5'ei297e)cBsBlgiLi/W$Z_>;*03!c*_uUt:WLV?0:#??58+[[+b<2GRSjX`>/lam;5g_kTGI*mX$3lC3qSVk)nF%nAJA%8*%B8OjWRRdLH\:OQbWGmqp6artafO"M/.\^<"UY\+.Z,\']n*b5rpc$G,D;Xg*-C-LCX+#Eg4f/AVqC?^5<)U51NkNE"('+K;jS%.+5];;X'(R$5V9_<&kWQ'0(;gfcP*"M+#UZBQRZZjAASuAf>h:NqQhNY-)-e<1FZ)VrQ:FK8-V:K%$SG&cCo-CLLNY4_@".c0X$e%`4@tg',h*/5n?`0=r-bND45jq^Abjk+QB1KEs*+q?[r+;C<`\Jq/Wp.;M-_G@/&<d^5/+D&T?:]%)bppl`_M\-QHi&PFR-Q#mn5A%GoR+%\hP`Jpf"YR4N)]Xe\]7oMX7:R/JejiHbaKf;a0Aar1b]U(mSO1*]0^,A84QCp#/mC:9!Q\7<V(YO@LP</Q'^scojk%0B0F7%akrLuSeDfK1'PJ>;f`"IG1<iHa%gE9AN^Nmk#&T&#?"JEOH^/TlO8)MSO>:"3K'RJ4&@T0QH#/[9QiKs*(JA!(bYb%rH05(r+Yrg%:3'8dpChVM`?/\Z&^K^>/Po(sSpc1eLsbOH\4JOIdS@B/jj,=dm7Dg$SY_FEK[g9eOY.JN.XlSHdZ?R&F[I0M'#nso`hj%a#Vc5!%Nh'6X,<RVE!t#SH.9@j"Q=@6U.$3`"<GQk%Wd:cGagEWW"\#:p)&2\6hip&#W]Pc"$1H=._W<S2DCmp&dWJ45o8)#=(N`KkOjX+)%6:E95-!dc41dcY90KJE+RVlm$_Z7uFIQIO3c3X*%c:A'9E6*08$S=@@VeleQ"*Q^6juGA%cKSRGG?G00Ql:@qaOsI'$)VN@bL<"V%,VeB#QZsiOO@fJu1(hD>ke$1FSl0Q9o_MUG)HRHR<8mQ[m/&6@9Y#,M;H0Gb.;);G;&PVj!1Pm5U`!b1&>H+,XMgFm_&8Vd.(G!I%]2Q-QB<JQVfhjo_fhc"3TfulPnTfNp1PmBl4bU0,SOdqUZ>R2;j.r.6q&F_sS,&VM@L*[_DC=H3%Y8l,9GF@6gXO;2bF9sk8`#Qk%k_s+96qcG6.qPWJTDEU%F]`_sceXSEDU;D5+WFA_b+(&f$8a=9D,44kOi.df`4lKt]:!?Hoo/PQ0Yu;K:P)T<)L^S9c"!UC@=@7Z%e(8^ZoYlC3_1C177_aoJD<[CEM5GTd27at(.8hD=*k`O?\khi(FUHJGe@rQDkmgug*O8!hb+(7F*0RQM*D^<+Oi._Oa1mMV5+PAo%[sh9Ui_<Q?FF%@T^c,p[]dr,>KW?:8pmUJJXWQN>_H%'->!l)02WW?+L7pb<[`o\(7G3NX0]W>%3o0,&@$hWoAgA($HFRDtBlhqW%RSaYV1L$N;;!%lH*hV%#0p>/>YHhm_+h:?:+J79#AD46t3OmjXJ5;nGac*8.Z9m^\e<bX/n<T.C9tS.(cqieM6i&rU`R/mo4ZFW?%T`j.'%J)=Wdrf`)^^j*IkFBq`3R&6-'fGc;=R'"AGr%eM!cdT5YD3cgZ=8QLQ=P?S1!%:Pd1>X)`PPgRQ!'%fpfIm;21#]DlKJ#(%UI4Aga'5Dt\6<NAPiZjH1R7KM>oO\+>VG'sK!ON:h*04[1Ou;EF;/\$7,FKngQ'Qje1t&m%saB8TG8<&H%::\kOh9f,a.qg.=Ud]%l"-5SPk?>Or6"O^k2nl+>^:SgPZQ.K!BhPrH<DfqA>:87C/h"LkF!ol78>]8g>SJGqb_r#p'V/O*c,9^f[-^FKu$IoVij&/f3PN%%X&8S(7E?d4]E<T#kk.C",b"/5rE*9KR>gW(5M(sW-/8Pfbh"^s]Jn\@/(o:m:AW'PbJo=g9&L,8eiA*&P'iMGYbVNZZoKG7-qhq!%b#lK:SY6Rp#X^fSDa<hU$ZfrSmuBAE[D31Bi.)-dZ',_57XY9mA+]UADA#ZkP997]I<lcsE(.M%O7/sYbH!=i\1=4`RG\fQ0aFss%a+q/kX^k&r^caK)UJHW@lOGXfN^ttK2"Gf,bQUFEWk#K1&0[;X)XT.7F,>o9$UTo3U)i?[8D414*h1atnWG<["9%t<O&cOW5eqJ&%Stu\tQlh]-j%$&W/Tm_iK)4*L?)=2I:YXI-_Dt7R1L>6D`P^:ALHtO7,A;g1D0%ls?]9;"=$6&J%'!Cj_`>u=@)hF9G7(#3i;*pJ%#UD_r<)2=,qi%8GGCJI,T=<p)bI:i/=.TMSYP-cb`L\[$F-o4SW:-\6^^ScWOaGq#N^a&<[NTM8)/00"LUG_MnS$ph3uDsF+.5su%UBBXR^ZZ0R:dc>068coU1Gp29l!_l8)k0B-a)gAq`m0DVNf+qd@sVhBYWZtI%uu^9h@bEqhulp>Z,ZF3a(81*U7H`9,^i&6UGL="%U(9*L\nu^Cn'ee"ofe@RNRHILk^uY"oL,`92`3R+cIl)j$0C_3YGW>/BZ7.FZoS+*1!!nlXllDIAE9k5E#Q1jGYC(;\@upT!\Ws/%R&aGnq.'lWTTPeu=>1M,E4pqbX-4j.(.B4-@7rQZ%?-=jK\IPC2=K$gTpDr.HB^S#!cES+ZS+Qc0m\6[2i/jlTrSr'-dua@3j.Gk%PLV^4^-"ltl_C#n6O:;LV1..p"ttsh>%^Z2Xs9Buj3WXZ>WZ1DC"A*G"MINi'8;n&o_;8aVD&?DTKp]<SRV$6C"=I]WX$ba%]BO@%cb;kiO4!9O\4JMsC]Y*^pl$sGhJ,%P690LsF-i>.NU,gF'jjN@+R(6h2u!TPX-JW"OHDG*k:q0]GIZhuPVc<AZ2k2^(2[LSaO$^n%#PNPTA:$i/\>sb?&nR(=KNKEH&!2-c?=1WE,)K7bqPj@--IMe`>0Z)-_H!>N"<*mc]59!CH$iFC&XTer8^l;4i/'McZ'i^A6*>)R%F)XP4;hECcMGW0rV0q";_*3TMNpekJE1FC_M&Pf(He"g#Gsc!27aZC4mGUHt8BfY9eSXkg-P]l'1qV_neE6#=V^g4"b[Rqm;,OrW%+9hmnQ!JINq@%(M`_/^$4F1U\RsR%PX>#WHc:\j<)qs2co5H<=HOUW@]'IE+mD4ji5S=Bu8">#%,7#PmH:#$2YkAq[9BU9>AeE,B%dHo[?S:fXpKi>%F=Bp,;EE@8iDloLSjp4"F.s-*qXMGL8a)/>neaqsoM/M>aE:='ZK5@"bc116*`W9;--te-J!lo7&a2<TZObh+>%eT.>DVj6oU<kZ`+]85,o?G4+]Xt=$$ZWD-IG*=:UHB<:h#9fGm0DhX&gnFFZDG-5pY<2AS>K]H<f#C"f]o^"Q=7d(iWrY4e`i!<m%=kmV!1?5a*4CL!1]/J`a]HW!GW*ABP':_ViAAdK-@>`'gQ/tP0d0tTYQ+s_Fk[F_tnT0@5PGp#Xpgau5k8/r50V'>KGnk<o6T)h2%4]07?9sEh&!O1_BSa;!5eX0ZqnO4Zl.Zfa9JDF`,HA5(%Qtbe`9/9^gah7!jBX!$g<faqK`eniBoq^FoLLrKZNSI9@-us/!p@U2]%3/Cr(^VoC]aRpo>BXFQdK1(Y2Wn>R&e9J8u'lYUP:Cd:Brjk/:p*@^q(lJ_hq6n$L*%OTcoK^"-@r/hL@pGOj_E[1]9g1F2ER(s3%(1-YJCfIGp-G*h2d]H"0$;U0tUbl1]%W!iFk_ca!kQLX[#!4POM(bJ4Mf-Q@<1Mc>B<&YsXSuB<ciFU:bD_N^+t5V+noSOY8IX]_%]!c3^T=ujk.e@3d$F:8b;giiRPD^dBL3dl`_a>lt*F@#]8561)]QQF!>38b:Q5jqEX3==M>+2UfbI"&!$(b?TNHhEW4o.2Mdath;%>^]O)j0aM#"]-GV\tSk0M2WKG%@*POUms;`;NY@rgGECU]A>5T+`$?T&mB7m'\A+9g:CB&a@rTJo=+'/bOOKpU1qM5JYYV,"5esD%,X?u%Agp2nWdS3HL$QkagOh"hJqOb,hkBbA4.Ae#[go:T%Jc1h/.D"[nlqhV@CNjh9!/D,lQ*OqJF&/)d=$=!$3D:uVq2jlQ_`H*%mTI=s6=ZY^332d@'71$8Ek`hMB9-(SqMrGVLXN=OkCh+#l(hTLL:&@"<)+VD?poZXpE0_e>4W"pHj5_uRHCL2!]IVq##44fN/oR3%`=!G$J%]oj62iT5N1^i@4qZodC5_LN%&VIOh4YdO,[,&-[3O:mN-Jk2\[g+X)i'as'AAs]FlfUK)!8@2S51Ljd>FK2.4iA\goS#m%o[DT#B!@n5D>1TCkq.qc\;QeP$\T?ro/_KY(OV-LhDd^Wn=ate/h<[)(84PD=!\pmm+q\qJC@[eX+n0bDrOIhJ=gXF.SQhh-&.E(%L!+Q9MUY9M&p$O?KMJiF-"BA#@T0j]%jIl;57o"i+bCQM/dr>2XMe)L/.%8!9*?MJaS-QWd@:rnLML1<5&qN\*6Nd6YE8p"fc8t?%8F!-ZT:rr\AO_VU7:M4*m.#<`+s^#9b9hB:<tVW3p$<Y5<7lDtU+deseG.O%5_c!c1Z2l]9cOtV`ef761JHU*+nQV^i6e*MI+;Ol%)1\e;*ql)klj-Yn$-lEYn?[m78#W-\6Nc!r)l/Q\MT8ko&$@>.d5S2.I:L*M<(AfQAKKF-s&lW$K&a`6qAEYlq5oQii)t#;23MaI%/2*BHl8^Sp*G12381TDt!s/d>$mq^#U^%\6AqE?D]/002"o-7j?iq=gQPgsG6rJ65p$'gMOr-*QR7o67/A*f;[gE<'_G7fK)a#W!%.uC/p"a)@Q/s[s*fMpbOi\!L>%_:(0Oa(`3NhG3WZD@Or92)=)#5!.`60Il\BM)m,G#B[f>(kKcoY)l=)9a@sped43mCQq`5emS;%[GA+ER2(Uc9DCBO#Spoq3'l))<*\a(*MC$?65Mm5"'L6aR^jn6Q6mo#7M@n$dW"-P8`2]i8,-;qjX.-^"1BORc32f'NY-8kLEfY?%&Y"QTpgdN-9M:MNJeRsr+a+t9&n&X#&,n/ZH]BP:6gJ>iJ/5Z'9\.)jA9/f*%LZ,UY,1Y@lL?3U5ft:u:9>*#*Lc(TiL;TAc`S<6%Zj&tU_R,P!>0/JD%DOPhN3:&[nJNU]L<I4D'!_>u]Cs5%lgQus&OTbl9UG"H%M%tCDEgW%/gl4F#FIZa+j<_.:N`6Jo4k)RcTHa]%Y<ab-HBK_J.+=\GS:E.mCJa+eJ5>17,0oN58<g3SN>0h+dn=4f_Pd%-TAt!>[m\&ke"oDP-_kq'U#F.GV2SNq7:]T%(diEbD.^_#%j^r@/P+]78GXM]TlC6BaMBX]b"!QNEK+l5\rdpcD+uH5"dKJZBP4jlN6+BADon\[I/2Oj+68q@.Zl.`nb]ptiQ6_e=U0Cc,Q8LGu%KL:=aS"\;C<]Mo4YJ8a<fT@OB77DMlL_SK[MO^UfnPp%4[UuCk90R>qJ$btAq-b7&"+dtreX/W)\M>BTPXt?LG)si4)(LJM[?UJt%;57)ABf&>a/R%r@:H?"U*FI_%[F'DNS24]<cCM(,_YjI_SCmr_=Eh>eof,n:#t_WNhkUp2%e<Tn.]iS2"4ndqmbuJ(C+'+_J.)lu%LH2-lX%-59E`\Lh1^c.P=0n#Vqj5NkN"7@Ne16=:gRd4B1u!oDhO0Hhb,CS!#oK<A9.Y8T*FdkFfs5iqg2:U6Z9-Me5u]&erS^X5%QfpDEOV]F'G1mOjZj55H2Qndn,uO#p"?IRnU0AE\;#4uncPb$II`-goTm`<qL4MH8kc`2YE.L';HCL@\lnPdcOqN>3kXnBcm/baW%>/?r03:,Z7?%^dQ2k#YZ\r&OZK5*Z>ZdkI=79PU@qpUs-,k7@iF.AXXR:aP4aY>L9"3[pm&7UF6o7TnuVfRD4AS8cPU;ktC[N;EZ%K5I)NdYtI7eVMG&,-[(SN#dM#d-XT]45K$[CQTXfU\)CHoGH]mjrU/H(GV+E?5tLs&?VlKE\WEXLh&J>mlmC?Ml[UQ-\/[S]'Gl[%>HU@%4ku.q%abD_S,EYH#9r&Tg<]]A3-Ng\?&e%uW/#T,4uWZ'aB?'6&BnpFGXWERECC1H0;H@](\Nj$i!8[ql7EpL0MZk9l$gTh%?,pMB6eB((E!U:;]/\8l,Q?bWTdZN;e-aH["0om?dPlf8l;O)o.R;<.D=1Bd%O8CH(b8FX`0hn_X&s`hnlE175pZ!DQ=\^u2]7(5%0JV+p955+Rhj"p9j>lPX+_S*R<lCQH3OZsU[b-#1e*@m_Ean;o"?;%]5aisq2e7mS/OVtN1;V!\L-]1n1771^N;XC9>\5RN!_)%k%Ch4rXT^gD@\<$Et^5/1FZ>?N7).a_rEqmIul@bPNHuO$2#65`K@Y=O<,0)mqLXSLnX^nmI\=YZ`qTR+/S.E-mk*.^g+S&u,<7%?k%I&,??PRe!W5?tMO\=;N]en%I<3Ecu'M4csrmdYRN&Mo8SMaPKs']$?B".$X8nm7B6iN1Tp.KF:Y/TJ!25`@;35;tIqfIY-C/Rlg6%C6$S1"*QD9Td=WmIZ.eS(l;_lg0DbF'm1=8a9^=H2J9'GPlse8YdUGkRn.#@D:H?`eB9Zr3iLMI[S-$eEK=OGqiks/$+Y,.@:cPT%'c#klZ.1(`nc2lPQ_YL1$**kD.te9!(cqoAd-XS>F/iC4Zkh=l4l+df?AY@?@.*Q1I1\8ljKR%'j/S=-5W-WT_Af!b@(7/A-XBSP%I"@J+qm?",9!!a0=B*e;7VXCqW=Q4UF%I#e"DbY-BYahCNZ!TLi?5"Q,PLi8\]\/e,WikV@PEua.,?'7Z$Ca008\\"=iYg5AbU"8%qTH4@S*TCrR-Eba=Y;Is'j)<tC*@4P.sh+.oO-KZPp.J]8"/iWqrW\kUT>WH5UQ*9,9C[>TJ9pgZeZpS2qT*_/Q)[>8t;<\4Hf"2%G)so6Mg2?P?Dibt.th65ZsP0ubYgh]Ya8^_+.@pB,@?/R8&QbHbH\?1SPf,@S8iotMVu,IodN.e;!J7l#O32"KG6k*4S#:s+tOh]%Bf%+lVOuY#FjFpIRfEnf5U)H$Z26?",\8UaaMmq%-,&DU+26NH\gWj^!dRE["8M!?mS'`('[;R3OdH[6XC1I8]nA>?l+.B=>8bCn%!^>.p69.?8Jit2.S_bZ8S@-Ftl4NHInhrT3@ica7nTfNp1PoYICr;'CZ4%+pm&:#%"0YM#>b"2tJ'@dFkt2^o-DJc9Xk"B^kj#W"%%6]=7!V5#Nd:A#koPYa<=e8%#J0>PafC"Ur][^8!/Wp0(i66#&A*^;Z!I'UNl\h-%,c_C7#c&+cp%@ep^#EX29sIEi!GEEth4/l@%FdonAkB0^eR6N>#d"<U(=As<3Rb0U@p;S^oJiSGA^rKjh<PQ^hmc;Op79k"YY"am2k=c2g^f!>BqK-6]8c60UEcjcm'%,ILg%lY=%+UC#RD?.P(+p$&J:`)uNG&B@`Z'iusEF.6TKI&T$[Fq0;-Up-H\*(i>O&&(\6M[FQq2d9$6+fSpn6e:BQ8@$X5BhgqU[/L]U-rHK%/AjGn%\"m2^a-+(gZUa8H_N<tDQ[jhX?[hF;Z`LeA?E)i\ge@^dk(X"%u>@L7%2(6PpsRKIb8YRVcgBgZOGIJ&gTdH6`.7V%2Fk1%B,hN*G_"U[oD0Y;'#hE;I6XK#F(g_*j_Sr]Kj1XJ2$4TRHNI2PiJR6sc<N"d6V'nk*)1R:UclN%bpCX0'M7UWC!($sIE>JS0lD<*%;;5?tp=^*![T_SlHB^;@;-FFLI)+OtoD0YCG9kpg`o6jEM9>[/_Ro0Sl0Ht8`2;!;DY*7JH*E@mDTZ9Bman=JYj8f06nX'eO4;;q%lRC6fBF+d#E,"JU'+$j]CgcoDbN=lnKSHgg3oJ!,#^9lq0rmi3+L\#SndnCjP0KC-!pF1\O'<5XEB=is;1N*`+YdnNf/Z6.2m,`M%);'u%gN;d7qV/gp\T=)^bTPkMB=c1gdbTt<b=LcB2FO4Y,oOcdG?6P,/2E!/Xm$R_1YO%TJ7?_)ln^i/04H8jj=^;>JnW+jFD&su%-"0rsO`kb+X^g.'-A43Y8-+>T'n?+X^t-3+EcTI(g]ijHTY]OtfTG8R[*_5&f3A`="X7*Z]H;FI%gGXn8Xk=NQ+)m<6!5gY+L?89%'I?Z-#%Y:?H'*9SC."2jkpFAWZZ(^6TEY(k'0t\$J.VHug)M/=EKKYbO_mdN%;^n3`RIZ0gqlmunZF=>jm6]BcK&]bLqcueE&8&`%d6P+d.YbOPXA;nUOi4II"\s`TKjggKmEq92=u\MDp^V%[4WS[Uk\905VpOqcCFGK*M=G1u.Z1mtbeXsZhCeiM,BFGb.]iO9E@;+'%1nkq7GXd#i<EsSt,t)m^ZmfB;U2(;;;'PNKLEDI>SO@gEhg;Vt%^Y2>h?PoD\msW`4K.+s*!8<5CU^OBM/%)ockgZPi.u!Q)nr?.%^Q@FaCieT4pD>d+.(GEF?0UdWZ='e+Pr$f>B`uH^0ZV(j.$:H&*<J'.;T+N,)H0Nr6[oc?9"5?B2?B$drY3-RTDFd>e$aBEM(_dq%Hb>!_%(diAB6UN?oW!\k-TV<,_)W\@jEVa;'$\tK&Xnk"Vr";H+3$(9#McI10tB7Rf:m7>OcD/_&Yl>Nl0P6Vn\qk9X7;K2j#put%n^e!^0j8\0+Ik,)crG:O4ZXdgLO4tY1GIV2P4agNfP"a.s6dKDh)TM#M,AitjN:/$f#'NSh4S(MG;dj+T,`"@_e0T*-Dd9FFP7e`%d_*kO"8U%cATVUHh6g#r/g#DkMhE27MT0O'KN>7qBq,N(j06jC`j$FQ07-[,\C")O;&3,`O[K;k,Z#?0JocjilOb4q=m!XLa_\jd%DCsQ(ZskB:=qAd\4\si#r9M"4hIi!':\6i>:5#mQIrVlZc7MgKjl3<'nj$IeA*CnWK=(=t3[9#8e<"c_m"nh5=#sV!=7,jCm7EX#%P%-.%ap%#FPLh$O'"PTnfMDFAWf"'WAPNAA^L28a!2I0XUjVt*Qk/MS9htD*/X,k*dg4o3=E;6O>CT9t8R7DbNhTS+6PAFp1t4c-%k"a,+JhW9R9/>M6(X%elTK71[R,ou0^E$_opiI_R^h-8R?<<W-W+AY)YB;^_NTGEWZuTt?&mON1H/X<1gknMS+QhmBZsn&"4X+=[%P]_VqGT[Nn[(4W0Q&<(b'efXtjN<FC:a0U8f_0E#'1r,uZ%oM)Odc8WYM01^<HmQ=*Bf.[Ki!Z=ESclD@<)$)7bD7C<:CdQQ",$%%&nRdSIhrqJI:0E'On'&0]&BC7(aZ<4?$d2p#5TQiqM)=@4Ga]-f0&uhr>?kRmFYGCC"RS<msp&dYCjZ1GIGd_eq!N7NZK5->.6(P%1u#ks8^H]Kc5%DIX;8p5CQ09*1]C!U2aEatWiJbH*,0M*\>t7k3,MBaS;@h>T4@b.O2^Ds*JrF&.1A6S"L>C-QVDZ]1Yb`JL>H?;%Ogt^8>!Xit^!g3D-8KJhaOK:XNN!d,G40u/ZbNtn,E<uOBeq)'C^+D0S7q$fS@%V&nEn>[=h$"q.YnKmYMG6^=OG8=fBkU0FHX+n%Hl?,q89Wb9d$lbLSH]3/6c`PY+`UTHZ&Q6\ksdFW3,&Jg%]1`os+lg&4QC9j)LJ!k9^=sdTL:%bdEIHb$&f%p2QFuSnYnK=\)?'$%nTmSoU6]pR^B0_=:.rmPe1/();5-T`T*s#ap^%(H5-]$1T'qhXQe[4Pdn&FC=&Zr1@o;QH1%-m3UADkIgTll(6>4X(D?kPW35e8C%]8RH%3a7JP+k!,Ac<ia8&s'oAUPsI4kXmHD@mu9Fq-rY;DnFE+JA]rDE')b4hJeh12SmRSSN'n%@H>tA*AF)A$-cK-AZU=S#&Fhq%$N1,06+5uE46U^p3b)Z_j=HD5ro%!MK?\riO@ZqPnrlN0YLWE18PXFjSYD6.cY>/j82@WUR8`4'pUZkLa3g&C$Xn^FTb+M"Qjs"o%m;D+<PY"X;p`U0m2l<FeX3lL`*>#'K;/oqFB+8R*-IqsY!qF_L++[K%Ld\1_Sl0N#16F'QgZl@]\)U')b\pJN*Fe!_qd;Rq)C]>J%O8YGN/4303g;'$<OL.>^N-EY$2I#N"5bk]iTPUc1F%*cR'sJ:kU@)p@U\=QpYs7's6k[7c'g)7/"\[)o_??7\ra\pJAi,,\meiIl%fopuI;j=.V7.sch<6J.9$Q/LYX7npFF4@0Y*qG3D'k:SRbYH0u]27_nHpi\I>E^4C?s(:=&eU-EI1Sr6YX@1Vm:.ISI?P)AK'dX]%!G8F#2Wnf7RdFGqJKHh_c/"It9F@Cs>^GV8f?eXN?P?Q+!5mkK(hbgCmJG6g&=)0@Kb)Y8_07f.2H?IMBo-k3\Mf,mmQqJd.$aCC%6g(?\a=S#8d-V<?gu`4C?8jRp`@Yto'a-F5H,t[*gQ1!0,eBMq:3:63P=8538">SKUTZo`aAYo!1m=VQ/lZoN@X)kj(tRJ%>.'>X%(g!#S/k4g-LIEDPI'>i15dYJX1J::H^s"$tI4-I)!0<M5q54VlnntA_*^)JX>]th^S7<3pdMGN>%t]qf;3aCga3!;AhM8*pW.4KX%\^./;LtY.f"u0ua@K^"a80ggH6B1q.P@92DCen!A=nZX<>;`lZa1Ak,fm&C]>C2]I;a&^;(macL(B3ueXru'8Q2b/;A!hi_r0YuB%OB5="bkc:URPXaO/M[ArRA29Km?:6d%>DF7kOh9f,a-\I$q@O+5>[MXA<C*B<,MB>ib!5r;qV4&So8Ct@WQe9KkS=E$rmkOK1qab%dVKj6WJKnPdKtN3`JuYYTlVis?ks+jCL'e74Z64rk#HiFh;e,',%_J0D@9#BUD!nQg\8oi`2\iMB7&D=Wt2<aitMaX\pU&Qe$9M/%I$1:l2gE;'+S@167Q5:PZ4Cd5&LJ^'*dq&\#gS3HS4sskNRVmQcW-b/nG;Q<&4i$T>YBN8dF(,OcsUQ.QM$u9H*=\WpXB2i\ViKT%S_N)$P;Y9Up+T4J!2XR(lXOAi6m'udrbj.Y4U?h<U)Ob\g"e*!LG#>s[l^Ie):?_h!g;MNNi*hc87FMp.>a#p0@R;#7[d_kpImua%gHsG81SQo=%#a=\EShg-(&)B4bLrBL*^b:iCn!5Li/fCG>r\>15WoO>NHj.Z(olDW@]n'des^dZ"GqTc'\8XETQLLOa63+abZ6!7%8i,1M7[`%@lKS-(9..e/\'$6r\46o9J/DE!Jo8?9+W%>\BS:7NN,b#[K>J,L9/s[-f"%$P@D"ph*tsFK&#kKNm4K,pM2nnX\PYLl%2r)q"Xfu`F"6(O`Y:nl];+tj^W^1a$>F03&MJde>"F'6JS$<C6"h#pN#1d%f;-6!<*[6k"fI?>N<1*cc0.&"Q4.!A];i/[%3rrk:%+qg3(g>"*3n]EhbcAZL/RFrdb$H5OPUjH?QcVR42Z;$C%l=hHqbc]`6m95_eL(YR+b`Rq+6_cTj'`4l&M%?kkH^^1\Kji_2P;#'P%jbd0Bbj?f3da[uc*0'G9DMJ@CahX4uU#I&$fVB"&Tc0WM=j"g`Ut5^ur,?6a8IVXoSFfmT:52nfX[\l.bP,/*B(nnpQE,sZKg2i/%$6BD;[DJ-*MQHrUTLY(b+OfJ1VE/5rLU%+AEGAr"$?MNlg79\T9X0+^X^^mpSip^uX'.[nRehQHa63+abTr@rVGImp-P5[tN6P89%n:b;eD<O`J*H@>aLbZAo@("X/9:H]/%/&A-/`h,-Qb<LL^p[+I#oFZ=7L0*KQ'eOSbPP,c@ta'`\^.-FO]1-IB>3d&g?q3;gempO%hu:kbI60[mlM^1$s->nKnj@>Ss8;Cn)SL%qs2Va6^07&0G7_*P+S%/_inIi;,-R8)(+4SP"eX:T'r'bFfXe9dS%jC3qTFrlL/Zu+%E]`/Ymr+WNJ*$;$J7]1=h,f*BHGB7K&)[B8[pOU]^V3tq5Q%jK^\^g`fnZ>JFRLVM3JfDU5'3'j.-]9&@[XMS>;9c]mOr5Pr'rtH%l#4<9Dnl8G?f)_"r'1,UqsXRYQTtH!a8[?[mlnMdnLoCgrI90\qo>?/ol#?Ql[M4rhgPA+(=&!4j6qHnY49,0.LG!d'j*!gG0.79%rroAC]e1,.J85Ud09rRhiqgHnOBcGgO!Wf^dh"8,-RXKQ,m@T#dm]iS>fDV_Eg<gsl;bJ;UR,-%Fl#.?]%opW84(c#-XgO+"=]H#%^OT?\>*'+q^bpQa:p.*[lho#=>dp?0bB:P"]e8'/gOCabktf.u+41EF5-S&2>b9#J>HO\TracuIn14NXX^(EB0AAKB3K0#>BWY9:%7=Q=J#?hj5Hn?>aE7`N,(drj-\b#RXp@m1,T0!"&35Nd`l8BHW:k<7G#A:*4!e4!,q,%a+7#A+$2rUkS,ehiULWO4rnfQ*On)(>K%J55[5i4R,5*ofN.Sq3=^pNhqr=tSdZ&_)ENfBP@c%g$*Ni.QDs5&aR!+38d(T>5dMSZMkChhu]+UXc;n,g<Cu2@iXmP#Y0<0plEQ%\R:ZLhSC*]UB[VPW8[sU5l<UR?nE$gdsIP"bNj(QOa.-aU<)YfBs<<u=9l/AehM`nWHWhm@MsJG"$d;GZ\Ha,=G(29^dN]Q9Y`]V%%'Y`u%.AUoAqfn:gWL%p(K'79gnIrh"K[712!^M/F`=PH1nA2FM*!*NYY6XYH*W;6=9f4aF[L"gYS=8"QHBPX:LtQ[WNlm"WiTX<%<EA\b<S"JqCKnhgLYF:on]!t.m`raS]JZs[]/O^iA2bl8$[3uLZeH/Zq>1ikkm^8Cg[0jL0u-_GNUX#Z6Tf/[0qS&SOCp^@b-N.E%Guf"H4DSr0=6sglB,qp<WQL9c[`IMpaa/E3I,?j]F:6@.rUtlYs77?2qR?LZcX4Hcq6,8Ch66k?IFn81hrjTZDtpC%^\c!j%tF63%lf6$Xs7iX%s7YJ+Ie?LOr98.Vs822%J+`VMmi07Wrr1_Drq2.uo;dA*>!IB^iqi,imQ8^tJ,[W`IJiRfro-GOf0=]_eZXH!h/-:E%hN7b;Fas)UTDcZGV-a/iebdJ_s$a!e]D"P$qYT.da7I%?,tgIM-g3P1eUNoi$ca?;S$'Nt2LU&Pa'3Xj=&*U[V"`F:hn.0Xhf(tr%l0fTal[T]tRBoXK6M5Zf9Y&IPD5Ai+3G)HX;=")>B\+UHjhBAnQXa4JS4f$K[#T.V$?u"d#OK`8>RfKkF@u+$mq#-GocC?`X*R$&%4!-2Hi-+GZbp<+plB"AK<Qj.8R*FB3%gd;^C.f/P#F!R#LBIJbE-6%i;5d=3;1mY##oRi^a>3i?'Z:udom4RFh@3[FZ8W<ic-8?:%UX,OP$M_.us*$^(`q;,iC%lL[?/b6<nrrg8nd!Cg^R0iVO%oS&pNe?<r9,6Qk>AE=^Kp8;ernT+B6smCSbm'2H;Y+,"PbX_rNlJk%TY/=mETK&4)6WlNPkEhTT:l0iB)UWb+eF*:^OD7!rrZ7!4sRlc6.LH[+92*2n^DF<d^PJ0cZNs\SZdNVL4$6Rpn*oP5Mko`7cZd?%fb^+^J%W'?pAH$UOl[7'AA2!Ka<uu(4SN:'T<-R/3pJ`_MiR\82JioVGGY*V*q!c!Fm68?hiloJT<2AipUV_(j6p-j>Od%e;X.MF%&[e779?+e4Og4ZEFj+nEULQ5#jfRH:mb+_P\&BOS,Ci"dB0Z3MDa4$EO5&Rlqd9?p-f=mGpV6^:s7Y1XIdhi9pTs>gk1AMhr"n8j%qV0>FoA0H<rPs,sr8lc.qgX!#q=rXH^]2P?EPDJJbs2-kT5Vi`$*+$`#QOcfreGFl0?S]fMZ~>%AI9_PrivateDataEnd